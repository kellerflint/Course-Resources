{"/":{"title":"Landing Page","content":"Hi there! This is a hosted obsidian notebook with all of the lessons, content, and resources for courses I teach. You're currently on the landing page, below are links to the specific courses and resources you might be after.\n\n# Courses\n\n### [[SQL Analytics _ Lesson Index]]\n\n### [[AI For Devs _ Lessons Index]]\n\n### 305 Web Frameworks Resources\n\n- [[Web Frameworks - Environment Setup]]\n- [[Web Frameworks - Pair Program - Appointment Scheduler]]\n\n\n### Software Capstone Resources\n\n- [[Software Capstone - Initial Client Meeting Checklist]]\n- [[Software Capstone - Initial Client Meeting Email Template]]\n\n- [[Software Capstone - Technical Q3]]\n- [[Software Capstone - Technical Q4]]\n\n# Miscellaneous Resources\n\n- [[MISC - Tips for Completing Entry Tickets]]\n- [[MISC - AI Talk Resources]]\n- [[MISC -  AI Learning Community Exploration Assignment]]\n\n### Old\n\n- [[Web Frameworks - Node Project Setup]]\n- [[Web Frameworks - Node Demo]]\n- [[Web Frameworks - Midterm]]\n- [[Web Frameworks - Midterm Practice]]\n- [[Web Frameworks - Midterm Redo]]\n- [[Web Frameworks - Paired Program Mini-Blog with Database]]\n\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/AI-For-Devs-AI-Apps-Pathway":{"title":"AI For Devs - AI Apps Pathway","content":"# Pathway - AI-Driven Applications\n\n## AI-Driven Applications Introduction\n\u003ciframe src=\"https://share.descript.com/embed/iRrUJSjOOnz\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## [[AI For Devs - App Pathway - M5 Integrating AI in Applications|M5 Integrating AI in Applications]]\n- Overview of popular LLM APIs (Groq)\n- Setting up and authenticating with APIs\n- LLM API calls and response handling\n- Integrating AI services\n\n## [[AI For Devs - App Pathway - M6 LLMs and Prompt Engineering|M6 LLMs and Prompt Engineering]]\n- Introduction to prompt engineering\n- Understanding and managing LLM API parameters (temperature, max tokens, etc.)\n- ChatML format / system messages and user messages\n- Prompt design strategies for different tasks\n- Few-shot learning and in-context learning\n- Prompt chaining for complex tasks\n- RISEN Framework for Prompting\n\n## [[AI For Devs - App Pathway - M8 Context and Knowledge Management|M8 Context and Knowledge Management]]\n- Managing Context\n- Vector Databases\n- RAG (Retrieval-Augmented Generation)\n- Implementing custom knowledge bases\n\n## [[AI For Devs - App Pathway - M9 AI Workflow Orchestration|M9 - AI Workflow Orchestration]]\n- Introduction to frameworks for building AI workflows (LangChain)\n- Chains and flows\n- Tool Calling\n- Agents (REACT)\n\n## M10 - Model Customization\n- Fine-tuning LLMs (conceptual overview and practical considerations)\n\t- Brief overview of transfer learning in the context of fine-tuning\n\t- Discussing the trade-offs between fine-tuning and prompt engineering\n\n## M11 - Deployment and Practical Considerations\n- Deploying AI applications (e.g., using Flask, FastAPI)\n- Managing API costs and optimizing usage\n- Monitoring and logging for AI applications\n- Implementing feedback loops for continuous improvement\n- Privacy and data security in AI applications\n- Ethical guidelines for AI application development and responsibilities\n- User experience considerations for AI-powered apps\n- Future trends and emerging technologies in AI applications\n\n\n\n\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-App-Pathway-M5-Integrating-AI-in-Applications":{"title":"AI For Devs - App Pathway - M5 Integrating AI in Applications","content":"# M4 Integrating AI in Applications\n\n### Azure Cognitive Services\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/WUrYqLGRXB8?si=Po6Y4bUUFl5N48q8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Example of Computer Vision with Azure\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/0ouca8H6LNc?si=IctZksTyJpx_u_BU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Integrating AI Services into Applications\n\u003ciframe src=\"https://share.descript.com/embed/rcDe67fWhBF\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\nIf you'd like to use Azure services -\u003e [Azure for Students – Free Account Credit | Microsoft Azure](https://azure.microsoft.com/en-us/free/students/)\n\n### Back: [[AI For Devs - AI Apps Pathway]]\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-App-Pathway-M6-LLMs-and-Prompt-Engineering":{"title":"AI For Devs - App Pathway - M6 LLMs and Prompt Engineering","content":"# M6 LLMs and Prompt Engineering\n\n### LLM Settings\nRead / Watch: [LLM Settings | Prompt Engineering Guide](https://www.promptingguide.ai/introduction/settings).\n- *Understanding these settings will be important to getting the level of consistency and variability you want out of your LLMs.*\n\n### Prompting Techniques\nReview at least the following techniques from the [Prompt Engineering Guide](https://www.promptingguide.ai/). This site is a great reference for working with LLMs.\n- Read / Watch: [Zero-Shot Prompting | Prompt Engineering Guide](https://www.promptingguide.ai/techniques/zeroshot)\n- Read / Watch: [Few-Shot Prompting | Prompt Engineering Guide](https://www.promptingguide.ai/techniques/fewshot)\n- Read / Watch: [Chain-of-Thought Prompting | Prompt Engineering Guide](https://www.promptingguide.ai/techniques/cot)\n- Read / Watch: [Prompt Chaining | Prompt Engineering Guide](https://www.promptingguide.ai/techniques/prompt_chaining)\n- *Understanding at least these approaches is necessary for effective application prompting.*\n\n### Read: [RISEN: 5 Steps to Build Context-Rich AI Prompts | ClickUp](https://clickup.com/general-resources/playbooks/ai-prompts)\n- *One of the most effective frameworks for getting LLMs to behave.*\n\n### Read: [Chat Templates](https://huggingface.co/docs/transformers/main/chat_templating#introduction)\n- *Chat templates are extremely common most applications make use of them. **Only the introduction is required reading.***\n\n\n### Back: [[AI For Devs - AI Apps Pathway]]","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-App-Pathway-M8-Context-and-Knowledge-Management":{"title":"AI For Devs - App Pathway - M8 Context and Knowledge Management","content":"# Context and Knowledge Management\n\n### Read: [What is a context window—and why does it matter? | Zapier](https://zapier.com/blog/context-window/)\n\n### Retrieval-Augmented Generation (RAG)\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/T-D1OfcDW1M?si=06y9N9kKZ8qhatg-\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=678c8570-3443-4419-a694-b1840184147e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RAG\" \u003e\u003c/iframe\u003e\n\n### Using RAG and Vector Database\nWatch (and optionally follow along either locally or on Google Colab) with the following sections of [Advanced Retrieval for AI with Chroma (deeplearning.ai)](https://learn.deeplearning.ai/courses/advanced-retrieval-for-ai/lesson/1/introduction):\n- Introduction\n- Overview\n- Pitfalls\n- Query Expansion\n- (Optional) Cross-encoder re-ranking\n- (Optional) Embedding adaptors\n- (Optional) Other techniques\n\n### Back: [[AI For Devs - AI Apps Pathway]]","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-App-Pathway-M9-AI-Workflow-Orchestration":{"title":"AI For Devs - App Pathway - M9 AI Workflow Orchestration","content":"# AI Workflow Orchestration\n\nLLMs are often used to answer a single question at a time, but that’s not the only way they can be used. Humans don’t solve problems in a single step; we follow processes, react to observations, and refine our thinking through multiple passes. LLMs can do this too.\n\nThe free course (linked below) by Andrew Ng introduces how to use LLM frameworks to accomplish this. LLM frameworks tools can make it easier to work with LLMs in complex applications by handling common functionality and error management for you. Using a framework like LangChain isn’t mandatory, but they can be helpful depending on your needs. \n\nTake the time to at least watch through the videos. They’ll give you a solid foundation for automating more complex tasks and building powerful LLM-powered applications.\n\n### Watch Course: [LangChain for LLM Application Development - DeepLearning.AI](https://learn.deeplearning.ai/courses/langchain/lesson/2/models,-prompts-and-parsers)\n\n\n### Back: [[AI For Devs - AI Apps Pathway]]\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-Course-Project-Proposal":{"title":"AI For Devs - Course Project Proposal","content":"# Project Proposal Assignment\n\n## Introduction\n\nThis proposal is your roadmap for a quarter-long project that will form a significant part of your learning experience and final grade. Your project will allow you to dive deep into a specific area of AI, applying the concepts we'll cover in class to a real-world problem or application.\n\nThe goal of this proposal is to outline your project idea, learning objectives, and plan of action. It's not just a formality - it's a necessary step in ensuring you have a well-thought-out project that is both challenging and achievable within the course timeframe. \n\nAfter submitting your proposal, we'll meet one-on-one to discuss it. This will be your chance to get feedback and make sure you're on the right track before jumping into the project work. Be aware that you may be asked to revise your proposal to ensure it meets the course requirements and sets you up for success.\n\n## Predefined Pathways\n\n I have outlined two possible predefined pathways for your project. These are designed to align with core areas of AI we'll be covering in the course. You're welcome to choose one of these, or propose a custom pathway (more on that option later).\n\n### Machine Learning Data Analytics\n\nIn this pathway, you'll work with real-world datasets to solve problems or make predictions using machine learning techniques. Your project should involve:\n- Finding and preparing a substantial dataset from a reputable source\n- Performing exploratory data analysis (EDA) to understand your data\n- Applying and comparing at least two different machine learning models (e.g., linear or logistic regression, decision tree, random forest, neural network, etc.)\n- Conducting model evaluation\n- Interpreting the results of your model\n- Addressing real-world considerations like data preprocessing, feature engineering, and handling imbalanced data\n\nExample projects that align with this pathway:\n- Use a dataset of home features (e.g., square footage, number of bedrooms, etc.) to predict house prices. Identify which features are most influential in determining home price.\n- Analyze patient data to predict the likelihood of a specific disease (e.g., diabetes or heart disease). Identify the factors that contribute most to the diagnosis.\n- Use demographic and academic data to predict student performance on standardized tests. Identify what factors most influence student success.\n- Use email content and metadata to classify emails as spam or not spam. Identify what metadata is most often associated with spam.\n\nSuggested Timeline:\n- M5 - Complete initial Exploratory Data Analysis (EDA)\n- M7 - Complete data preparation and train first model\n- M9 - Implement second model and perform model evaluation and initial analysis\n- Final Presentation - Submit a complete, well-formatted notebook with functional models and clear analysis\n### AI-Driven Application\n\nIn this pathway, you'll develop a functional application that leverages AI as a core component. Your project should involve:\n- Conceptualizing and designing an app that solves a real problem using AI\n- Implementing a minimum viable product (MVP) of your app\n- Integrating at least one generative AI model via API calls\n- Implementing some advanced techniques such as:\n\t- Managing conversation context over multiple interactions\n\t- Implementing Retrieval-Augmented Generation (RAG)\n\t- Creating a custom knowledge base or vector database\n\t- Utilizing LLM-powered agents for opened-ended or multi-step requests\n\t- Integrating tools or APIs that the LLM can call as needed\n- Addressing practical concerns like prompt engineering and user experience\n- Evaluating the effectiveness and limitations of your app\n\nExample projects that align with this pathway:\n- Create an application where users can upload documents (e.g., research papers, legal documents) and ask questions about them.\n- Develop an AI tutor that adapts to a student's learning style and knowledge level. Maintain data about the user over multiple interactions to track their progress.\n- Build a chatbot for a company that can handle customer queries about products, retrieving information about products and inventory in real-time from a database.\n- Develop a text-based role-playing game where an AI acts as the dungeon master. Use a combination of predefined game rules and generative AI to create dynamic storylines and respond to player actions.\n\nSuggested Timeline:\n- M5 - Complete initial app design and API integration\n- M7 - Implement basic functionality and user interface\n- M9 - Incorporate advanced techniques (such as RAG, context management, etc.). Have a functional MVP\n- Final Presentation - Polished MVP app with advanced features implemented and tested\n\n## Custom Pathway Option\n\nIf you have a specific area of interest not covered by the predefined pathways (such as computer vision, reinforcement learning, natural language processing, AI ethics, etc.), you can propose a custom project. This option is highly flexible but requires more initiative in planning and resource gathering. You may also adapt or adjust one of the predefined pathways if you prefer. \n\nYour chosen pathway must align with the course objectives and focus on understanding or using AI. All projects are required to have a significant technical component (you cannot have a project where the deliverable is just a paper or essay).\n\nFor a custom pathway, you'll need to clearly define your project scope, learning objectives, and the resources you'll use to guide your learning. Your proposal should demonstrate that your project is comparable in depth and complexity to the predefined pathways.\n\n## Proposal Requirements\n\nYour project proposal should include the following elements:\n\n1. Project Title and Chosen Pathway\n2. Project Overview (250-300 words):\n\t- Briefly describe your project and clearly outline its objectives\n\t- Explain why this project is interesting or important\n3. Learning Objectives (3-5 bullet points):\n\t- List specific skills or knowledge you aim to gain through this project. What will get out of doing this?\n4. Project Timeline and Milestones\n\t- You may use the suggested timeline as a starting place but be sure to add any additional information and milestones specific to your project / plan\n5. Potential Challenges\n\t- Identify 2-3 specific difficulties you think you might face with your project and how you might go about addressing those\n\t- Are there any complexities in your data? What challenges do you expect to encounter?\n6. Questions and Clarifications\n\t- List any questions or concerns you'd like to discuss with me about the project before starting\n7. GitHub Repository\n\t- Create a repository for this project on GitHub and share the link here. Your repository can be either public or private. I would suggest setting it to public to help build up your portfolio. If your repository is private, it must be shared with me (add both `kellerflint` and `kellerflint-grc` as contributor to your project ONLY IF your repository is set to private)\n8. Learning Resources (*required for custom projects*)\n\t- List at least 3 specific resources, tutorials, or guides you're planning to use for your self-directed learning\n\t- *This is not required for the predefined pathways as I will have starting resources for you. However if you would like to indicate anything additional you plan to use, feel free to do so.*\n\nProofread your proposal for clarity and coherence and be prepared to present your project plan to me. The proposal review meeting is not a formal presentation, but you should have some idea how you're going to communicate this information to me clearly and concisely during our meeting so I can quickly grasp the details of your project.\n\nI suggest copying the proposal requirements into Claude or GPT along with your draft. Ask for feedback on your proposal to see if there are any areas you have have missed or overlooked and to check for alignment with my requests.\n\nSuggested Prompt for AI Feedback:\n```\nBelow are the requirements for a project proposal on an AI focused Project.\n\n\"\"\"\n(Copy and paste the full proposal assignment instructions here)\n\"\"\"\n\nCheck the following for any areas where my proposal in incomplete, unclear, or does not align with the assignment requirements. Provide clear and specific feedback.\n\n\"\"\"\n(Copy and paste your project proposal here)\n\"\"\"\n```\n\nNot all AI suggestions are useful or relevant, but it can be helpful in identifying aspects you may have overlooked.\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-Course-Project-Rubric":{"title":"AI For Devs - Course Project Rubric","content":"# Course Project Rubric\n\nTotal Points: 100\n1. Project Implementation (40 points)\n\t- Completeness of project as outlined in proposal\n\t- Technical complexity and depth\n2. Code Quality and Documentation (20 points)\n\t- Well-organized, readable code with appropriate comments\n\t- Comprehensive README file explaining project setup and execution\n\t- Regular GitHub commits (at least once per week) showing consistent progress\n3. Analysis and Interpretation (15 points)\n\t- Thorough analysis of results\n\t- Clear interpretation and discussion of findings\n4. Final Presentation (25 points)\n\t- Clear and engaging final presentation\n\t- Visually appealing slides\n\t- Demo (if included) is well executed, focused and supports the presentation\n\t\t- *I do not want to see clicking through pages of an application with no clear plan or commentary. Any demonstrations of functionality should be prepared and rehearsed ahead of time and free of foreseeable technical issues. You may also prerecord a demo and incorporate short videos of it in your presentation.\n\nFor all projects:\n- GitHub repository with regular commits (at least once per week with meaningful progress made)\n- README file explaining project overview, setup instructions, and how to run the code\n\n### Specific Requirements for Pathways\n\nMachine Learning Data Analytics:\n- Clean, well-formatted Jupyter notebook with markdown cells explaining each step and decisions made along the way\n- Visualizations of data and model performance\n- Comparison of at least two ML models with analysis of their performances\n- Discussion of feature importance and its implications\n- Future work or areas for improvements\n\nGenerative AI Application:\n- Functional MVP with clear instructions for setup and use\n- Documentation of API integration and any advanced techniques implemented\n- Organized project files and clean, readable code with README containing overview of the project structure\n- At the end of the README include:\n\t- Analysis of app's capabilities and limitations \n\t- Potential future improvements\n\nCustom projects will be evaluated based on how well they meet the criteria outlined in their proposal, with expectations of similar technical depth and quality as the predefined pathways.\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-Final-Project-Peer-Reviews":{"title":"AI For Devs - Final Project Peer Reviews","content":"# Final Project Peer Reviews\n\nThe goal is to provide constructive feedback to a partner about their project while also receiving feedback on your own. To prepare for this, follow these steps:\n\n**Bring Your Project Resources:** Come to class ready to walk your partner through your project. Ensure all relevant materials, resources, and any ongoing work are accessible for review.\n\n**Engage in Discussion:** During the session, take turns presenting your projects. Explain your progress, objectives, challenges, and any specific areas where feedback is welcome.\n\n**Write a Review:** After both you and your partner present your project, your will each write up a short review covering the following:\n- **Strengths:** Highlight what is working well or particularly impressive.\n- **Areas for Improvement:** Identify any issues or areas that could be clarified or improved.\n- **Suggestions:** Offer actionable feedback or ideas to help your partner move forward.\n\nYour review does not need to be extensive but should consist of a few paragraphs capturing your honest thoughts and observations.\n\n**Submit Your Feedback:** At the end of the session, exchange the written feedback with your partner to ensures both parties leave with clear and actionable input.\n- Make sure to also submit this feedback in Canvas so I can see your comments. Please include the name of your partner.\n\nRemember, the focus is on being constructive and supportive. Come prepared, stay engaged, and help each other out!\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M1":{"title":"AI For Devs - M1","content":"# M1 - AI Overview\n\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Understand the course structure, expectations, and requirements.\n- Understand the final project, feedback, and evaluation approach for this course.\n- Define Artificial Intelligence (AI) and Machine Learning (ML) in your own words.\n- Explain (at a high level, no need to memorize specific dates) the eras of AI, what enabled neural networks and deep learning techniques in the last 15 years.\n- Explain the \"black box\" and \"bias\" problems with AI.\n- Understand how Artificial Intelligence, Machine Learning, Neural Networks, Deep Learning, and Generative AI relate to each other.\n- Learn/review the basics of programming in Python with Jupyter notebooks.\n\n## Brief History of AI and the Current AI Landscape\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=172da466-e0a5-48af-986e-b145005637f4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Cool Things to Explore (Optional)\n- Great documentary on AlphaGo AI - [AlphaGo - The Movie | Full award-winning documentary (youtube.com)](https://www.youtube.com/watch?v=WXuK6gekU1Y) (1 hour 30 minutes)\n- Watson Playing Jeopardy: [Watson and the Jeopardy! Challenge (youtube.com)](https://www.youtube.com/watch?v=P18EdAKuC1U) (4 minutes)\n- OpenAI vs Dota 2 Pros Match [TI9 CHAMPION OG vs OpenAI Final Version 2019 - Game 1 (youtube.com)](https://www.youtube.com/watch?v=t4il-QagP5w)\n- [Eliza, a chatbot therapist (njit.edu)](https://web.njit.edu/~ronkowit/eliza.html)\n\n## Jupyter Notebooks and Google Colab\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=10252dd6-bcc4-42b0-afc8-b146017bc3b4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Python Refresher and Pandas\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c20eaed3-0118-4728-b43a-b1470159390c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M10":{"title":"AI For Devs - M10","content":"# Advanced LLM Workflows and Orchestration\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Understand how to use language models (LLMs) in applications by calling an API endpoint.\n- Know how RAG can be used to augment generation.\n- Explore building multi-step, autonomous processes that leverage LLMs to complete tasks.\n- Explore the concept of agents and tools and understand how they can help LLMs provide better responses.\n## Lessons\n\n### Calling LLM APIs\n*Before class on Tuesday please make sure you have a Groq account and try creating a notebook in which you are able to hit the API and get a response back from the model. See the video below for details.*\n\u003ciframe src=\"https://share.descript.com/embed/PCYtYwXf6W9\" width=\"720\" height=\"410\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\n### Retrieval-Augmented Generation (RAG)\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/T-D1OfcDW1M?si=DhMjtHcssvjCFd0S\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=678c8570-3443-4419-a694-b1840184147e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RAG\" \u003e\u003c/iframe\u003e\n\n### LLM Agents and Tools\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/F8NKVhkZZWI?si=OtIasoboQzLHrfuA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### LangChain and LangGraph\n*You don't need to learn the implementation details of LangChain / LangGraph, but it's good to know what they are. You are likely to encounter them if you continue building complex LLM workflows. In-class we won't use LangChain or LangGraph (because it takes time to understand them and I believe it's more important to start out learning to interact directly with LLMs before abstracting it all away) but you might consider using it for your own projects!*\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/1bUy-1hGZpI?si=CNnaWEr_H68DW_wc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/qAF1NjEVHhY?si=HCiJfv8IKxcQPrC4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M2":{"title":"AI For Devs - M2","content":"# M2 - Applications of Machine Learning\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Understand the types of common tasks in AI (no need to memorize the techniques, just make sure to understand the task categories and kinds of data / scenarios they deal with).\n- Understand the differences in approach between Supervised Learning, Unsupervised Learning, Reinforcement Learning, and Evolutionary Learning.\n- Understand traditional machine learning models and explain the advantages that traditional models can have over neural networks.\n- Understand the difference between simple and multiple linear regression.\n- Explain how simple and multiple linear regression models make predictions and why they are generally considered to be explainable / interpretable models.\n- Explain the steps required to implement a linear regression model in Python using scikit-learn to predict a continuous output variable from input variable(s).\n- Interpret the coefficients and intercept of a fitted linear regression model to understand the learned relationship between input and output variables.\n- Use Python and Pandas to train models and manipulate data frames (you will not have to write code during quizzes but you may have to explain or interpret what some Python / Pandas code does).\n\n\n## Exploring Machine Learning\n\n\u003cdiv style=\"position:relative;height:0;padding-bottom:56.25%\"\u003e\u003ciframe width=\"640\" height=\"360\" src=\"https://www.linkedin.com/learning/embed/artificial-intelligence-foundations-machine-learning-22345868/exploring-machine-learning?autoplay=false\u0026claim=AQGVTyuTZYVRhQAAAZIu5B5euNVEdSXaIJwGQzUrycJtDofbshEKHDxIEjYr-ERvYMNS9z3i51GmmSPsmcB_-Hp3qgo82JYiLOIunmVPI0TMt52faodpIv5wkRHqukdJ-n2Ywn5JuCAw3OQU-JoWi43LMecv2PD6fxVCaDthZ-Cf6zyFm8PNqm3Zg6jawt9JfKtKLxu5UpEmeJwzgzWHuMuK0KEqh1eN7B7sfFywRXz-DegLY3rSdXrYW5UDwlt63GUHPWuNCGzplF_WUzBEo-PvSSA7j5Wv7Wo8s_Ulf9RohFEmoR5gM6zRWNEXuLFqgdxDR7y1qqSYj-Rk0gkoL3H9y4OHyg6sL7Rm5Jcz0HWd-4BJlc6q2nd-HJKaxFZBsPYc_HRSAeAoiulfNJvZzvmHJ8lvT2is311uUMVgrk4jcLyrTbbedyH5OHR61ME411SKG1PldWW7YTx05GomBvp8pydcMm8BJ95DX74ZjqHssHApgfYrm90dHSqiWPhHcbbdcBEIoZfZZRzNUeMOMz8uz-8wKnO37bydjKxBFWJ8faLIEZsDJMQ4MRGad9lQiOZ6SOOtEFWMHHNMTK2j3k0dSNHf0d-JbYRoFPi53C5h1AN6g51eKSIi7SuuAjMe3eDXG9wq4K7OPjE3jFlBTGMDKU_yvYa5YzeZPtiCqi6ipk9BRe7f9AcunXlv_sXPX9mRaOjjDGl-AMKNm_WBh-CWUBapsvY-lKPoX6T4_9ixW2lb6lPOCmcbxlG5UHckC9fSTIukzeW3624bkCF7-w0tGtNOBAVMupv8nVBEgUlwsDkKZavAKHq-zqWLTTwITfUk8E4qmObxPIciGk6uDjzZQ1ZDyHPYbdspO1nrRV__dOhDdJ-o_1f7ethUR1cywLCQ0nrhDGSnEt_iF34QC4J_ybCFWMWObAmf6Hs48zp8iTQbgz79vEFV3wSZF0mHA6DHy7dyPtnNgG15RGx5uWBZB5uWDFq1qZ9hooIi7_UL_aXBimrkVFRHjsRxzQY-uill0iBMYdcWBHC3fZGBW09DupCsjAHDo5doTXo5y1NpmczM1B4ijmVYA40gtwjr9xdf_C7_sZNQp_jhijPdXhEExXnVTNFfKJtdo53btOjde2-Kq7Km4L9yedbhN8xCAKOYVkC-kEiZ9pH7Pmil97BsPMtUHrfZk8N4kOS9vubsoz0mEX5NVPoo3u_85S_RjFGS9ZAh7eWj-GM4PmJZh89SQq4y\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" allowfullscreen=\"true\" frameborder=\"0\" style=\"position:absolute;width:100%;height:100%;left:0\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://www.linkedin.com/learning/artificial-intelligence-foundations-machine-learning-22345868/exploring-machine-learning?trk=embed_lil\"\u003eExploring machine learning\u003c/a\u003e\u003c/strong\u003e from \u003cstrong\u003e\u003ca href=\"https://www.linkedin.com/learning/artificial-intelligence-foundations-machine-learning-22345868?trk=embed_lil\"\u003eArtificial Intelligence Foundations: Machine Learning\u003c/a\u003e\u003c/strong\u003e by \u003cstrong\u003e\u003ca href=\"https://www.linkedin.com/learning/instructors/kesha-williams?trk=embed_lil\"\u003eKesha Williams\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n## How Machines Learn\n\n\u003cdiv style=\"position:relative;height:0;padding-bottom:56.25%\"\u003e\u003ciframe width=\"640\" height=\"360\" src=\"https://www.linkedin.com/learning/embed/artificial-intelligence-foundations-machine-learning-22345868/examining-how-machines-learn?autoplay=false\u0026claim=AQGq8rZZLdKr2AAAAZIu5MdKoBTFR8i2Luys8U7ldfvKt6wIvP0KjQAjPaB7Z5l4lzH-iSEZot0HHraxuIQIETEB3KL0HLw5qEKptOU6mSxDZ-2nQQzkqWuoGBww3tWwyJf0OeBOnBspnobFmRke-KOzVJd5KOUwj9U6MjMc7aUOLZcLSS8y_xqOcRbp43iF4avSBW0e_sb2jqqF8O6hk3qSGV5GJufiKT7ThnpLFEeTWIsrFuDyNNPJIP7MRMggiLzr9WvaCmEItoOICWsmp1XMiWzV_scnFSOtL93AdKGY2UZWK-4dVCXOLY_73I2apxbg1rIJsDhjEPOP2Ws_yJnwzdSoYOgWkk0tqIDDKl5FNCnL4f2a1Z0Rl_RAK982Y46NvHXDlQggmsvVMdy3VacC7OdUVJ8De79mzB79CO3yntsa62ycDIgZRAG3a_l1R-7JdH0fun48_8op_GlcLi5dyTsXRnfuBfpIMkwrFIojp0rISSTp-AEHWO__4iqCZc8hrhdskHs9hJ6Ft0Wsiei1hnCVqQsx7p7l7DeSGudbqATxtQ61Z371YuRo6F2rnivK-BJS8Z63WvZ0vbdLs-YEZuQOyLZoYgLN96U5VtkdC0ab3MTFWOx7AwCBt9gRt9dpYC8YL_rfu2XxEVvAedSEdlqOOeEZmbbVjjvHjEM_9V9e-conLlLzF-EJTIq6-u9YSGB-8yw3L9xSRSIKq58Tjv2YKJ_rq7lGqVC_v7M7Veq8IuqWfYHPmJGMZzI5dDeDxPRpEEwywvMEaAmor9z7o6fgKtmHHl8L1lmCiGh1DKUkk-QuKfU6LhWQ3eLxqEDIVt7LI5IFr9RKKjpeCCxJtACXbz3l9bE6-zJfzpvgnq34zlOO6WCJMd-fw3GDauHM283ewCGPxhN2r7IcU3-nHxVAlysdHBQSS8IMoXRd0fElQyv7AP8evglTxRxieviA8GLRQsbVEn8nlidMueJ8MOiouh4mQWQF0FItFOs9p7h2KmvrPKdinUbOoy_xpdSIoBxDn2akOBsLg1VaubI0OTMRyZY26SX1-_a6xUTxBatnqnebCXOLrbsRRtjKYqagns5k4-s8vu56-i_BkDfCHtsMk6d9HUJdKt6yguQnVkmsN8hkoYjewzlJp5oweU1sxb_9FEJ911BbjOOm6H9iQbqNKKCIt9xtD4-U0BiWCOetM1ddjTU5gLMkZ69ERtnyJuhhHTga2hlaMd_VNWC4Ny6d\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" allowfullscreen=\"true\" frameborder=\"0\" style=\"position:absolute;width:100%;height:100%;left:0\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://www.linkedin.com/learning/artificial-intelligence-foundations-machine-learning-22345868/examining-how-machines-learn?trk=embed_lil\"\u003eExamining how machines learn\u003c/a\u003e\u003c/strong\u003e from \u003cstrong\u003e\u003ca href=\"https://www.linkedin.com/learning/artificial-intelligence-foundations-machine-learning-22345868?trk=embed_lil\"\u003eArtificial Intelligence Foundations: Machine Learning\u003c/a\u003e\u003c/strong\u003e by \u003cstrong\u003e\u003ca href=\"https://www.linkedin.com/learning/instructors/kesha-williams?trk=embed_lil\"\u003eKesha Williams\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n## AI Tasks and Types of Machine Learning\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=6f841154-530c-499c-ae9f-b145010e5e6e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Quick Intro to Simple Linear Regression\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/qxo8p8PtFeA?si=0ovg0oldgqj-FDK4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Traditional Models and Linear Regression\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9c4076e5-f9a2-4979-b054-b14a0052d8cd\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Linear Regression\" \u003e\u003c/iframe\u003e\n\n### Links\n- Study Hours Dataset: [Student Study Hours (kaggle.com)](https://www.kaggle.com/datasets/himanshunakrani/student-study-hours/data?select=score.csv)\n- Admissions Dataset: [Data for Admission in the University (kaggle.com)](https://www.kaggle.com/datasets/akshaydattatraykhare/data-for-admission-in-the-university)\n- My Notebook: https://colab.research.google.com/drive/1h3-bCRU2JQ5VqFLbshVIK84HlITYwV6Q?usp=sharing\n\n## Assignment: Multiple Linear Regression\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1eb1e8a7-d650-4e3a-8eb8-b14a005b8b26\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Multiple Linear Regression Assignment\" \u003e\u003c/iframe\u003e\n\n#### Instructions\n1. Find a dataset suitable for multiple linear regression analysis. [Find Open Datasets and Machine Learning Projects | Kaggle](https://www.kaggle.com/datasets?sort=votes\u0026tags=13405-Linear+Regression)\n2. Select the columns (features) you want to use as predictor variables and the column you want to predict (target variable).\n3. Create a multiple linear regression model using the selected columns.\n4. Use the model to predict the target variable.\n5. Make your Colab notebook accessible to anyone with the link (Share -\u003e General Access -\u003e Change from \"Restricted\" to \"Anyone with the Link\" can view)\n#### Evaluation\n- Appropriate selection of dataset and columns for multiple linear regression\n- Correct implementation of the multiple linear regression model\n- Successful prediction of the target variable using the model\n- Clear and well-documented code\n\n#### Submission\nSubmit your assignment by providing a link to your Colab notebook to the assignment in Canvas. If you worked locally, export your document as an HTML or PDF file and upload that file to the assignment Canvas.\n\n\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M3":{"title":"AI For Devs - M3","content":"# M3 - Working with Generative AI\n\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Understand how to use language models (LLMs) in applications by calling an API endpoint.\n- Describe the role of Large Language Models (LLMs) as a category of generative AI.\n- Understand the basic process of how LLMs produce text using the attention mechanism.\n- Identify common strengths and weaknesses of LLMs.\n- Explore popular web interfaces for interacting with LLMs, such as ChatGPT, Gemini, and Claude.\n- Compare the performance of different LLMs based on factors such as quality, speed, and price.\n- Understand the concept of prompt engineering and its role in improving LLM performance for specific use cases.\n- Understand and apply the three fundamental elements of successful prompt engineering: clarity, context, and scope.\n- Identify ways in which various kinds of AI can be incorporated in applications.\n\n## How Large Language Models Work\n\u003ciframe width=\"720\" height=\"410\" src=\"https://www.youtube.com/embed/5sLYAQS9sWQ?si=fzJFdm7wOhlYohNn\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Working with Generative AI and LLMs\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=901c005e-dd4f-4cac-9bbb-b16f016956f5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Basics of Working with Gen AI and LLMs\" \u003e\u003c/iframe\u003e\n\n### Chat Web UIs\n- https://chatgpt.com/\n- https://gemini.google.com/\n- https://claude.ai/chat/\n\n### Platforms / APIs\n- https://console.groq.com/\n- https://platform.openai.com/\n\n### LLM Comparison Tool\n- [AI Model \u0026 API Providers Analysis | Artificial Analysis](https://artificialanalysis.ai/)\n\n## Calling LLM APIs\n\u003ciframe src=\"https://share.descript.com/embed/PCYtYwXf6W9\" width=\"720\" height=\"410\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Example of an AI-Driven Application\n*Note: This application uses Google and Gemini but all the major cloud provides have similar tools. You can use your green river students accounts to sign up for most of these without credit card information and get some free credits to play around with. You can also use platforms like Groq that have free services. When building your own applications, I would encourage the use of free-tier services so you don't run out of credits part way though development.*\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/B1RKFL6ASts?si=0oshLrcHvbgUWL19\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n# Prompt Engineering\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9e54cd29-79e5-4d13-baf2-b16f01695690\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Prompt Engineering\" \u003e\u003c/iframe\u003e\n### Watch all sections of [ChatGPT Prompt Engineering for Developers - deeplearning.ai](https://learn.deeplearning.ai/courses/chatgpt-prompt-eng/lesson/1/introduction) (85 minutes)\n- Introduction - 6 min\n- Guidelines - 17 min\n- Iterative - 13 min\n- Summarizing - 7 min\n- Inferring - 12 min\n- Transforming - 12 min\n- Expanding - 6 min\n- Chatbot - 12 min\n- Conclusion - 2 min\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M4":{"title":"AI For Devs - M4","content":"# Using Generative AI\n### Why LLMs Hallucinate\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/cfqtFvWOfg0?si=SpADuljm83yTq91O\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Learning with Generative AI\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=19f3d17e-5d81-4c2b-8b5f-b16f016956ca\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Learning with Generative AI\" \u003e\u003c/iframe\u003e\n\n### Coding with Generative AI\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/Z_OSq0eh2xM?si=GCGNOiJ9XVMhkP2a\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/45QmLivYv3k?si=cBs9R1Ud9TcuT46b\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Using Copilot\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/jXp5D5ZnxGM?si=5fpb10RKiteRE7Md\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://share.descript.com/embed/7MOQdYsL9AU\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Get Copilot for free -\u003e [Students - GitHub Education](https://github.com/education/students)\n\n### Learning Paths and Final Project Work\n\nAbout half of the time spent on this class each week should be put towards your chosen pathway and final project. Use the resources and topics from your pathway to get started and make sure to commit and push technical work to your GitHub each week.\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M4-Assignment":{"title":"AI For Devs - M4 Assignment","content":"# Assignment: Generative AI for Learning\n\n## Overview\n\nIn this assignment, you'll explore how generative AI tools can assist in your learning process. You will use AI tools to help you explore and understand new concepts and skills from your chosen pathway and project work. The goal is for you to develop your own strategies for integrating AI into your learning and technical work, understand where these tools can be used effectively, and recognize their limitations.\n\n## Tasks\n### Identify Learning Objectives \nList 3-5 specific concepts or skills you aim to learn (I suggest pulling these from the pathway topics).\n\n### AI-Assisted Learning Process\nUse generative AI tools to explore these concepts (I would recommend Claude Sonnet or GPT 4o for strong reasoning / code generation but you're welcome to use others if you have access). Pay attention to your interactions, noting particularly effective or ineffective exchanges. You don't need to document every interaction, but keep a few notable examples for your reflection.\n\n### Technical Application\nUse AI to assistant in coding or technical problem-solving tasks related to your pathway or project work. Again, note any particularly useful or challenging experiences.\n\n### Reflection and Analysis\nProvide 3 distinct examples of AI interactions you found notably effective or ineffective in your learning or problem-solving process. Each example should showcase or highlight a different tasks or aspects using AI (I don't want 3 examples that all show using AI to quiz you on a topic for instance, try out and reflect on multiple tasks / approaches).\n\nFor each example:\n- Briefly describe the task or question\n- Include a short excerpt of the AI's response that supports your point\n- Explain why this interaction was particularly effective or ineffective for you\n- Identify any strategies you used or reasons why the AI was well-suited (or not) for this task\n\n### Evaluation and Conclusion\nDiscuss the strengths and limitations of using generative AI for learning as a whole. Describe what you found most effective and useful, what was least effective, and how you plan to use (or not use) AI tools in your future learning and work.\n\n## Deliverable\nSubmit a short reflective essay covering the above points. Your essay should be approximately 600-1200 words (excluding any quoted AI responses).\n\nEvaluation Criteria:\n- Depth of engagement with AI tools for learning\n- Quality of reflection on the AI-assisted learning process\n- Variety and relevance of examples provided\n- Critical analysis of AI's effectiveness as a learning tool\n- Clarity and coherence of the essay\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M5":{"title":"AI For Devs - M5","content":"# Traditional Machine Learning and Model Evaluation\n\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Understand traditional machine learning models and the differences between linear regression, decision trees and random forests.\n- Understand the importance of model validation and testing the model's performance on unseen data.\n- Explain the concept of mean squared error (MSE) as a metric to evaluate the performance of a model.\n- Interpret differences in MSE scores and their implications for model performance.\n- Explain the concept of overfitting and why it can be a problem for ML models.\n- Implement the train-test split technique using scikit-learn's train_test_split function to divide the dataset into separate training and testing subsets. \n- Train a linear regression model on the training data, and evaluate its performance on the unseen testing data using MSE.\n*(You will not have to write functional code during entry tickets, but make sure you understand the process such that you could explain it or interpret what some Python / Pandas code does).*\n\n## Lessons\n### MSE and Train / Test / Split\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=dad362ad-668d-45d5-b58c-b1510120224e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"MSE and Train Test Split\" \u003e\u003c/iframe\u003e\n### Guide to Decision Trees\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/zs6yHVtxyv8?si=6PzXFkkWQ4SAUETj\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n### Guide to Random Forests\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/cIbj0WuK41w?si=kuckfF88fvDTWesA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M5-Assignment":{"title":"AI For Devs - M5 Assignment","content":"# Practice Assignment - Machine Learning with Decision Trees and Random Forests\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ca716ba9-b927-422e-9d5e-b151012bee7e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"W3 Kaggle Assignment Intro\" \u003e\u003c/iframe\u003e\n\n### Kaggle Lessons: [Learn Intro to Machine Learning | Kaggle](https://www.kaggle.com/learn/intro-to-machine-learning)\n","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M8":{"title":"AI For Devs - M8","content":"# Neural Networks and Deep Learning\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Understand the basic structure and components of a feedforward neural network, including input layer, hidden layers, and output layer.\n- Explain the purpose of training a neural network and the role of weights in determining the network's predictions.\n- Understand the roll of the loss function in training a neural network.\n- Understand the role of gradient descent in training a neural network.\n- Understand the concept of learning rate and its impact on the training process.\n- Define an epoch in the context of neural network training.\n- Understand the concept of batch size and its impact on training.\n- Explain the purpose of early stopping and how it helps prevent overfitting.\n\n## Lessons\n\n### Neural Networks and Deep Learning Overview\n\u003ciframe src=\"https://share.descript.com/embed/C5pgAZgPVau\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [Neural networks: representation. (jeremyjordan.me)](https://www.jeremyjordan.me/intro-to-neural-networks/)\n\n### What is a Neural Network\n\n**NOTE**: *Don't worry too much about the math in these videos! The goal is to get a general understanding and some intuition for how these work. A high level understand of the role each of these terms play is the goal.*\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/aircAruvnKk?si=Hya0He2ZrXfxp7qw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/IHZwWFHWa-w?si=EQeAWsjxWv9iiuUZ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/Ilg3gGewQ5U?si=IzUvv1_nrFLHFcxg\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### How Neural Networks Learn\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=825eec4d-a1c9-4fca-8a44-b15801887843\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"How Neural Networks Learn\" \u003e\u003c/iframe\u003e\n\n### TensorFlow Playground and Discussion Post\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d24a7a78-5fc0-4c6b-8e0b-b159001a87bc\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Tensor Playground\" \u003e\u003c/iframe\u003e\n\n### [TensorFlow Playground](https://playground.tensorflow.org/#activation=tanh\u0026batchSize=10\u0026dataset=circle\u0026regDataset=reg-plane\u0026learningRate=0.03\u0026regularizationRate=0\u0026noise=0\u0026networkShape=4\u0026seed=0.91979\u0026showTestData=false\u0026discretize=false\u0026percTrainData=50\u0026x=true\u0026y=true\u0026xTimesY=false\u0026xSquared=false\u0026ySquared=false\u0026cosX=false\u0026sinX=false\u0026cosY=false\u0026sinY=false\u0026collectStats=false\u0026problem=classification\u0026initZero=false\u0026hideText=false\u0026discretize_hide=false\u0026showTestData_hide=false\u0026stepButton_hide=false\u0026activation_hide=true\u0026noise_hide=false\u0026regularization_hide=true\u0026regularizationRate_hide=true)\n\n\n## M8 Assignment\n\nComplete all section of the [Learn Intro to Deep Learning](https://www.kaggle.com/learn/intro-to-deep-learning) course on Kaggle (est. 3-4 hours). Submit your completed file for the final exercise (Binary Classification) to the assignment in canvas.","lastmodified":"2025-03-06T16:38:15.562492906Z","tags":[]},"/AI-For-Devs-M9":{"title":"AI For Devs - M9","content":"# Reinforcement Learning\n## Learning Objectives\n*These topics will be covered in this module's knowledge check and entry ticket.*\n- Define key concepts in reinforcement learning, including agents, environments, states, actions, and rewards.\n- Understand the exploration vs. exploitation trade-off and its importance in reinforcement learning algorithms.\n- Identify real-world applications of reinforcement learning.\n- Discuss the challenges and limitations of reinforcement learning.\n\n## Reinforcement Learning Lessons\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/kopoLzvh5jY?si=qVB1q70cB2K0CSQa\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=262995a6-f3ab-4b74-8eb4-b16801697f52\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 1\" \u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ab60a945-b99a-4aa4-912e-b16801697fba\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 2\" \u003e\u003c/iframe\u003e\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/nIgIv4IfJ6s?si=sgQznDiippzOrAvA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=29611f1a-f365-41ff-b700-b16801697f2a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 3\" \u003e\u003c/iframe\u003e\n\n## M9 Assignment\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=f5441171-a6fe-4645-b322-b16801786de8\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL CartPole Assignment\" \u003e\u003c/iframe\u003e\n\nVisual Studio Code: [Visual Studio Code - Code Editing. Redefined](https://code.visualstudio.com/)\nPython: [Python Release Python 3.11.9 | Python.org](https://www.python.org/downloads/release/python-3119/)\n- Check \"Add Python to PATH\" when installing\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/AI-Files/Images/AddPythonToPath.png\"\u003e\n\nCartPole Documentation: [Cart Pole - Gymnasium Documentation (farama.org)](https://gymnasium.farama.org/environments/classic_control/cart_pole/)\n\n### Instructions\n\n1. Download and install VS Code and Python (links above)\n2. Download the \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/AI-Files/CartPoleAssignment.ipynb\"\u003eCartPoleAssignment.ipynb (github.com)\u003c/a\u003e and open it in VS Code\n3. Install the Jupyter extension (see video)\n4. Read the text and understand each code cell as you run them\n5. Fill in and successfully execute and code cells that require your input\n6. Upload your completed CartPoleAssignment.ipynb file to the assignment submission on Canvas.\n\n### Optional Resources\n- If you're interested in learning more about how to implement RL -\u003e [Reinforcement Learning in 3 Hours | Full Course using Python (youtube.com)](https://www.youtube.com/watch?v=Mut_u40Sqz4\u0026t=2674s\u0026ab_channel=NicholasRenotte)\n","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-MISC-AI-In-Class-Copilot":{"title":"AI For Devs MISC - AI In-Class Copilot","content":"# Serving ML Models\n\n## Learning Objectives\n- Get comfortable using resources and AI tools to quickly jump into new technologies\n- See how the machine learning models you develop can be used in applications\n\n## Goal\nConvert your existing linear regression model into an API-accessible service using Flask. The API should accept input data and use the regression model (either by returning the result directly or using it to make a decision). Create a simple user interface in React that calls the API.\n\nTry to **ONLY** use AI to write code! Talking to LLMs and getting them to do exactly what you want is a bit of an art and takes time to get used to. Practice communicating and instructing it clearly to get the results you want.\n\n## Setup\nGet GitHub Copilot. Prepare your development environment with necessary libraries.\n\n## Flask Application Development\nCreate a basic Flask application and implement a prediction endpoint that accepts POST requests. Ensure your endpoint can process input data and return predictions.\n\n## React Application Development\nCreate a basic React application (I'd suggest using create-react-app) that collects the necessary model inputs from the user and displays the prediction.\n\n*If you're getting errors connecting to the API it might be CORS.*\n\n## Enhancements\nAdd error handling / input validation.\n\n## Optional Extension\nIf you finish this early, try adding another endpoint that hosts a pre-trained GPT-2 model and predicts words.\n","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-MISC-AI-In-Class-EDA":{"title":"AI For Devs MISC - AI In-Class EDA","content":"# EDA and Notebook Practice\n\n## Introduction\n\nAI is fundamentally about data. Why? \n\nBecause at its core, that's what AI systems learn from and operate on.\n\nToday, we'll look into understanding data through a process called Exploratory Data Analysis (EDA).\n\nI also want you to get comfortable using AI effectively as a learning tool. Leverage the AI tools to get customized examples that relate directly to your specific tasks. This approach can help you ramp up quickly in new areas without spending hours googling and sifting through generic tutorials.\n\nThink of it as having a friend that you can bounce questions off of. Their knowledge isn't always up to date, and they can make mistakes, but they have a passing familiarity with the subject area and can often point you in the right direction.\n\n## Technical Work\n- Create an account on Kaggle and download the following dataset: [Indicators of Heart Disease (2022 UPDATE) (kaggle.com)](https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease)\n- Extract the data and find the heart_2022_with_nans.csv file. This is the data we will be working with\n- You can work locally in VS Code or in Google Collab\n- Import pandas and matplotlib\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n# and others if you'd like\n```\n- Load and display the first few rows of the dataset\n- List all of the features (columns) in the dataset and total number or records\n- Check for missing values. Show how many missing values are in each column\n- There's more than one way to deal with missing values. Briefly investigate a few of these options. Which do you believe is most appropriate?\n- Apply one of the methods of missing values\n- Pick a few numerical columns and a few categorical columns. For categorical variables, create bar plots showing frequency distributions. For continuous numerical variables, create histograms. For binary variables (yes/no), create pie charts.\n\n## Questions and Discussion\n- What are the limitations of this data? What concerns might we have with it? How might these impact and AI model?\n- What might be the down stream consequences of relying on an AI model trained with this data?\n\n## Submit\n\nAt the end of class, submit your notebook (shared link if Collab, file if VS Code) to the assignment on Canvas. Your notebook should contain:\n- The technical work you completed\n- A markdown cell at the end with brief answers to the questions","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-MISC-AI-In-Class-Life-Expectancy-Scenario":{"title":"AI For Devs MISC - AI In-Class Life Expectancy Scenario","content":"# Life Expectancy Scenario\n\n### Task Overview\n\nImagine that you are a data scientist at a global health organization. The organization wants to understand the key factors affecting life expectancy across different countries and to develop a model that can predict life expectancy based on these factors. By doing so, the organization aims to identify areas of intervention and resource allocation to improve life expectancy in countries with lower health indicators.\n\n### Dataset\n[Life Expectancy WHO](https://www.kaggle.com/datasets/vikramamin/life-expectancy-who)\n\n### Objectives\n1. **Data Exploration**: Analyze the dataset to gain insights into the features affecting life expectancy.\n2. **Data Cleaning and Preprocessing**: Handle missing values, outliers, and other data quality issues.\n3. **Feature Selection**: Identify the most relevant features for predicting life expectancy.\n4. **Model Building and Evaluation**: Train a machine learning model to predict life expectancy based on other features in the dataset.\n5. **Insights and Limitations**: Reflect on the insights gained from the model and limitations of the data and model.\n\n#### 1. Data Exploration and Analysis\n- Explore the dataset: What patterns, correlations, or trends do you observe among the features?\n- Identify the distribution of life expectancy and other key features.\n- Check for missing values and decide how to handle them. Are there any features with a significant amount of missing data? How would you address this?\n- Consider socioeconomic factors (e.g., GDP, schooling, income composition of resources) and health factors (e.g., adult mortality, infant deaths, HIV/AIDS prevalence) and discuss how they might relate to life expectancy.\n\n#### 2. Data Preprocessing\n- Handle missing values: Explain your approach to handling missing data. Will you drop, impute, or use other techniques?\n- Handle categorical variables: The \"Status\" column might be a categorical variable (e.g., \"Developed\" or \"Developing\"). Convert it into a format suitable for machine learning if necessary.\n- Consider normalizing or scaling numerical features: Consider whether scaling is necessary for any of the features.\n\n#### 3. Feature Selection\n- Explain why you would include or exclude certain features in your model.\n\n#### 4. Model Building and Evaluation\n- Build several machine learning model (e.g., linear regression, decision tree, or any other model of your choice) to predict life expectancy. Compare the performance and advantages of different models.\n- Train and test your model. Evaluate its performance using metrics such as Mean Absolute Error (MAE) or Root Mean Squared Error (RMSE).\n\n#### 5. Insights and Limitations\n- Based on your model, what factors seem to have the most influence on life expectancy?\n- Discuss any limitations of your model and dataset.\n- If the organization wanted to improve life expectancy based on your findings, what areas would you suggest they focus on?\n\n#### 6. Ethical and Practical Considerations\n- Discuss the ethical implications of using such data to make predictions and decisions. Are there potential biases in the data?\n- How could the organization responsibly use your findings to make real-world decisions?\n\n### Deliverables\n\nAll code and analysis should be kept in a single well formatted notebook.","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-ML-Pathway":{"title":"AI For Devs - ML Pathway","content":"# Pathway - Supervised ML and Analytics\n\n## ML Analytics Pathway Introduction\n\u003ciframe src=\"https://share.descript.com/embed/RD3oDJD14p0\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## [[AI For Devs - ML Pathway - M5 Exploratory Data Analysis (EDA)|M5 Exploratory Data Analysis (EDA)]]\n- ML workflow\n- Basic statistical measures (mean, median, mode)\n- Data distribution analysis (histograms, box plots)\n- Correlation analysis (scatter plots, correlation matrices)\n- Identifying outliers and anomalies\n- Using libraries like Pandas, Matplotlib, and Seaborn for EDA\n- Creating insightful visualizations (bar charts, heatmaps, pair plots)\n- Drawing initial insights from the data\n\n## [[AI For Devs - ML Pathway - M6 Data Preparation|Module 6 - Data Preparation]]\n- Data cleaning techniques\n- Handling missing data (imputation strategies)\n- Dealing with categorical data (one-hot encoding)\n- Feature scaling and normalization\n- Handling outliers (when to remove, when to keep)\n- Handling class imbalance\n## [[AI For Devs - ML Pathway - M8 Machine Learning Algorithms|Module 8 - Machine Learning Algorithms]]\n- Train / Test / Val\n- Linear / Logistic Regression\n- Decision Trees\n- Random Forests / Boosting vs Bagging\n- Understanding Accuracy and the Confusion Matrix\n\n## [[AI For Devs - ML Pathway - M9 Model Training and Evaluation|Module 9 - Model Training and Evaluation]]\n- Cross-validation\n- Overfitting / underfitting and handling each\n- Learning and validation curves\n\n## Module 10 - Model Improvements\n- Ensemble methods\n    - Voting classifiers\n    - Stacking\n    - Blending\n- Hyperparameter tuning\n    - Grid search\n    - Random search\n    - Bayesian optimization\n- Error analysis and iterative improvement\n\n## Module 11 - Model Deployment\n- Creating a simple API for model deployment (using Flask)\n- Monitoring model performance in production\n- Ethical considerations in AI/ML\n    - Bias and fairness in machine learning\n    - Privacy concerns and data protection\n    - Transparency and explainability of models\n- Responsible AI practices\n- Legal and regulatory considerations (e.g., GDPR, CCPA)\n- Strategies for ongoing model monitoring, maintenance, and improvement","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-ML-Pathway-M5-Exploratory-Data-Analysis-EDA":{"title":"AI For Devs - ML Pathway - M5 Exploratory Data Analysis (EDA)","content":"# M4 Exploratory Data Analysis (EDA)\n\n\n### Read: [The Machine Learning Life Cycle Explained | DataCamp](https://www.datacamp.com/blog/machine-learning-lifecycle-explained)\n\n### Basics Stats for ML\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/t4LOv9h-FJM?si=ZAHb4ZmFhId-SPY_\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Exploratory Data Analysis with Python\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/xi0vhXFPegw?si=6GcGuuNBVFa12nO5\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Optional (but highly recommended):\n*If you're serious about getting into data analytics and/or machine learning, these are very important concepts!*\n\n### Standard Deviation and Mean Absolute Deviation\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/yCDevFTNbC0?si=bUa7d3HDH5pta3yX\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Normal Distribution and Z-Score\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/okhrFgaUwio?si=fsmm57EXmokaWnaT\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[AI For Devs - ML Pathway]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-ML-Pathway-M6-Data-Preparation":{"title":"AI For Devs - ML Pathway - M6 Data Preparation","content":"# M6 Data Preparation\n\n\n- Data cleaning techniques\n- Handling missing data (imputation strategies)\n- Dealing with categorical data (one-hot encoding)\n- Feature scaling and normalization\n- Handling class imbalance\n\n\n## Missing Data and Imputation\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/FPvMBl8LvGA?si=WKm0nbS0vZ8YL1RW\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/f9AQy7p0QEo?si=cY1GB7xfnoiTb7hY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Handling Categorical Data\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/rsyrZnZ8J2o?si=ZG5_0w3aFfl6wBpu\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Feature Scaling\n\n*If you did not watch the standard deviation and normal distribution videos from last week you'll want to start with those to understand the standardizations discussed in this video [[AI For Devs - ML Pathway - M5 Exploratory Data Analysis (EDA)#Optional (but highly recommended)]].\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/bqhQ2LWBheQ?si=ojBnwqWtnA1C3C3D\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n## Handling Class Imbalance\n\n*Only the first 8 minutes are required.*\n\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/GR-OW5asKlk?si=He0GlJWQeSFZohHD\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Watch: [SMOTE - Handle imbalanced dataset | Synthetic Minority Oversampling Technique | Machine Learning](https://www.youtube.com/watch?v=adHqzek--d0\u0026ab_channel=DataMagic%28bySunnyKusawa%29)\n\n\n## Back: [[AI For Devs - ML Pathway]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-ML-Pathway-M8-Machine-Learning-Algorithms":{"title":"AI For Devs - ML Pathway - M8 Machine Learning Algorithms","content":"# Machine Learning Algorithms\n### Classification Models\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/8TuRJg76sW8?si=x9Qu_x3c5GJ4-Tyd\u0026amp;start=12\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Confusion Matrix\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/Kdsp6soqA7o?si=eWauytViKtogIAwW\u0026amp;start=14\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Classification Metrics\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/jJ7ff7Gcq34?si=ZCCPoq7mmj0-8-Yb\u0026amp;start=12\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Review: \u003ca href=\"https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/AI-Files/ML_Examples.ipynb\" target=\"_blank\"\u003eExample ML Model Implementations\u003c/a\u003e\n*Code examples of how you might implement each of these models for different tasks.*\n\n### Back: [[AI For Devs - ML Pathway]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-ML-Pathway-M9-Model-Training-and-Evaluation":{"title":"AI For Devs - ML Pathway - M9 Model Training and Evaluation","content":"# Model Training and Evaluation\n\n## K-Fold Cross Validation\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/TIgfjmp-4BA?si=1K3CkHT7KOZImNP0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Example of K-Fold in Python\n\n#### admissions.csv\n\n| StudentID | GRE_Score | GPA | College_Rating | Admission |\n| --------- | --------- | --- | -------------- | --------- |\n| 1         | 320       | 3.5 | 4              | 1         |\n| 2         | 310       | 3.0 | 3              | 0         |\n| 3         | 325       | 3.8 | 5              | 1         |\n| 4         | 300       | 2.8 | 2              | 0         |\n| 5         | 315       | 3.4 | 3              | 1         |\n| 6         | 305       | 3.2 | 2              | 0         |\n| ...       | ...       | ... | ...            | ...       |\n\n- **StudentID**: A unique identifier for each student\n- **GRE_Score**: The student’s GRE test score (out of 340)\n- **GPA**: Undergraduate Grade Point Average (on a 4.0 scale)\n- **College_Rating**: College prestige rating (1 = lowest, 5 = highest)\n- **Admission**: Target variable (1 = Admitted, 0 = Not Admitted)\n\n#### Example Code\n```python\n# Import necessary libraries\nimport pandas as pd\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Load the dataset\ndf = pd.read_csv('admissions.csv')\n\n# Features and target\nX = df[['GRE_Score', 'GPA', 'College_Rating']]\ny = df['Admission']\n\n# Define the model\nmodel = RandomForestClassifier()\n\n# Perform K-Fold Cross-Validation\nscores = cross_val_score(model, X, y, cv=3, scoring='accuracy')  # 3 folds\n\n# Print results\nprint(\"K-Fold Cross-Validation Results\")\nprint(f\"Fold Accuracies: {scores}\")\nprint(f\"Mean Accuracy: {scores.mean():.2f}\")\n```\n\n## Learning and Validation Curves\n\u003ciframe width=\"720\" height=\"405\" src=\"https://www.youtube.com/embed/nt5DwCuYY5c?si=BcQEjOVOW5DytrOE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Handling Overfitting / Underfitting\n\n**Overfitting**: High training accuracy, low test accuracy.\n\n**Underfitting**: Low accuracy on both training and test data.\n\n### Overfitting\n\nOverfitting happens when your model performs well on training data but poorly on unseen data because it \"memorizes\" the training details rather than learning general patterns.\n\n**Possible Solutions to Consider:**\n- **Simplify the Model**: Use a less complex algorithm (e.g., reduce the depth of decision trees or use fewer layers in neural networks).\n- **Regularization**: Apply L1 (Lasso) or L2 (Ridge) regularization to penalize overly complex models.\n- **Reduce Features**: Remove irrelevant or redundant features via feature selection.\n- **Increase Training Data**: Gather more varied data to help the model generalize better.\n- **Tune Hyperparameters with Cross-Validation**: Tune hyperparameters using techniques like K-Fold Cross-Validation to find the best model settings.\n\n### Underfitting\n\nUnderfitting happens when your model performs poorly on both training and unseen data because it’s too simple to capture the underlying patterns.\n\n**Possible Solutions to Consider:**\n- **Increase Model Complexity**: Use an algorithm capable of modeling more complex relationships in the data (such as moving from linear regression to random forests or from random forests to neural networks, depending on the problem type).\n- **Add Features**: Include more informative features that help the model learn better patterns.\n- **Train Longer**: Increase the number of training epochs for models like neural networks to better fit the data.\n\nThe goal is to find the sweet spot where the model is neither overfitting nor underfitting by carefully tuning complexity, hyperparameters, and features.\n\n### Back [[AI For Devs - ML Pathway]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/AI-For-Devs-_-Lessons-Index":{"title":"AI For Devs _ Lessons Index","content":"# Introduction to AI and Machine Learning\n\n## Core Content\n\n### [[AI For Devs - M1]]\n### [[AI For Devs - M2]]\n- [[AI For Devs MISC - AI In-Class EDA]]\n### [[AI For Devs - M3]]\n- [[AI For Devs - Course Project Proposal]]\n### [[AI For Devs - M4]]\n- [[AI For Devs - M4 Assignment]]\n- [[AI For Devs MISC - AI In-Class Copilot]]\n### [[AI For Devs - M5]]\n- [[AI For Devs - M5 Assignment]]\n### AI For Devs - M6\n- No class\n### AI For Devs - M7\n- [[AI For Devs MISC - AI In-Class Life Expectancy Scenario]]\n### [[AI For Devs - M8]]\n### [[AI For Devs - M9]]\n\n### [[AI For Devs - M10]]\n- [[AI For Devs - Final Project Peer Reviews]]\n\n## Pathways and Final Project\n- [[AI For Devs - Course Project Rubric]]\n- [[AI For Devs - ML Pathway]]\n- [[AI For Devs - AI Apps Pathway]]\n","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-Final-Project-Assignment":{"title":"AI - Final Project Assignment","content":"\n# Final Project Assignment\n\nFor your final project in this course, you have the opportunity to dive into an AI topic that interests you. Much like your work in the capstone, these projects are open ended and likely to include elements we haven't covered deeply in class. You are expected to do some of your own research and make good use of tools and resources (such as google, online tutorials and generative AI) to assist you. Feel free to contact me if you're having trouble figuring out where to start!\n\nThere are several broad categories of project I'd encourage you to choose from:\n1. Statistical Model:\n    - Select a dataset (I'd suggest starting with [Kaggle](https://www.kaggle.com/datasets) but you are welcome to look elsewhere) and perform data cleaning and preparation.\n    - Discuss and / or correct any biases that may be present in the data.\n    - Develop a statistical / traditional model to analyze the data.\n    - Create informative metrics and visuals to evaluate the model's performance.\n    - Provide insights into what the model learned from the data.\n    - Present your work in a well-documented notebook that clearly explains your processes and conclusions.\n    - Potential areas to explore: feature selection, feature engineering, model selection, hyperparameter tuning, cross-validation, regularization techniques, handling imbalanced data, and more. You don't need to use all of these, but pick a few techniques to implement in your project.\n2. Reinforcement Learning Task:\n    - Choose a reinforcement learning environment from the gym library (beyond CartPole). [Classic Control](https://gymnasium.farama.org/environments/classic_control/), [Box2D](https://gymnasium.farama.org/environments/box2d/) may be good options or pick another environment that seems interesting to you.\n    - Implement a solution to solve the selected task. Use metrics and visuals to show your model's performance against an agent taking random actions.\n    - Document your work in a notebook that walks through each step of your code and explains your approach to solving the problem.\n    - Discuss the challenges you encountered and the strategies you employed to overcome them.\n    - Analyze the performance of your reinforcement learning agent and provide insights into its learning process.\n3. AI-Powered Application:\n    - Create an application that significantly incorporates an LLM or other AI components using the Langchain framework.\n    - Utilize chains, tools, agents, and / or memory in Langchain to enhance the functionality or interactivity of your application.\n    - Leverage AI to generate comprehensive documentation for your code. Develop a high-quality README file that clearly and concisely explains the components of your project and highlights the areas where AI is utilized.\n    - Demonstrate the practical application and benefits of integrating AI into your project.\n4. Open-Ended Project:\n    - If you have a unique project idea that doesn't fit within the above categories, feel free to propose it.\n    - Discuss your project idea with me to ensure it aligns with the course objectives and requirements.\n\nDeliverables:\n1. Code and Technical Documentation:\n    - Submit your project code either as a well-documented notebook or as a GitHub repository.\n    - For notebooks, include detailed markdown explanations alongside your code.\n    - For GitHub repositories, create a comprehensive README file that serves as the technical documentation for your project.\n    - Collaborate with AI to ensure high-quality documentation that clearly explains your project's purpose, functionality, and implementation details.\n2. Presentation and Slides (5-8 minutes):\n    - During finals week you will present out on your project and what you learned.\n\t- You may include a BRIEF technical demo but the focus should be on presenting and explaining the work you did to a semi-technical audience at a high level. Your classmates and I have some background in AI but not the specifics of the approaches you took or the problem you solved. Keep this audience in mind.\n    - Your presentation should be informative. By the end of it we should have a clear idea of the problem or task you set out to solve, how you went about it and why.\n    - Consider leveraging AI to help generate concise text, good visuals, and review content.\n    - Create visually appealing slides that effectively communicate your project's key points.\n\nI encourage you to leverage AI throughout your final project. Claude Sonnet, GPT-4o and Llama3-70B are likely to be your best options for powerful models that can be accessed for free. Utilize AI to assist with planning your project, code documentation, writing, and slide creation. Effective use of AI can enable you to focus on the core aspects of your project and enhance the quality of your deliverables. Just be mindful of their limitations and always review and validate the generated content to ensure accuracy and relevance.\n\nIf you have any questions or need further guidance, don't hesitate to reach out. I'm looking forward to seeing the projects you create!","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W1-A-Brief-History-of-AI":{"title":"AI - W1 A Brief History of AI","content":"# A Brief History of AI\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=172da466-e0a5-48af-986e-b145005637f4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Cool Things to Explore (Optional)\n- Great documentary on AlphaGo AI - [AlphaGo - The Movie | Full award-winning documentary (youtube.com)](https://www.youtube.com/watch?v=WXuK6gekU1Y) (1 hour 30 minutes)\n- Watson Playing Jeopardy: [Watson and the Jeopardy! Challenge (youtube.com)](https://www.youtube.com/watch?v=P18EdAKuC1U) (4 minutes)\n- OpenAI vs Dota 2 Pros Match [TI9 CHAMPION OG vs OpenAI Final Version 2019 - Game 1 (youtube.com)](https://www.youtube.com/watch?v=t4il-QagP5w)\n- [Eliza, a chatbot therapist (njit.edu)](https://web.njit.edu/~ronkowit/eliza.html)\n\n# Lessons\n- [[AI - W1 Introduction]]\n- AI - W1 A Brief History of AI\n- Next: [[AI - W1 AI Tasks and Types of Machine Learning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W1-AI-Tasks-and-Types-of-Machine-Learning":{"title":"AI - W1 AI Tasks and Types of Machine Learning","content":"# AI Tasks and Types of Machine Learning\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=6f841154-530c-499c-ae9f-b145010e5e6e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W1 Introduction]]\n- [[AI - W1 A Brief History of AI]]\n- AI - W1 AI Tasks and Types of Learning","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W1-Introduction":{"title":"AI - W1 Introduction","content":"\n# Week 1 Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ea3a6a71-3e98-4584-8d09-b1430152af4a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the course structure, expectations and requirements.\n- Define Artificial Intelligence (AI) and Machine Learning (ML) in your own words.\n- Explain (at a high level, no need to memorize dates) the eras of AI, what enabled neural networks and deep learning techniques in the last 15 years, and the \"black box\" and \"bias\" problems in ML models.\n- Understand how Artificial Intelligence, Machine Learning, Neural Networks, Deep Learning, and Generative AI relate to each other.\n- Understand the types of common tasks in AI (no need to memorize the techniques, just make sure to understand the task categories and kinds of data / scenarios they deal with).\n- Understand the differences in approach between Supervised Learning, Unsupervised Learning, Reinforcement Learning, and Evolutionary Learning.\n- Explore the current landscape and opportunities in AI and the expected impact of AI on jobs (resources for these are included in this week's discussion post assignment).\n\n# Weekly Schedule\n\n- ### Tuesday:\n    - Open office hours from 1-3pm\n    - Assignment is due by 3pm\n    - Knowledge check is due by 3pm\n\n- ### Thursday (before class):\n\t- Discussion post is due by 1pm\n\n- ### Thursday (during in-person class):\n    - Entry ticket quiz\n    - In-class discussion and activities\n    - I'll introduce the next week's content in the last ~15 minutes of class\n    - The next week's module (lessons, assignment, knowledge check and discussion) will be published on Canvas after class\n\nLate work will be penalized 10% per day, up to a maximum of 50%, unless an extension is arranged with the instructor in advance of the due date.\n\n# Lessons\n- AI - W1 Course Introduction\n- Next: [[AI - W1 A Brief History of AI]]\n- [[AI - W1 AI Tasks and Types of Machine Learning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W10-Fine-tuning":{"title":"AI - W10 Fine-tuning","content":"\n# Fine-tuning LLMs\n\nWatch the following sections of [Finetuning Large Language Models (deeplearning.ai)](https://learn.deeplearning.ai/courses/finetuning-large-language-models/lesson/1/introduction):\n- Introduction\n- Why finetune\n- Where finetuning fits in\n- Instruction finetuning\n- (Optional) Data Preparation\n- (Optional) Evaluation and iterations\n\nYou may follow along but it is not required for this section.\n# Lessons\n- [[AI - W10 Introduction]]\n- [[AI - W10 Memory]]\n- [[AI - W10 RAG]]\n- AI - W10 Fine-tuning\n\n","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W10-Introduction":{"title":"AI - W10 Introduction","content":"# Learning Objectives\n- Understand and demonstrate the use of memory in AI models.\n- Explore the basics and applications of Retrieval Augmented Generation (RAG).\n- Understand the basics process for fine-tuning large language models.\n\n# Lessons\n- AI - W10 Introduction\n- Next: [[AI - W10 Memory]]\n- [[AI - W10 RAG]]\n- [[AI - W10 Fine-tuning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W10-Memory":{"title":"AI - W10 Memory","content":"\n# Memory\n\nIf you haven't already, make sure to watch the [LangChain for LLM Application Development (deeplearning.ai)](https://learn.deeplearning.ai/courses/langchain/lesson/3/memory) lesson on memory. This will be part of our in-class activity.\n# Lessons\n- [[AI - W10 Introduction]]\n- AI - W10 Memory\n- Next: [[AI - W10 RAG]]\n- [[AI - W10 Fine-tuning]]\n\n\n","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W10-RAG":{"title":"AI - W10 RAG","content":"\n# Retrieval Augmented Generation (RAG)\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=678c8570-3443-4419-a694-b1840184147e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RAG\" \u003e\u003c/iframe\u003e\n\nWatch and follow along (either locally or on Google Colab) with the following sections of [Advanced Retrieval for AI with Chroma (deeplearning.ai)](https://learn.deeplearning.ai/courses/advanced-retrieval-for-ai/lesson/1/introduction):\n- Introduction\n- Overview\n- Pitfalls\n- Query Expansion\n- (Optional) Cross-encoder re-ranking\n- (Optional) Embedding adaptors\n- (Optional) Other techniques\n\n# Lessons\n- [[AI - W10 Introduction]]\n- [[AI - W10 Memory]]\n- AI - W10 RAG\n- Next: [[AI - W10 Fine-tuning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W2-Assignment-Multiple-Linear-Regression":{"title":"AI - W2 Assignment - Multiple Linear Regression","content":"\n# Assignment - Multiple Linear Regression\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1eb1e8a7-d650-4e3a-8eb8-b14a005b8b26\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Multiple Linear Regression Assignment\" \u003e\u003c/iframe\u003e\n\n### Instructions\n1. Find a dataset suitable for multiple linear regression analysis. [Find Open Datasets and Machine Learning Projects | Kaggle](https://www.kaggle.com/datasets?sort=votes\u0026tags=13405-Linear+Regression)\n2. Select the columns (features) you want to use as predictor variables and the column you want to predict (target variable).\n3. Create a multiple linear regression model using the selected columns.\n4. Use the model to predict the target variable.\n5. Make your Colab notebook accessible to anyone with the link (Share -\u003e General Access -\u003e Change from \"Restricted\" to \"Anyone with the Link\" can view)\n### Evaluation\n- Appropriate selection of dataset and columns for multiple linear regression\n- Correct implementation of the multiple linear regression model\n- Successful prediction of the target variable using the model\n- Clear and well-documented code\n\n### Submission\nSubmit your assignment by providing a link to your Colab notebook to the assignment in Canvas. If you worked locally, export your document as an HTML or PDF file and upload that file to the assignment Canvas.\n\n# Lessons\n- [[AI - W2 Introduction]]\n- [[AI - W2 Jupyter Notebooks and Google Colab]]\n- [[AI - W2 Python Refresher and Pandas]]\n- [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- AI - W2 Assignment - Multiple Linear Regression","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W2-Introduction":{"title":"AI - W2 Introduction","content":"\n# Week 2 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand traditional machine learning models and explain the advantages that traditional models can have over neural networks.\n- Understand the difference between simple and multiple linear regression.\n- Explain how simple and multiple linear regression models make predictions and why they are generally considered to be explainable / interpretable models.\n- Explain the steps required to implement a linear regression model in Python using scikit-learn to predict a continuous output variable from input variable(s).\n- Interpret the coefficients and intercept of a fitted linear regression model to understand the learned relationship between input and output variables.\n- Use Python and Pandas to train models and manipulate data frames (you will not have to write code during quizzes but you may have to explain or interpret what some Python / Pandas code does).\n\n# Lessons\n- AI - W2 Introduction\n- Next: [[AI - W2 Jupyter Notebooks and Google Colab]]\n- [[AI - W2 Python Refresher and Pandas]]\n- [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W2-Jupyter-Notebooks-and-Google-Colab":{"title":"AI - W2 Jupyter Notebooks and Google Colab","content":"# Jupyter Notebooks and Google Colab\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=10252dd6-bcc4-42b0-afc8-b146017bc3b4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W2 Introduction]]\n- AI - W2 Jupyter Notebooks and Google Colab\n- Next: [[AI - W2 Python Refresher and Pandas]]\n- [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W2-Python-Refresher-and-Pandas":{"title":"AI - W2 Python Refresher and Pandas","content":"# Python Refresher and Pandas\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c20eaed3-0118-4728-b43a-b1470159390c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W2 Introduction]]\n- [[AI - W2 Jupyter Notebooks and Google Colab]]\n- AI - W2 Python Refresher and Pandas\n- Next: [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W2-Statistical-Modeling-and-Implementing-Linear-Regression":{"title":"AI - W2 Statistical Modeling and Implementing Linear Regression","content":"# Statistical Modeling and Implementing Linear Regression\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9c4076e5-f9a2-4979-b054-b14a0052d8cd\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Linear Regression\" \u003e\u003c/iframe\u003e\n\n### Links\nStudy Hours Dataset: [Student Study Hours (kaggle.com)](https://www.kaggle.com/datasets/himanshunakrani/student-study-hours/data?select=score.csv)\nAdmissions Dataset: [Data for Admission in the University (kaggle.com)](https://www.kaggle.com/datasets/akshaydattatraykhare/data-for-admission-in-the-university)\n\nMy Notebook: https://colab.research.google.com/drive/1h3-bCRU2JQ5VqFLbshVIK84HlITYwV6Q?usp=sharing\n# Lessons\n- [[AI - W2 Introduction]]\n- [[AI - W2 Jupyter Notebooks and Google Colab]]\n- [[AI - W2 Python Refresher and Pandas]]\n- AI - W2 Statistical Modeling and Implementing Linear Regression\n- Next: [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W3-Assignment-Decision-Trees-Random-Forests-and-Model-Validation":{"title":"AI - W3 Assignment - Decision Trees, Random Forests and Model Validation","content":"\n# Assignment - Decision Trees, Random Forests and Model Validation\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ca716ba9-b927-422e-9d5e-b151012bee7e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"W3 Kaggle Assignment Intro\" \u003e\u003c/iframe\u003e\n\nKaggle Lessons: [Learn Intro to Machine Learning | Kaggle](https://www.kaggle.com/learn/intro-to-machine-learning)\n\nI **highly recommend** watching both of these videos to help give a more visual and intuitive understanding of how decision trees and random forests function:\n- Recommended: [Visual Guide to Decision Trees (youtube.com)](https://www.youtube.com/watch?v=zs6yHVtxyv8\u0026list=PLRZZr7RFUUmXfON6dvwtkaaqf9oV_C1LF\u0026index=6\u0026ab_channel=Econoscent) (6 minutes)\n- **REQUIRED**: [Visual Guide to Random Forests (youtube.com)](https://www.youtube.com/watch?v=cIbj0WuK41w\u0026list=PLRZZr7RFUUmXfON6dvwtkaaqf9oV_C1LF\u0026index=6\u0026ab_channel=Econoscent) (5 minutes)\n\n# Lessons\n- [[AI - W3 Introduction]]\n- [[AI - W3 Model Validation]]\n- AI - W3 Assignment - Decision Trees, Random Forests and Model Validation","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W3-Introduction":{"title":"AI - W3 Introduction","content":"# Week 3 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand traditional machine learning models and the differences between linear regression, decision trees and random forests.\n- Understand the importance of model validation and testing the model's performance on unseen data.\n- Explain the concept of mean squared error (MSE) as a metric to evaluate the performance of a model.\n- Interpret differences in MSE scores and their implications for model performance.\n- Explain the concept of overfitting and why it can be a problem for ML models.\n- Implement the train-test split technique using scikit-learn's train_test_split function to divide the dataset into separate training and testing subsets. \n- Train a linear regression model on the training data, and evaluate its performance on the unseen testing data using MSE.\n*(You will not have to write code during quizzes but understand the process such that you could explain it or interpret what some Python / Pandas code does).*\n# Lessons\n- AI - W3 Introduction\n- Next: [[AI - W3 Model Validation]]\n- [[AI - W3 Assignment - Decision Trees, Random Forests and Model Validation]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W3-Model-Validation":{"title":"AI - W3 Model Validation","content":"\n# Model Validation\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=dad362ad-668d-45d5-b58c-b1510120224e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"MSE and Train Test Split\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W3 Introduction]]\n- AI - W3 Model Validation\n- Next: [[AI - W3 Assignment - Decision Trees, Random Forests and Model Validation]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W4-Assignment-Introduction-to-Deep-Learning":{"title":"AI - W4 Assignment - Introduction to Deep Learning","content":"\n# Assignment - Introduction to Deep Learning\n\nComplete all section of the [Learn Intro to Deep Learning](https://www.kaggle.com/learn/intro-to-deep-learning) course on Kaggle (est. 3-4 hours). Submit your completed file for the final exercise (Binary Classification) to the assignment in canvas.\n\n# Lessons\n- [[AI - W4 Introduction]]\n- [[AI - W4 Neural Network and Deep Learning Overview]]\n- [[AI - W4 How Neural Networks Learn]]\n- [[AI - W4 TensorFlow Playground]]\n- AI - W4 Assignment - Introduction to Deep Learning","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W4-How-Neural-Networks-Learn":{"title":"AI - W4 How Neural Networks Learn","content":"\n# How Neural Networks Learn\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=825eec4d-a1c9-4fca-8a44-b15801887843\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"How Neural Networks Learn\" \u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [Gradient descent, how neural networks learn | Chapter 2, Deep learning (youtube.com)](https://www.youtube.com/watch?v=IHZwWFHWa-w\u0026ab_channel=3Blue1Brown)\n- [What is backpropagation really doing? | Chapter 3, Deep learning (youtube.com)](https://www.youtube.com/watch?v=Ilg3gGewQ5U\u0026ab_channel=3Blue1Brown)\n\n# Lessons\n- [[AI - W4 Introduction]]\n- [[AI - W4 Neural Network and Deep Learning Overview]]\n- AI - W4 How Neural Networks Learn\n- Next: [[AI - W4 TensorFlow Playground]]\n- [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W4-Introduction":{"title":"AI - W4 Introduction","content":"\n# Week 4 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the basic structure and components of a feedforward neural network, including input layer, hidden layers, and output layer.\n- Explain the purpose of training a neural network and the role of weights in determining the network's predictions.\n- Understand the loss function and its role during training.\n- Understand gradient descent and its role during training.\n- Understand the concept of learning rate and its impact on the training process.\n- Define an epoch in the context of neural network training.\n- Understand the concept of batch size and its impact on training.\n- Explain the purpose of early stopping and how it helps prevent overfitting.\n\n# Lessons\n- AI - W4 Introduction\n- Next: [[AI - W4 Neural Network and Deep Learning Overview]]\n- [[AI - W4 How Neural Networks Learn]]\n- [[AI - W4 TensorFlow Playground]]\n- [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W4-Neural-Network-and-Deep-Learning-Overview":{"title":"AI - W4 Neural Network and Deep Learning Overview","content":"\n# Neural Network and Deep Learning Overview\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=5bbe984f-fc63-405d-a1bf-b158004553f4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Neural Networks and Deep Learning Overview\" \u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [Neural networks: representation. (jeremyjordan.me)](https://www.jeremyjordan.me/intro-to-neural-networks/)\n- [But what is a neural network? | Chapter 1, Deep learning (youtube.com)](https://www.youtube.com/watch?v=aircAruvnKk\u0026ab_channel=3Blue1Brown)\n\n# Lessons\n- [[AI - W4 Introduction]]\n- AI - W4 Neural Network and Deep Learning Overview\n- Next: [[AI - W4 How Neural Networks Learn]]\n- [[AI - W4 TensorFlow Playground]]\n- [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W4-TensorFlow-Playground":{"title":"AI - W4 TensorFlow Playground","content":"\n# TensorFlow Playground\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d24a7a78-5fc0-4c6b-8e0b-b159001a87bc\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Tensor Playground\" \u003e\u003c/iframe\u003e\n\n### Link -\u003e [TensorFlow Playground](https://playground.tensorflow.org/#activation=tanh\u0026batchSize=10\u0026dataset=circle\u0026regDataset=reg-plane\u0026learningRate=0.03\u0026regularizationRate=0\u0026noise=0\u0026networkShape=4\u0026seed=0.91979\u0026showTestData=false\u0026discretize=false\u0026percTrainData=50\u0026x=true\u0026y=true\u0026xTimesY=false\u0026xSquared=false\u0026ySquared=false\u0026cosX=false\u0026sinX=false\u0026cosY=false\u0026sinY=false\u0026collectStats=false\u0026problem=classification\u0026initZero=false\u0026hideText=false\u0026discretize_hide=false\u0026showTestData_hide=false\u0026stepButton_hide=false\u0026activation_hide=true\u0026noise_hide=false\u0026regularization_hide=true\u0026regularizationRate_hide=true)\n\n# Lessons\n- [[AI - W4 Introduction]]\n- [[AI - W4 Neural Network and Deep Learning Overview]]\n- [[AI - W4 How Neural Networks Learn]]\n- AI - W4 TensorFlow Playground\n- Next: [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W5-Assignment":{"title":"AI - W5 Assignment","content":"# Assignment - Computer Vision\n\nComplete all section of the [Learn Computer Vision](https://www.kaggle.com/learn/computer-vision)  course on Kaggle (est. 3-4 hours). Submit your completed file for the final exercise (Data Augmentation) to the assignment in canvas.\n\n\n\n# Lessons\n- [[AI - W5 Introduction]]\n- [[AI - W5 Types of Neural Network]]\n- AI - W5 Assignment","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W5-Introduction":{"title":"AI - W5 Introduction","content":"\n# Week 5 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the different types of common neural network and what they are often used for. Explain how each of the following function at a high level:\n\t- Feed Forward Neural Networks (FFNNs)\n\t- Convolutional Neural Networks (CNNs) \n\t- Recurrent Neural Networks (RNNs)\n\t- Transformers\n# Lessons\n- AI - W5 Introduction\n- Next: [[AI - W5 Types of Neural Network]]\n- [[AI - W5 Assignment]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W5-Types-of-Neural-Network":{"title":"AI - W5 Types of Neural Network","content":"\n# Types of Neural Network\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ad88f2e7-7302-46af-812a-b16101145f97\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Types of Neural Networks\" \u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [2D Visualization of a Convolutional Neural Network (adamharley.com)](https://adamharley.com/nn_vis/cnn/2d.html)\n\n# Lessons\n- [[AI - W5 Introduction]]\n- AI - W5 Types of Neural Networks\n- Next: [[AI - W5 Assignment]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W6-Applications-and-Challenges-of-RL":{"title":"AI - W6 Applications and Challenges of RL","content":"\n# Applications and Challenges of RL\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=29611f1a-f365-41ff-b700-b16801697f2a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 3\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W6 Introduction]]\n- [[AI - W6 Basics of RL]]\n- [[AI - W6 Types of RL]]\n- AI - W6 Applications and Challenges of RL\n- Next: [[AI - W6 Assignment]]","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W6-Assignment":{"title":"AI - W6 Assignment","content":"\n# W6 Assignment\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=f5441171-a6fe-4645-b322-b16801786de8\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL CartPole Assignment\" \u003e\u003c/iframe\u003e\n\nVisual Studio Code: [Visual Studio Code - Code Editing. Redefined](https://code.visualstudio.com/)\nPython: [Python Release Python 3.11.9 | Python.org](https://www.python.org/downloads/release/python-3119/)\n- Check \"Add Python to PATH\" when installing\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/AI-Files/Images/AddPythonToPath.png\"\u003e\nCartPole Documentation: [Cart Pole - Gymnasium Documentation (farama.org)](https://gymnasium.farama.org/environments/classic_control/cart_pole/)\n\n# Assignment\n\n1. Download and install VS Code and Python (links above)\n2. Download the \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/AI-Files/CartPoleAssignment.ipynb\"\u003eCartPoleAssignment.ipynb (github.com)\u003c/a\u003e and open it in VS Code\n3. Install the Jupyter extension (see video)\n4. Read the text and understand each code cell as you run them\n5. Fill in and successfully execute and code cells that require your input\n6. Upload your completed CartPoleAssignment.ipynb file to the assignment submission on Canvas.\n\n### Optional Resources\n- If you're interested in learning more about how to implement RL -\u003e [Reinforcement Learning in 3 Hours | Full Course using Python (youtube.com)](https://www.youtube.com/watch?v=Mut_u40Sqz4\u0026t=2674s\u0026ab_channel=NicholasRenotte)\n\n# Lessons\n- [[AI - W6 Introduction]]\n- [[AI - W6 Basics of RL]]\n- [[AI - W6 Types of RL]]\n- [[AI - W6 Applications and Challenges of RL]]\n- AI - W6 Assignment","lastmodified":"2025-03-06T16:38:15.566492965Z","tags":[]},"/Archive/AI-Spring24/AI-W6-Basics-of-RL":{"title":"AI - W6 Basics of RL","content":"# Basics of RL\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=262995a6-f3ab-4b74-8eb4-b16801697f52\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 1\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W6 Introduction]]\n- AI - W6 Basics of RL\n- Next: [[AI - W6 Types of RL]]\n- [[AI - W6 Applications and Challenges of RL]]\n- [[AI - W6 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W6-Introduction":{"title":"AI - W6 Introduction","content":"\n# Week 6 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Define key concepts in reinforcement learning, including agents, environments, states, actions, and rewards.\n- Understand the exploration vs. exploitation trade-off and its importance in reinforcement learning algorithms.\n- Identify real-world applications of reinforcement learning.\n- Discuss the challenges and limitations of reinforcement learning.\n\n# Lessons\n- AI - W6 Introduction\n- Next: [[AI - W6 Basics of RL]]\n- [[AI - W6 Types of RL]]\n- [[AI - W6 Applications and Challenges of RL]]\n- [[AI - W6 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W6-Types-of-RL":{"title":"AI - W6 Types of RL","content":"# Types of RL\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ab60a945-b99a-4aa4-912e-b16801697fba\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 2\" \u003e\u003c/iframe\u003e\n\n### Supplemental Resources\n- Simple overview of RL terminology and concepts: [Reinforcement Learning: Crash Course AI #9 - YouTube](https://www.youtube.com/watch?v=nIgIv4IfJ6s\u0026ab_channel=CrashCourse)\n# Lessons\n- [[AI - W6 Introduction]]\n- [[AI - W6 Basics of RL]]\n- AI - W6 Types of RL\n- Next: [[AI - W6 Applications and Challenges of RL]]\n- [[AI - W6 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W7-Assignment":{"title":"AI - W7 Assignment","content":"\n# W7 Assignment\n\n**Instructions**:\n1. Choose a topic or skill you'd like to learn about that you're not very familiar with. It should be conceptual, not just factual. A few examples might be k-means clustering or another unsupervised learning technique we did not cover in class, a deeper dive into neural network architectures like CNNs, RNNs or Transformers, or any other concepts that may be somewhat challenging and outside of your expertise.\n2. Find an online resource, such as an article or tutorial, that provides a base for learning the topic.\n3. Use an AI language model (recommended: Claude Sonnet for strong reasoning, Gemini for access to internet and more up-to-date knowledge, or another if you have access) to assist in your learning process. When you encounter difficulties, ask the AI to:\n    - Simplify the topic\n    - Explain a concept\n    - Provide an example\n4. Test your understanding by rephrasing the content in your own words and asking the AI to verify the correctness of your understanding.\n5. Confirm your learning by re-reading the original source or finding a new source through a Google search. Ensure that what you learned aligns with your understanding from the AI interactions. \n6. I will often repeat this cycle several times to get deeper engagement with the topic, but only one iteration is required for this assignment.\n\n**Submission Requirements**:\n1. At the top of your submission, provide links to the sources you used during the learning process.\n2. Include at least two back-and-forth interaction with the AI that you found useful or not useful. Copy the prompt you provided and the AI's response for these interactions.\n3. Briefly explain what about the selected interactions were useful or not useful for your learning.\n4. Summarize your overall experience using the AI, addressing the following questions:\n    - How did the learning process go for you?\n    - Did you discover any tricks for effectively using the AI?\n    - Would you use AI for learning in the future?\n5. Export as a PDF and submit to the assignment on Canvas.\n# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- [[AI - W7 Learning with Generative AI]]\n- AI - W7 Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W7-Basics-of-Working-with-Generative-AI-and-LLMs":{"title":"AI - W7 Basics of Working with Generative AI and LLMs","content":"\n# Basics of Working with Generative AI and LLMs\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=901c005e-dd4f-4cac-9bbb-b16f016956f5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Basics of Working with Gen AI and LLMs\" \u003e\u003c/iframe\u003e\n\n### Chat Web UIs\n- https://chatgpt.com/\n- https://gemini.google.com/\n- https://claude.ai/chat/\n\n### Platforms / APIs\n- https://platform.openai.com/\n- https://console.groq.com/\n\n### LLM Comparison Tool\n- [GPT-3.5 Turbo - Quality, Performance \u0026 Price Analysis | Artificial Analysis](https://artificialanalysis.ai/models/gpt-35-turbo)\n\n# Lessons\n- [[AI - W7 Introduction]]\n- AI - W7 Basics of Working with Generative AI and LLMs\n- Next: [[AI - W7 Prompt Engineering]]\n- [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W7-Discussion-Post":{"title":"AI - W7 Discussion Post","content":"# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- Next: [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W7-Introduction":{"title":"AI - W7 Introduction","content":"\n# Week 7 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the concept of generative AI and how it relies on deep learning.\n- Describe the role of Large Language Models (LLMs) as a category of generative AI.\n- Understand the basic process of how LLMs produce text using the attention mechanism.\n- Identify common strengths and weaknesses of LLMs.\n- Explore popular web interfaces for interacting with LLMs, such as ChatGPT, Gemini, and Claude.\n- Compare the performance of different LLMs based on factors such as quality, speed, and price.\n- Understand the concept of prompt engineering and its role in improving LLM performance for specific use cases.\n- Understand and apply the three fundamental elements of successful prompt engineering: clarity, context, and scope.\n\n**NOTE: Only my first two videos will be covered on the Entry Ticket for W7!** The \"ChatGPT Prompt Engineering for Developers\" videos and my \"Learning with Generative AI\" video will not appear on the entry ticket or be required for the week 7 discussion post.\n\n# Lessons\n- AI - W7 Introduction\n- Next: [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W7-Learning-with-Generative-AI":{"title":"AI - W7 Learning with Generative AI","content":"# Learning with Generative AI\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=19f3d17e-5d81-4c2b-8b5f-b16f016956ca\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Learning with Generative AI\" \u003e\u003c/iframe\u003e\n\n**NOTE: Content from this video will not appear on the week 7 entry ticket or be required in order to complete the week 7 discussion post!**\n\n# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- AI - W7 Learning with Generative AI\n- Next: [[AI - W7 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W7-Prompt-Engineering":{"title":"AI - W7 Prompt Engineering","content":"# Prompt Engineering\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9e54cd29-79e5-4d13-baf2-b16f01695690\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Prompt Engineering\" \u003e\u003c/iframe\u003e\n\n### Watch all sections of [ChatGPT Prompt Engineering for Developers - deeplearning.ai](https://learn.deeplearning.ai/courses/chatgpt-prompt-eng/lesson/1/introduction) (about 1.5 hours)\n\n# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- AI - W7 Prompt Engineering\n- Next: [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-Assignment":{"title":"AI - W8 Assignment","content":"# W8 / W9 Assignment - Final Project Proposals\n\n### Review the Final Project Assignment\n\n[[AI - Final Project Assignment]]\n\n### Create Your Final Project Proposal\n\nTo ensure that your final project is on the right track and aligns with the course requirements, you will submit a project proposal. This proposal will outline your chosen project topic, the approach you plan to take, and the expected deliverables. To assist you in creating a comprehensive proposal, you will collaborate with an AI model (GPT-4o or Claude Sonnet) to refine and validate your plan.\n\nKeep the scope of work fairly small and focused. There are only a few weeks left of class so start with an MVP and if you have time, you can expand on it from there.\n\nProposal Requirements:\n1. Project Topic:\n    - Clearly state the topic or problem you plan to address in your final project.\n2. Project Category:\n    - Specify which project category your proposal falls under (Statistical Model, Reinforcement Learning Task, AI-Powered Application, or Open-Ended Project).\n    - If you choose an open-ended project, provide a detailed description of your project idea and how it aligns with the course objectives.\n3. Approach and Methodology:\n    - Describe the approach you plan to take to tackle your chosen project at a high level.\n    - Outline the key steps involved in your project.\n    - Mention a few specific techniques, algorithms, or tools you might use.\n    - If applicable, mention any datasets or resources you will utilize.\n\nAI Collaboration: To ensure that your proposal meets the assignment requirements and covers all necessary aspects, you will work with an AI model (I'd recommend GPT-4o or Claude Sonnet) to refine and validate your plan.\n\nShare your proposal with the AI model and iterate based on its feedback until you have a comprehensive and well-structured plan.\n\nI'd suggest using this prompt before submitting.\n\n```\nPlease review my project proposal and provide feedback. Check how well my proposal aligns with the following requirements. Check for clarity, concision and completeness in my writing. Give specific areas for improvement, if any.\n\nProposal Requirements:\n*Keep the scope of work fairly small and focused. There are only a few weeks left of class so start with an MVP and if you have time, you can expand on it from there.*\n1. Project Topic:\n    - Clearly state the topic or problem you plan to address in your final project.\n2. Project Category:\n    - Specify which project category your proposal falls under (Statistical Model, Reinforcement Learning Task, AI-Powered Application, or Open-Ended Project).\n    - If you choose an open-ended project, provide a detailed description of your project idea and how it aligns with the course objectives.\n3. Approach and Methodology:\n    - Describe the approach you plan to take to tackle your chosen project at a high level.\n    - Outline the key steps involved in your project.\n    - Mention a few specific techniques, algorithms, or tools you might use.\n    - If applicable, mention any datasets or resources you will utilize.\n\nMy Proposal:\n{YourProposalHere}\n```\n\n*You do not have to take every suggestion the AI makes. Remember, you have more context about the task than the AI does and you are ultimately responsible for the work you submit.*\n\nSubmission: Submit your final project proposal as a PDF document to the assignment in Canvas. The proposal should be well-organized, clearly written, and free of grammatical or spelling errors.\n\nI will review your proposal and provide feedback to ensure you are on the right track. If necessary, I may request further clarification or suggest modifications to your plan.\n\nIf you have any questions or need assistance, feel free to reach out!\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- AI - W8 Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-Calling-LLM-APIs":{"title":"AI - W8 Calling LLM APIs","content":"# Calling LLM APIs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b8c87e62-d84a-46c0-ba38-b17700f99390\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Power Apps - Calling APIs\" \u003e\u003c/iframe\u003e\n\n\n# Lessons\n- [[AI - W8 Introduction]]\n- AI - W8 Calling LLM APIs\n- Next: [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-Introduction":{"title":"AI - W8 Introduction","content":"\n# Learning Objectives\n*These topics are what will be covered in knowledge checks and entry ticket quizzes.*\n- Understand how to use language models (LLMs) in applications by calling an API endpoint.\n- Learn how to work with the LangChain library to simplify LLM application development.\n- Explore the concept of chains in LangChain to create multi-step, autonomous processes that leverage LLMs to complete tasks.\n- Explore the concept of agents and tools in LangChain and understand how they can help LLMs provide better responses.\n\n# Lessons\n- AI - W8 Introduction\n- Next: [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-LangChain-Agents-and-Tools":{"title":"AI - W8 LangChain Agents and Tools","content":"# LangChain Agents and Tools\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=15eec3a6-52e5-4ad0-b0bf-b17700f965d5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Powered Apps - Agents and Tools\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- AI - W8 LangChain Agents and Tools\n- Next: [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-LangChain-LLM-Chains":{"title":"AI - W8 LangChain LLM Chains","content":"# LangChain LLM Chains\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=66a3fcbc-0462-40f0-b791-b17700f97faf\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Powered Apps - Chains\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- AI - W8 LangChain LLM Chains\n- Next: [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-LangChain-Prompts":{"title":"AI - W8 LangChain Prompts","content":"# LangChain Prompts\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=0c5e2915-e021-4771-bae5-b17700f98c39\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Powered Apps - LangChain Prompts\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- AI - W8 LangChain Prompts\n- Next: [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-W8-LangChain-for-LLM-Application-Development-Lessons":{"title":"AI - W8 LangChain for LLM Application Development Lessons","content":"# LangChain Lessons\n\nWatch and follow along (either locally or on Google Colab) with the following sections of [LangChain for LLM Application Development (deeplearning.ai)](https://learn.deeplearning.ai/courses/langchain/lesson/1/introduction)\n- Introduction\n- Models, prompts and parsers\n- Memory\n- Chains\n- *You can skip \"Question and Answer\" and \"Evaluation\" for now*\n- Agents\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- AI - W8 LangChain for LLM Application Development Lessons\n- Next: [[AI - W8 Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/AI-Spring24/AI-_-Lesson-Index":{"title":"AI _ Lesson Index","content":"# Introduction to AI and Machine Learning\n\n- [[AI - W1 Introduction]]\n- [[AI - W2 Introduction]]\n- [[AI - W3 Introduction]]\n- [[AI - W4 Introduction]]\n- [[AI - W5 Introduction]]\n- [[AI - W6 Introduction]]\n- [[AI - W7 Introduction]]\n- [[AI - W8 Introduction]]\n- [[AI - W10 Introduction]]\n- [[AI - Final Project Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/One-Offs/MISC-Node-Lessons-OLD":{"title":"MISC - Node Lessons OLD","content":"\n# Node Lessons\n\n\n\n### Installing Node\n\nDownloads:\n- [Node.js (nodejs.org)](https://nodejs.org/en)\n- [Visual Studio Code - Code Editing. Redefined](https://code.visualstudio.com/)\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=500a44f9-4637-4817-a79f-b12901293a5b\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Project Setup and Hello World App\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=41131105-dffe-4c67-8c22-b12901293a32\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n##### Terminal Commands from Video\n\nCreate the project:\n```bash\nnpm init -y\n```\n\nInstall express and ejs:\n```bash\nnpm install express ejs\n```\n\nInstall nodemon:\n```bash\nnpm install --save-dev nodemon\n```\n\nStart node\n```bash\nnpx nodemon index.js\n```\n\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/One-Offs/NET-Example":{"title":"NET Example","content":"Model\n```cs\npublic class Book\n{\n    public int Id { get; set; }\n    public string Title { get; set; }\n    public string Author { get; set; }\n    public int Year { get; set; }\n}\n```\n\nService\n```cs\npublic interface IBookRepository\n{\n    Book GetById(int id);\n    void Add(Book book);\n    void Update(Book book);\n    void SaveChanges();\n}\n```\n\n```cs\npublic interface IBookService\n{\n    Task\u003cBook\u003e GetBookByIdAsync(int id);\n    Task\u003cBook\u003e AddBookAsync(Book book);\n    Task\u003cBook\u003e UpdateBookAsync(int id, Book book);\n}\n```\n\n```cs\npublic class BookService : IBookService\n{\n    private readonly IBookRepository _bookRepository;\n\n    public BookService(IBookRepository bookRepository)\n    {\n        _bookRepository = bookRepository;\n    }\n\n    public Book GetBookById(int id)\n    {\n        return _bookRepository.GetById(id);\n    }\n\n    public Book AddBook(Book book)\n    {\n        _bookRepository.Add(book);\n        _bookRepository.SaveChanges();\n        return book;\n    }\n\n    public Book UpdateBook(int id, Book updatedBook)\n    {\n        var book = _bookRepository.GetById(id);\n        if (book != null)\n        {\n            book.Title = updatedBook.Title;\n            book.Author = updatedBook.Author;\n            book.Year = updatedBook.Year;\n            _bookRepository.Update(book);\n            _bookRepository.SaveChanges();\n        }\n        return book;\n    }\n}\n```\n\n\nController\n```cs\nusing Microsoft.AspNetCore.Mvc;\n\n[ApiController]\n[Route(\"[controller]\")]\npublic class BooksController : ControllerBase\n{\n    private readonly IBookService _bookService;\n\n    public BooksController(IBookService bookService)\n    {\n        _bookService = bookService;\n    }\n\n    [HttpGet(\"{id}\")]\n    public IActionResult Get(int id)\n    {\n        var book = _bookService.GetBookById(id);\n        if (book == null) return NotFound();\n        return Ok(book);\n    }\n\n    [HttpPost]\n    public IActionResult Post([FromBody] Book book)\n    {\n        var newBook = _bookService.AddBook(book);\n        return CreatedAtAction(nameof(Get), new { id = newBook.Id }, newBook);\n    }\n\n    [HttpPut(\"{id}\")]\n    public IActionResult Put(int id, [FromBody] Book book)\n    {\n        var updatedBook = _bookService.UpdateBook(id, book);\n        if (updatedBook == null) return NotFound();\n        return Ok(updatedBook);\n    }\n}\n```\n\nProgram.cs (application entry point)\n```cs\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddControllers();\nbuilder.Services.AddScoped\u003cIBookService, BookService\u003e();\nbuilder.Services.AddScoped\u003cIBookRepository, BookRepository\u003e();\n\n\nvar app = builder.Build();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseDeveloperExceptionPage();\n}\n\napp.UseHttpsRedirection();\n\napp.UseAuthorization();\n\napp.MapControllers();\n\napp.Run();\n\n```","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/LEGACY-SQL-_-Lesson-Index":{"title":"LEGACY SQL _ Lesson Index","content":"# SQL For Data Analytics Lesson Index\n\nModule One:\n- Introduction to Databases and Relational Tables\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n\nModule Two:\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- Create and Populate Tables (still in canvas)\n- [[SQL - W7 Many-to-Many Relationships]]\n- [[SQL Analytics M8 - Entity Relationship Diagrams]]\n- [[SQL Analytics M8 - Database Design]]\n\nModule Three:\n- [[SQL - W10 Advanced Querying - Introduction]]\n\n[[SQL - Final Exam]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-Final-Exam":{"title":"SQL - Final Exam","content":"# Final Exam Info\n\nThere is a **required in-person final exam** for this course on **Monday June 17th from 12:00-2:00pm** PST at the Auburn Center in room AC 310 (1221 D St NE, Auburn, WA 98002).\n\nIf you cannot attend the final exam at that time you **MUST** get in contact with me as soon as possible to make other arrangements. Please email me at kflint-blanchard@greenriver.edu.\n\n# Practice Final Exam -\u003e [[SQL - Practice Final]]\n# Topics\n\nThe following topics may appear on the final exam:\n*NOTE: Some of these may not have been covered yet if you're viewing this before week 10. All of these concepts will be covered before the final exam.*\n### Database Concepts:\n- Tables and their structure\n- Primary and foreign keys\n- Relationships between tables (one-to-many, many-to-many)\n- Data types\n\t- DATE\n\t- INT\n\t- TEXT\n\t- VARCHAR\n\t- DECIMAL\n\n### SQL Querying:\n- SELECT statements\n- WHERE clauses\n- LIKE operator\n- ORDER BY clause\n- JOINs\n- Aggregate functions (e.g., AVG, SUM, COUNT)\n- GROUP BY clause\n\n### Entity Relationship Diagrams (ERDs):\n- Understanding and creating ERDs given the SQL CREATE statements or a set of tables\n- Identifying entities, attributes, datatypes, and relationships\n- Crow's foot notation for representing relationships\n\n### Applying SQL Queries for Data Analytics:\n- Applying SQL concepts to solve real-world scenarios\n- Calculating aggregated metrics (e.g., total sales, average price, etc.)\n- Combining data from multiple tables using JOINs\n- Presenting data in a meaningful and understandable format\n- Drawing insights and conclusions from the data\n\n# Cheat Sheet\n\nI **DO NOT** allow you to bring your own notes for the final exam. I will provide the following cheat sheet on the exam day that will show the basic syntax of all the commands you will need.\n\n### SELECTs, Operators and Clauses\n```sql\n-- SELECT Syntax\nSELECT Column1, Column2, ... FROM TableName\n\n-- Table JOIN Syntax\nJOIN TableName2 ON TableName1.PrimaryKeyColumn = TableName2.ForeignKeyColumn\n\n-- WHERE Syntax\nWHERE condition\n\n-- WHERE Operator List\nWHERE condition AND condition\nWHERE condition OR condition\nWHERE ColumnName BETWEEN x AND y\nWHERE NOT condition\nWHERE ColumnName IN (x, y, z)\nWHERE ColumnName LIKE \"Pattern\"\n-- The LIKE operator is used in the WHERE clause to search for a specified pattern in a column. It is often used with wildcard characters such as:\n-- The percentage sign (%) represents zero, one, or multiple characters.\n-- The underscore sign (_) represents a single character.\n```\n\n```sql\n-- ORDER BY\n-- 1 Column, Descending\nORDER BY ColumnName DESC\n-- Multiple Columns, Ascending\nORDER BY Column1, Column2,... ASC\n```\n\n### GROUP BY and Aggregation\n```sql\n-- GROUP BY Command\nSELECT Column1, AggregateFunction(Column2), ... FROM TableName \nGROUP BY Column1;\n\n-- Aggregate Functions\nCOUNT(*)\nMAX(ColumnName)\nMIN(ColumnName)\nSUM(ColumnName)\nAVG(ColumnName)\n```\n\n\n### CREATE and INSERT Statements\n```sql\n-- CREATE Table\nCREATE TABLE TableName(\n\t-- Add Column\n\tColumn1 datatype,\n\t-- Can be NULL\n\tColumn2 datatype NULL,\n\t-- Cannot be NULL\n\tColumn3 datatype NOT NULL,\n\t\n\t-- Establish Primary Key Constraint\n\tPrimary Key (Column1),\n\t-- Establish Foreign Key Constraint\n\tFOREIGN KEY (ForeignKeyColumn) REFERENCES OtherTable(PrimaryKeyColumn)\n);\n\nINSERT INTO TableName VALUES (\"Column1Value\", \"Column2Value\", ...);\n\n-- Data Types\nDATE -- Stores the date in the format \"YYYY-MM-DD\"\nINT\nTEXT -- Stores long form text\nVARCHAR(MaxCharacters)\nDECIMAL(Digits, NumberOfDigitsAfterDecimalPoint)\n```\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-Practice-Final":{"title":"SQL - Practice Final","content":"\nThe format and topics covered in this practice final closely mirror what you will encounter on the final exam. To ensure you're fully prepared, these practice questions are designed to be slightly more challenging versions of the types of questions you'll be asked in the final exam.\n\n# SDEV 201 Practice Exam\n\n### Part 1: Querying\n\nGiven the following tables, write SQL queries to retrieve the requested information.\n##### Employee\n\n| EmployeeID | FirstName | LastName | DepartmentID | Salary |\n| ---------- | --------- | -------- | ------------ | ------ |\n| 1          | Ahmed     | Khan     | 1            | 65,000 |\n| 2          | Samantha  | Davis    | 2            | 80,000 |\n| 3          | Ava       | Williams | 3            | 72,000 |\n| 4          | Diego     | Gonzalez | 2            | 90,000 |\n| 5          | Sam       | Johnson  | 4            | 68,000 |\n| 6          | Samir     | Patel    | 3            | 75,000 |\n\n##### Project\n\n| ProjectID | Name               | DepartmentID | Budget |\n| --------- | ------------------ | ------------ | ------ |\n| 1         | Website Redesign   | 2            | 50,000 |\n| 2         | Recruitment Drive  | 1            | 25,000 |\n| 3         | Financial Analysis | 3            | 40,000 |\n| 4         | Marketing Campaign | 4            | 60,000 |\n| 5         | Server Upgrade     | 2            | 35,000 |\n\n##### Department\n\n| DepartmentID | Name      |\n| ------------ | --------- |\n| 1            | HR        |\n| 2            | IT        |\n| 3            | Finance   |\n| 4            | Marketing |\n\n##### ProjectAssignment\n\n| AssignmentID | EmployeeID | ProjectID | HoursWorked |\n| ------------ | ---------- | --------- | ----------- |\n| 1            | 1          | 2         | 40          |\n| 2            | 2          | 1         | 35          |\n| 3            | 2          | 5         | 25          |\n| 4            | 3          | 3         | 45          |\n| 5            | 4          | 1         | 50          |\n| 6            | 4          | 5         | 30          |\n| 7            | 5          | 4         | 55          |\n| 8            | 6          | 3         | 40          |\n\n1. Write a query to retrieve the ID, first name, and last name of all employees.\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\nSELECT EmployeeID, FirstName, LastName FROM Employee;\n\u003c/details\u003e\n\n2. Write a query to retrieve the project name and budget for all projects in the 'IT' department.\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cp\u003eSELECT Project.Name, Budget FROM Project\u003c/p\u003e\n\u003cp\u003eJOIN Department ON Project.DepartmentID = Department.DepartmentID\u003c/p\u003e\n\u003cp\u003eWHERE Department.Name = 'IT';\u003c/p\u003e\n\u003c/details\u003e\n\n3. What data would be returned by the following query? Fill in the table with the correct information. You may leave the extra rows blank.\n\n```sql\nSELECT FirstName, Salary, Name AS \"DepartmentName\" FROM Employee\nJOIN Department ON Employee.DepartmentID = Department.DepartmentID\nWHERE FirstName LIKE '%Sam%' AND Salary \u003e 70000\nORDER BY Salary DESC;\n```\n\n| FirstName | Salary | DepartmentName |\n| --------- | ------ | -------------- |\n|           |        |                |\n|           |        |                |\n|           |        |                |\n|           |        |                |\n|           |        |                |\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cp\u003eFirstName | Salary | DepartmentName\u003c/p\u003e\n\u003cp\u003eSamantha | 80,000 | IT\u003c/p\u003e\n\u003cp\u003eSamir | 75,000 | Finance\u003c/p\u003e\n\u003c/details\u003e\n\n4. Write a query to retrieve all project assignments. Include the name of the project and the first and last name of the employee. Order the results alphabetically by the project name.\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cp\u003eSELECT Name AS ProjectName, FirstName, LastName FROM ProjectAssignment\u003c/p\u003e\n\u003cp\u003eJOIN Project ON ProjectAssignment.ProjectID = Project.ProjectID\u003c/p\u003e\n\u003cp\u003eJOIN Employee ON ProjectAssignment.EmployeeID = Employee.EmployeeID\u003c/p\u003e\n\u003cp\u003eORDER BY Project.Name ASC;\u003c/p\u003e\n\u003c/details\u003e\n\n5. Write a query to retrieve the employee ID, employee last name and the total hours worked on all projects for each employee. Order the results by the total hours worked (highest to lowest).\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cp\u003eSELECT Employee.EmployeeID, LastName, SUM(HoursWorked) AS TotalHours FROM ProjectAssignment\u003c/p\u003e\n\u003cp\u003eJOIN Employee ON ProjectAssignment.EmployeeID = Employee.EmployeeID\u003c/p\u003e\n\u003cp\u003eJOIN Project ON ProjectAssignment.ProjectID = Project.ProjectID\u003c/p\u003e\n\u003cp\u003eGROUP BY Employee.EmployeeID\u003c/p\u003e\n\u003cp\u003eORDER BY TotalHours DESC;\u003c/p\u003e\n\u003c/details\u003e\n\n### Part 2: Entity Relationship Diagrams and Creating Tables\n\n6. Draw the Entity Relationship Diagram for the Employee, Project, Department, and ProjectAssignment tables given above. Make sure to include all columns, the data type you think each column should have and any relationships between the tables. Represent relationships between tables with Crow's Foot Notation.\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/PracticeExamDiagramKey.png\"\u003e\n\u003c/details\u003e\n\n7. Write the CREATE statement for only the Project table. Make sure to include all columns, the data type of each column, and any primary or foreign key constraints.\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cp\u003eCREATE TABLE Project (\u003c/p\u003e\n\u003cp\u003e    \u0026emsp;ProjectID INT PRIMARY KEY,\u003c/p\u003e\n\u003cp\u003e    \u0026emsp;Name VARCHAR(100) NOT NULL,\u003c/p\u003e\n\u003cp\u003e    \u0026emsp;DepartmentID INT NULL,\u003c/p\u003e\n\u003cp\u003e    \u0026emsp;Budget INT NOT NULL,\u003c/p\u003e\n\u003cp\u003e    \u0026emsp;FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)\u003c/p\u003e\n\u003cp\u003e);\u003c/p\u003e\n\u003cp\u003eNote: Assign columns to be NULL or NOT NULL according to your best judgement.\u003cp\u003e\n\u003c/details\u003e\n\n8. Based on the Northwind Traders diagram below, write a query to retrieve all orders. Include the order's ID, the order's date, the name of the customer who placed the order, and the name of shipper delivering the order.\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/NorthwindERD.png\"\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003eShow Answer\u003c/summary\u003e\n\u003cp\u003eSELECT OrderID, OrderDate, CustomerName, ShipperName FROM Orders\u003c/p\u003e\n\u003cp\u003eJOIN Customers ON Orders.CustomerID = Customers.CustomerID\u003c/p\u003e\n\u003cp\u003eJOIN Shippers ON Orders.ShipperID = Shipper.ShipperID\u003c/p\u003e\n\u003c/details\u003e\n\n### Part 3: SQL for Data Analytics\n\n*This section is worth only a few points on the final exam. Focus your efforts on parts 1 and 2 before tackling the data analytics section.*\n\nNorthwind Traders wants to identify the most promising locations for expansion based on current customer purchasing patterns.\n\nUsing the Northwind Traders diagram above, construct a query that gives meaningful insights into customer purchasing behavior across different locations to inform the company's regional expansion decisions. Include at least two calculated or aggregated metrics in your query. Make your the query output is well organized and formatted so it is easy for business stakeholders to understand. Provide a brief explanation of how the query you wrote could inform the expansion strategy.\n\n---\n\n### Part 3 Answer:\n\n*I have no specific answer I have in mind for data analytics questions. I'm looking for functional queries that meet the requirements given in the question and help give meaningful insight into the data. I'm also looking for good reasoning about the kind of conclusions your query can provide and what considerations or assumptions went in to designing your query. Below is one possible solution.*\n\n```sql\nSELECT c.Country, COUNT(*) AS TotalOrders, SUM(od.Quantity * p.Price) AS TotalRevenue FROM Customers c\nJOIN Orders o ON c.CustomerID = o.CustomerID\nJOIN OrderDetails od ON o.OrderID = od.OrderID\nJOIN Products p ON od.ProductID = p.ProductID\nGROUP BY c.Country\nORDER BY TotalRevenue DESC;\n```\n\nThis query provides an overview of the total orders and revenue generated from each country that Northwind Traders can use to identify their top performing locations. Looking at both total orders and revenue by region is important because it provides a more comprehensive view of market performance and potential.\n\nTotal orders can indicate the size of size customer base in each region, while revenue reflects the monetary value of those orders. A region with many orders but low revenue may have a large but low-spending customer base, while a region with few orders but high revenue may have a smaller but high-value customer base.","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-Aggregate-Functions":{"title":"SQL - W10 Advanced Querying - Aggregate Functions","content":"# Advanced Querying - Aggregate Functions\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=24a1eee0-12dd-4809-bc0e-b12c00689ad8\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n*Use the magic store database for the following queries.*\n\n1. Write a query to find the total number of orders placed in 2021. \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR4.png\"\u003e\n\n2. Write a query to calculate the minimum, average and maximum price of all products supplied by \"Elixir Essentials\". \n\nExpected result: \n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR5.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- SQL - W10 Advanced Querying - Aggregate Functions\n- Next: [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-Calculating-Values":{"title":"SQL - W10 Advanced Querying - Calculating Values","content":"# Advanced Querying Topics Part 1 - Calculating Values\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=cf1f7215-ee7f-4f9a-a03c-b12c00689a49\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n*Use the magic store database for the following queries.*\n\n4. Write a query to display the client's full name (first name and last name combined) as \"Client Name\" and the date their account was created as \"Sign up Date\" for clients with the IDs 5, 10, 15, 20 and 25. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR6.png\"\u003e\n\n5. Write a query to display all products that cost over 1000 with their sales tax included. Your query should return columns for the \"Product Name\", \"Price\" and \"Price with Tax\". For the last columns you will need to multiply the product's price by 1.1 to include a 10% sales tax. \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR3.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- SQL - W10 Advanced Querying - Calculating Values\n- Next: [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-Column-Aliasing":{"title":"SQL - W10 Advanced Querying - Column Aliasing","content":"# Advanced Querying - Column Aliasing\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c709d480-ff4b-451f-8638-b12c00689afd\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n*Use the magic store database for the following queries.*\n\n3. Write a query to show all products that cost more than 1 and less than 100. Display the product name, the product's supplier name and the product's price. Rename the price column as \"Price (USD)\", product name column as \"Product Name\" and the supplier name column as \"Supplier Name\". \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR7.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- SQL - W10 Advanced Querying - Column Aliasing\n- Next: [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-Data-Analytics-with-GROUP-BY":{"title":"SQL - W10 Advanced Querying - Data Analytics with GROUP BY","content":"# Grouping and Data Analytics - Data Analytics with GROUP BY\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=5373a6b0-580f-4e3c-bbe0-b1330053f56d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- SQL - W10 Advanced Querying - Data Analytics with GROUP BY\n- Next: [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-GROUP-BY":{"title":"SQL - W10 Advanced Querying - GROUP BY","content":"\n# Grouping and Data Analytics - GROUP BY\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=3caf9f08-858f-4406-8c75-b1330053f5c3\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- SQL - W10 Advanced Querying - GROUP BY\n- Next: [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-Introduction":{"title":"SQL - W10 Advanced Querying - Introduction","content":"# Advanced Querying - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=8131671e-26a5-4ca1-ac7f-b1830178a06c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Advanced Querying Introduction\" \u003e\u003c/iframe\u003e\n\n## Initialize the Magic Store Database\n\n- DROP the tables from your previous assignment(s), if necessary\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/SQL-Files/MagicStoreScript.sql\" target=\"_blank\"\u003eMagicStoreScript (github.com)\u003c/a\u003e\n- Magic Store Database Overview: [[SQL - W3 Magic Store Database Overview]]\n# Lessons\n- SQL - W10 Advanced Querying - Introduction\n- Next: [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-Northwind-Database":{"title":"SQL - W10 Advanced Querying - Northwind Database","content":"# Northwind Database\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9fe46beb-4470-4e3f-bae4-b1330074ad4d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Initialize the Northwind Database\n\n- DROP the tables from your previous assignment(s), if necessary\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/SQL-Files/NorthwindScript.sql\" target=\"_blank\"\u003eNorthwindScript (github.com)\u003c/a\u003e\n\n### Northwind Database Entity Relationship Diagram\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/NorthwindERD.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- SQL - W10 Advanced Querying - Northwind Database\n- Next: [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W10-Advanced-Querying-and-Data-Analytics-Assignment":{"title":"SQL - W10 Advanced Querying and Data Analytics Assignment","content":"\n# Advanced Querying and Data Analytics Assignment\n\n**Use the Magic Store database for the following queries. Each query is worth 5 points.**\n\n6. Write a query to display the total quantity of products ordered by the client with the last name \"Martinez\". Display the client's full name as \"Client Name\" and the total quantity of products as \"Total Products Ordered\". \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR9.png\"\u003e\n\n7. Write a query to display the total amount of revenue that has been generated from the \"Snail\" product. To do this your query will need to:\n\t1. Find the total quantity of \"Snail\" products that have been ordered.\n\t2. Multiply the total quantity of snail's purchased by the price of a snail.\n\t3. Rename this column \"Snail Total Revenue\". \n\t\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR8.png\"\u003e\n\n8. Write a query to display the prices of the most and least expensive products ordered in January through March of 2021. Name the columns \"Cheapest\" and \"Most Expensive\". \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR10.png\"\u003e\n\n**Use the Northwind database for the following queries. Each query is worth 5 points.**\n\n9. The procurement team wants to know the number of suppliers from each country. They need a report showing the country and the corresponding supplier count. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB1.png\"\u003e\n\n10. The inventory manager wants to know the number of products supplied by each supplier for products with a unit price greater than 30. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB2.png\"\u003e\n\n11. The procurement team wants to analyze the price range (highest / lowest) and average price of products supplied by each supplier. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB3.png\"\u003e\n\n12. The customer service team wants to identify the 5 most active customers based on the number of orders they have placed. Write a query to accomplish this. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB4.png\"\u003e\n\n### Submission Instructions\n\nPlease put all SQL queries for the practice questions into a single SQL file. Use comments to label each query with its respective question number. Submit this .sql file for your assignment on Canvas.\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- SQL - W10 Advanced Querying and Data Analytics Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-Creating-a-Database":{"title":"SQL - W2 Select and Filter Data - Creating a Database","content":"# Select and Filter Data - Creating a Database\n\nBefore getting started you'll want to make sure that you have a text or code editor installed. You will need this to write SQL scripts. I'd recommend \u003ca href=\"https://code.visualstudio.com/\" target=\"_blank\"\u003eVisual Studio Code\u003c/a\u003e but you can use whatever software you'd like.\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=03277e59-0052-4bd5-afbe-b08f01438c9e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n\n- SQL - W2 Select and Filter Data - Creating a Database\n- Next: [[SQL - W2 Select and Filter Data - Running Scripts]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-Introduction":{"title":"SQL - W2 Select and Filter Data - Introduction","content":"# Select and Filter Data - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=099d37f5-9a86-4ea6-95b8-b0f20177b4ed\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn this section, we'll cover key SQL concepts to help you retrieve, filter and sort the information in your databases. We will cover using the SELECT statement to pick out the specific columns we're interested in. We'll learn to filter which rows we get using the WHERE clause and explore more some of the logic that can help us find exactly what we're looking for. Last, we'll understand how to sort our data using the ORDER BY clause.\n\nAs you progress through the lessons, make sure to solve the practice questions in your own database. Be sure to save all your queries to a file on your computer. You will need to submit them as part of your weekly assignment.\n\n\n# Lessons\n- SQL - W2 Select and Filter Data - Introduction\n- Next: [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-Logical-Operators":{"title":"SQL - W2 Select and Filter Data - Logical Operators","content":"# Select and Filter Data - Logical Operators\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1d1412b2-7cca-43cf-af61-b0f20177942c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nLogical operators are essential in SQL for combining multiple conditions in the WHERE clause and adding flexibility to your queries. With the right operators, you can filter for rows based on any combination of attributes and conditions.\n\nSome of the most commonly used logical operators used in SQL are:\n- `AND`: Returns true if both conditions are true.\n- `OR`: Returns true if at least one of the conditions is true.\n- `NOT`: Negates the condition, returning true if the condition is false.\n- `BETWEEN`: Returns true if a value lies within a specified range.\n- `IN`: Returns true if a value matches any value in a list.\n- `LIKE`: Returns true if a value matches a specified pattern.\n\nExpanding on the `Employees` table from our previous examples:\n\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 1 | John Doe | 28 | Marketing |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n| 4 | Sara Ali | 30 | Finance |\n| 5 | Mia Chen | 26 | Marketing |\n\nTo find employees over 30 years old in the IT department we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Age \u003e 30 AND Department = 'IT';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|3|Alex Ray|45|IT|\n\nAs 'Alex Ray' is the only employee who matches both criteria.\n\nAlternatively if we wanted to find employees who are either in the 'HR' departments OR over 30 years old we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Age \u003e 30 OR Department = 'IT';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|2|Jane Doe|32|HR|\n|3|Alex Ray|45|IT|\n\nBecause while 'Jane Doe' is not in the 'IT' department, she is older than 30 and only one condition needs to be met.\n\nTo find all employees who are between the ages of 20 and 30 we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Age BETWEEN 20 AND 30;\n```\n##### Expected Output: \n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 1 | John Doe | 28 | Marketing |\n| 4 | Sara Ali | 30 | Finance |\n| 5 | Mia Chen | 26 | Marketing |\n\nThis time the expected output includes Sara Ali because `BETWEEN` is inclusive meaning we'll also get employees who are equal to the thresholds.\n\nTo find employees who work in either 'Marketing', 'Finance', or 'IT' departments we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Department IN ('Marketing', 'Finance', 'IT');\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n|5|Mia Chen|26|Marketing|\n\nThe `LIKE` command is slightly more complicated. It can be used to find values that match a particular pattern a pattern. For example if we wanted to find employees whose names started the letter 'J' we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Name LIKE 'J%';\n```\n##### Expected Output:\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 1 | John Doe | 28 | Marketing |\n| 2 | Jane Doe | 32 | HR |\n\nThe `%` symbol after the 'J' is a wildcard that represents zero, one, or multiple characters. So this pattern is looking for Names that start with a 'J' followed by any number of any characters (or none at all).\n\n`Like` can allow you to match any pattern with the right wildcards. See \u003ca href=\"https://www.w3schools.com/sql/sql_wildcards.asp\" target=\"_blank\"\u003eSQL Wildcard Characters (w3schools.com)\u003c/a\u003e for more information on Wildcards.\n\n# Practice Questions\n\n4. Write a query to select all customers who are from 'Berlin', 'London', 'Vancouver', 'São Paulo' or 'Madrid'.\n\n5. Write a query to select all customers who are not from 'Germany' and whose contact ages are under 60 years old.\n\n6. Write a query to select all customers whose contact ages are between 25 and 35 and whose contact name starts with an 'Al'.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- SQL - W2 Select and Filter Data - Logical Operators\n- Next: [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-Note-on-Semicolons":{"title":"SQL - W2 Select and Filter Data - Note on Semicolons","content":"# Select and Filter Data - Note on Semicolons\n\n### Why use semicolons?\n\nSo far we've only been executing a single query at a time but we could run more. A single query does not generally require a semicolon. However when you have multiple SQL statements in a script a semicolon is used to separate each statement. This prevents confusion for SQL about where one statement ends and the next begins.\n\nUsing semicolons is considered a best practice even when they are not strictly required and I will be expecting you to use them in your work for this course.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- SQL - W2 Select and Filter Data - Note on Semicolons\n- Next: [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-ORDER-BY":{"title":"SQL - W2 Select and Filter Data - ORDER BY","content":"# Select and Filter Data - ORDER BY\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1304790b-0894-4c02-90b6-b0f2017793fc\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nThe `ORDER BY` clause is used to sort the result set of a query by one or more columns. It can sort the data in ascending or descending order. By default, it sorts in ascending order. \n\n`ORDER BY` must come after the WHERE clause. This makes sense if we think about it, we do not want to sort the rows until we've already filtered out the ones we don't want.\n\nUsing the `Employees` table from the previous example:\n\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|2|Jane Doe|32|HR|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n|5|Mia Chen|26|Marketing|\n\nWe can sort the results by columns such as age with:\n\n```sql\nSELECT * FROM Employees\nORDER BY Age;\n```\n##### Expected Output\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 5 | Mia Chen | 26 | Marketing |\n| 1 | John Doe | 28 | Marketing |\n| 4 | Sara Ali | 30 | Finance |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n\nIf we instead wrote:\n\n```sql\nSELECT * FROM Employees\nORDER BY Age DESC;\n```\n\nWe would get the same list but sorted from the highest to lowest age.\n\nIt is also possible to `ORDER BY` multiple columns:\n\n```sql\nSELECT * FROM Employees\nORDER BY Department, Age;\n```\n##### Expected Output:\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 4 | Sara Ali | 30 | Finance |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n| 5 | Mia Chen | 26 | Marketing |\n| 1 | John Doe | 28 | Marketing |\n\nIn this ordered list, employees are sorted by their departments ('Finance', 'HR', 'IT', and 'Marketing'), and within each department, they are sorted by their age from youngest to oldest.\n\n# Practice Questions\n\n7. Write a query to select all customers and order them alphabetically by the customer name.\n\n8. Write a query to select all customers and order them by their Ids from highest to lowest.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- SQL - W2 Select and Filter Data - ORDER BY\n- Next: [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-Practice-Assignment":{"title":"SQL - W2 Select and Filter Data - Practice Assignment","content":"# Select and Filter Data - Practice Assignment\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=301026b3-0fb6-4a0b-abc9-b0f2017793d2\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\nIn addition to the practice problems from the lesson pages, write queries to do the following:\n\n9. Select customers who are not from 'Berlin' or 'London' and are younger than 50. Order the results by age in descending order.\n\n10. Select customers whose customer name starts with an 'L' or an 'M'. Order the results by Id in descending order.\n\n### Submission Instructions\n\nPlease put all SQL queries for the practice questions into a single SQL file. Use comments to label each query with its respective question number. Submit this .sql file for your assignment on Canvas.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- SQL - W2 Select and Filter Data - Practice Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-Running-Scripts":{"title":"SQL - W2 Select and Filter Data - Running Scripts","content":"# Select and Filter Data - Running Scripts\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=3b6bc768-5330-4f2b-9f42-b0f20177a502\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nTo get started with hands-on practice, you'll need data to populate your database. We'll do this by running a SQL script. Follow these steps to execute the script on your database:\n\n1. **Open the SQL File**:\n    - Open the script file -\u003e [NorthwindScript (github.com)](https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/SQL-Files/NorthwindScript.sql). It contains the commands to create tables and insert data into them.\n2. **Access phpMyAdmin**:\n    - From the WebHostingForStudents Client Area, find your website and click the \"Log in to cPanel\" button.\n    - Once in cPanel, click \"phpMyAdmin\" under the \"Databases\" section.\n3. **Connect to Your Database**:\n    - Make sure you're connected to the database that you want to run the script on. In this case, it will be the database you created for this class. In phpMyAdmin you can select the database by clicking on its name on the left side of the screen.\n4. **Run the Script**:\n    - To run SQL code, click the \"SQL\" tab in the horizontal menu at the top of the screen.\n    - Copy over the entire contents of the SQL script into the editor. \n    - Click the \"Go\" button at the bottom right. This will create the tables defined in the script and populate them with data.\n5. **Verify the Data**:\n    - After running the script, check to ensure that tables are created and data is inserted. You can do this by running a simple SELECT query, like `SELECT * FROM tablename;.\n\n# Lessons\n\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- SQL - W2 Select and Filter Data - Running Scripts\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-SELECT-Statement":{"title":"SQL - W2 Select and Filter Data - SELECT Statement","content":"# Select and Filter Data - SELECT Statement\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=aa477a38-2f05-4bf1-9aaf-b0f201779f3c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Database Basics Refresher\n\nDatabases exist to help us store and manage large amounts of information in an organized way. In SQL this data is organized into tables consisting of rows and columns. Each table in a database represents a different entity, such as customers, products, or orders. The rows in the table represent individual records, and the columns represent the attributes of these entities.\n##### Example Table: Customers\n| CustomerID | FirstName | LastName | Email               |\n|------------|-----------|----------|---------------------|\n| 1          | John      | Doe      | johndoe@email.com   |\n| 2          | Jane      | Smith    | janesmith@email.com |\n| 3          | Alex      | Johnson  | alexj@email.com     |\n\n## SELECT Statements\n\nThe `SELECT` statement is used to retrieve data from a database. It allows you to specify exactly which data you want to fetch from a table.\n\n##### Basic SELECT Syntax\n\n```sql\nSELECT column1, column2, ...\nFROM table_name;\n```\n\n##### Selecting Specific Columns\n\nTo retrieve specific columns from a table, list the column names separated by commas. For example the query:\n\n```sql\nSELECT FirstName, LastName\nFROM Customers;\n```\n##### Expected Output:\n| FirstName | LastName |\n| ---- | ---- |\n| John | Doe |\n| Jane | Smith |\n| Alex | Johnson |\n##### Selecting All Columns\n\nTo select all columns from a table, use the asterisk `*` symbol:\n\n```sql\nSELECT *\nFROM Customers;\n```\n\nThis query will result in the entire Customers table being displayed.\n\n# Practice Questions\n\n1. Select only the contact's name and age columns from the Customer table.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- SQL - W2 Select and Filter Data - SELECT Statement\n- Next: [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-SQL-Comments":{"title":"SQL - W2 Select and Filter Data - SQL Comments","content":"# Select and Filter Data - SQL Comments\n\nComments in SQL are used to explain sections of SQL statements, or to prevent execution of SQL statements. They are helpful for documentation purposes and making code more readable.\n\n## Types of Comments:\n\n#### Single-Line Comments\n\n```sql\n-- This is a single-line comment\nSELECT * FROM Employees;\n```\n#### Multi-Line Comments:\n\n```sql\n/* This is a multi-line comment\n   that covers multiple lines */\nSELECT * FROM Employees;\n\n```\n\nComments are a crucial part of writing maintainable, understandable SQL code, especially in complex queries or when working in teams. They allow you to explain why a certain SQL statement is used, or to temporarily disable parts of SQL code during testing and development.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- SQL - W2 Select and Filter Data - SQL Comments\n- Next: [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W2-Select-and-Filter-Data-WHERE-Clause-and-Comparison-Operators":{"title":"SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators","content":"# Select and Filter Data - WHERE Clause and Comparison Operators\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=10ae282e-3ce2-4f40-81b7-b0f201779467\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nThe WHERE clause in SQL is used to filter records from a table, returning only those that meet a specific condition. \n### Basics of the WHERE Clause \n\nThe WHERE clause follows the syntax: \n\n```sql\nSELECT column1, column2, ... FROM table_name \nWHERE condition;\n```\n\n### Comparison Operators\n\nThere are many different types of operators that can be used in our condition to filter what rows we get back based on the data they contain.\n\nThe first type are the comparison operators. These are used to compare values in a column with other values or expressions. These include:\n- `=` : Equal to\n- `\u003c` `\u003e` or `!` `=` : Not equal to\n- `\u003e` : Greater than\n- `\u003c` : Less than\n- `\u003e` `=` : Greater than or equal to\n- `\u003c` `=` : Less than or equal to\n\nFor example, assume we have a table `Employees` with the following data:\n\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|2|Jane Doe|32|HR|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n\nTo get details of employees from the 'Marketing' department we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Department = 'Marketing';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n\nIf we wanted to find all employees who are not in the 'HR' department we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Department \u003c\u003e 'HR';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n\nIf we wanted to see information for employees over the age of 30 we could write:\n\n```sql\nSELECT * FROM Employees \nWHERE Age \u003e 30;\n```\n##### Expected Output:\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n# Practice Questions\n\n2. Write a query to select all customers who are from 'Germany'.\n\n3. Write a query to select all customers whose contact age is less than or equal to 20.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators\n- Next: [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-Magic-Store-Database-Overview":{"title":"SQL - W3 Magic Store Database Overview","content":"\n# Magic Store Database Overview\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ff2760b3-299f-459d-853e-b0fb000eac4a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Initialize the Magic Store Database\n\n- DROP the tables from your previous assignment(s), if necessary\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/MagicStoreScript.sql\" target=\"_blank\"\u003eMagicStoreScript (github.com)\u003c/a\u003e\n\n## Magic Store Database Overview\n\n**You may not understand all the details of these tables yet. Don't worry!** We're about to go through it all in detail in the next few lessons. For now, here's a quick overview you can reference back to as needed when working on the practice questions for this section.\n\nThe Magic Store Database contains the records of a store that sells potions, ingredients and enchanted items to witches and wizards across the world. These tables are structured to handle a typical e-commerce scenario, where clients place orders for products, and each order can contain multiple products. The `OrderProduct` table is a joining table that manages the many-to-many relationship between orders and products.\n\n##### 1. `Supplier` Table:\n- `ID`: Unique identifier for each supplier.\n- `Name`: Name of the supplier.\n- `Address`: Physical address of the supplier.\n- `PhoneNumber`: Contact phone number of the supplier.\n##### 2. `Product` Table:\n- `ID`: Unique identifier for each product.\n- `Name`: Name of the product.\n- `Price`: Price of the product.\n##### 3. `Client` Table:\n- `ID`: Unique identifier for each client.\n- `FirstName`: First name of the client.\n- `LastName`: Last name of the client.\n- `AccountCreated`: The date when the client's account was created.\n##### 4. `Order` Table:\n- `ID`: Unique identifier for each order.\n- `OrderedOn`: The date when the order was placed.\n- `ClientID`: Identifies the client who placed the order.\n##### 5. `OrderProduct` Table:\n- `OrderID`: Identifies the order. It is linked to the `Order` table.\n- `ProductID`: Identifies the product. It is linked to the `Product` table.\n- `Quantity`: How many of each product are included in an order.\n\n\n\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- SQL - W3 Magic Store Database Overview\n- Next: [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-One-to-Many-JOINs-Practice-Assignment":{"title":"SQL - W3 One-to-Many JOINs - Practice Assignment","content":"\n# One-to-Many JOINs - Practice Assignment\n\n5. Write a query to list all orders and the clients who placed them, sorted by the order date.\n\n6. Write a query to list all suppliers and their products, where the supplier's phone number starts with '+14', sorted by the supplier name.\n\n7. Write a query to list all orders placed by the client with the first name 'Amity' in 2021 (i.e. between '2021-01-01' and '2021-12-31'). Include the client first and last name, the order date and the order ID. \n\t(*You can compare dates strings just like numbers! For example `WHERE Date \u003e '2021-12-01'` would return only rows where the `Date` was more recent than December 1st, 2021. `BETWEEN` also works with dates*)\n\n8. Write a query to list all orders placed between '2022-01-01' and '2022-12-31' by clients whose accounts were created on or after '2022-01-01', including the order ID, the client's first and last name, the date the order was placed and the date the client's account was created.\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- SQL - W3 One-to-Many JOINs - Practice Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-Table-JOINs-DROP-Tables":{"title":"SQL - W3 Table JOINs - DROP Tables","content":"\n# DROP Tables\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d3ae98bb-32d4-4e55-b179-b0fb000eabf2\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## DROP Tables\n\nThe `DROP` command in SQL is used to remove objects from the database. It's a powerful command that can permanently delete tables, databases, views, or indexes. For the time being, we're just interested in using it to remove tables.\n\n```sql\nDROP TABLE tableName; -- Where tableName is the name of the table you want to drop\n```\n\nThe `DROP` command is typically used during database cleanup, restructuring, or when you need to remove test tables or obsolete database objects. It's part of the standard housekeeping tasks a database engineer or administrator might perform.\n\nA few important things to keep in mind when using `DROP`:\n- **Irreversible**: The `DROP` command is irreversible, meaning once you execute it, you can't undo the operation or recover the dropped data unless you have a backup.\n- **Use with Caution**: Given its permanent nature, it should be used with caution. Always ensure you have a backup or are absolutely certain you no longer need the data you're removing.\n- **Permissions**: You need appropriate permissions to execute a `DROP` command on database objects. You have these permission on your databases but in the real world you may not.\n\n\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- SQL - W3 Table JOINs - DROP Tables\n- Next: [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-Table-JOINs-Filter-and-Sort-with-JOINs":{"title":"SQL - W3 Table JOINs - Filter and Sort with JOINs","content":"# Filter and Sort with JOINs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=68a81ea3-08b4-42c1-8467-b0fb000ebe38\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Using WHERE and ORDER BY with JOINs\n\nWe can still utilize the clauses from previous lessons to filter and sort on joined data. \n\nFor this example, we'll use the `Authors` and `Books` tables with a one-to-many relationship. Each author can write multiple books, but each book has only one author.\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table:\n| BookID | Title | AuthorID |\n| ---- | ---- | ---- |\n| 101 | Harry Potter | 1 |\n| 102 | 1984 | 2 |\n| 103 | Animal Farm | 2 |\n| 104 | War and Peace | 3 |\n| 105 | Anna Karenina | 3 |\n### SQL JOIN with Filter and Sort\n\nCreate a query that joins these tables and:\n1. Filters to show only books written by a specific author (e.g., George Orwell).\n2. Sorts the results by the book's title.\n\n```sql\nSELECT Books.Title, Authors.AuthorName FROM Books\nJOIN Authors ON Books.AuthorID = Authors.AuthorID\nWHERE Authors.AuthorName = 'George Orwell'\nORDER BY Books.Title;\n```\n##### Expected Output:\n|Title|AuthorName|\n|---|---|\n|Anna Karenina|Leo Tolstoy|\n|War and Peace|Leo Tolstoy|\n### Explanation:\n\n1. **SELECT Clause**: Retrieves the book titles and their corresponding author names.\n2. **JOIN Operation**: Joins the `Books` and `Authors` tables using the `AuthorID` as the common field.\n3. **WHERE Clause**: Filters the results to include only those books written by 'Leo Tolstoy'.\n4. **ORDER BY Clause**: Sorts the resulting list of books by their titles in ascending order.\n\n`JOIN` must come before our `WHERE` and `ORDER BY` clauses because we need to have access to both the `AuthorName` and `Title` in order to filter and sort them.\n\n# Practice Questions\n\n3. Write a query to list all products supplied by 'Enchanted Wares Ltd.' including the supplier name along with the product names and prices. Sort the results by product name (Z to A).\n\n4. Write a query to list all suppliers and their products, sorted by the supplier's name and product price.\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- SQL - W3 Table JOINs - Filter and Sort with JOINs\n- Next: [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-Table-JOINs-Introduction":{"title":"SQL - W3 Table JOINs - Introduction","content":"# Table JOINs - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=de230526-3b5f-4f66-b8b5-b0fb000eac18\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn this section, we will:\n- Interact with databases that have multiple related tables.\n- Discuss the different types of relationships tables can have with each other and how these relationships shape the way we retrieve and interpret data. \n- Explore the commands used to combine information from different tables, filter it based on specific criteria, and order it to get the results we want.\n\n\n# Lessons\n- SQL - W3 Table JOINs - Introduction\n- Next: [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-Table-JOINs-JOIN-Tables-with-One-to-Many-Relationships":{"title":"SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships","content":"\n# JOIN Tables with One-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=851a0a62-1d48-4d30-9bff-b0fb000eb927\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Understanding JOINs in One-to-Many Relationships\n\nGiven our bookstore database example from the previous lesson:\n### Authors Table:\n| AuthorID | AuthorName |\n| ---- | ---- |\n| 1 | J.K. Rowling |\n| 2 | George Orwell |\n| 3 | Leo Tolstoy |\n### Books Table:\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n\nIn order to retrieve data that spans across these two tables, we use the SQL JOIN operation. Let's see how we can use the JOIN command to fetch the list of books along with their authors' names.\n\n```sql\nSELECT Books.Title, Authors.AuthorName FROM Books\nJOIN Authors ON Books.AuthorID = Authors.AuthorID; \n```\n##### Expected Output:\n| Title         | AuthorName    |\n| ------------- | ------------- |\n| Harry Potter  | J.K. Rowling  |\n| 1984          | George Orwell |\n| Animal Farm   | George Orwell |\n| War and Peace | Leo Tolstoy   |\n| Anna Karenina | Leo Tolstoy   |\n\nThis query effectively combines data from the `Books` and `Authors` tables by linking books to their respective authors by the AuthorID. The `JOIN` operation, facilitated by the `ON` clause, ensures that each book is matched with its author. The selected columns `Books.Title` and `Authors.AuthorName` are displayed in the resulting output.\n\nTo understand exactly how the SQL JOIN command works in our Authors and Books example, let's break down the query piece by piece.\n#### 1. `SELECT Books.Title, Authors.AuthorName`\n- **Purpose**: This part of the query specifies what data we want to retrieve. Here, we are asking for the `Title` from the `Books` table and the `AuthorName` from the `Authors` table.\n- **Action**: It tells the database to look at these two columns and prepare to output data from them.\n#### 2. `FROM Books`\n- **Purpose**: This clause specifies the table from which to retrieve data, which in this case is the `Books` table.\n- **Action**: It sets the context for the SQL query, indicating that the data will be selected from the `Books` table.\n#### 3. `JOIN Authors`\n- **Purpose**: Indicates that we want to combine rows from our existing table(s) (e.g., the `Books` table in this case) with rows from the `Authors` table.\n- **Action**: It initiates the action to combine data from the two tables based on a related column.\n#### 4. `ON Books.AuthorID = Authors.AuthorID`\n- **Purpose**: This is the condition on which the JOIN will be performed. To function, the JOIN needs to know what column it should use to match records between the two tables. `ON` is used to map this relationship. In this case, we are joining the tables based on the `AuthorID` column, which is common to both tables.\n- **Action**: It matches each row in the `Books` table with the corresponding row in the `Authors` table where the `AuthorID` is the same.\n\n# Practice Questions\n\n1. Write a query to list all orders, including the order ID, the date the order was placed, and the first and last name of the client who placed the order./\n\n2. Write a query to display a list of all products, including their name, price, and the name and address of their supplier.\n\n\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships\n- Next: [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W3-Table-JOINs-One-to-Many-Relationships":{"title":"SQL - W3 Table JOINs - One-to-Many Relationships","content":"# Introduction to One-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b1546239-e7ce-4a5d-9068-b0fb000eabca\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b8901214-6404-4e52-9e50-b0fb000ee542\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## What is a One-to-Many Relationship?\n\nIn relational databases, a one-to-many relationship is the most fundamental type of relationship. This relationship exists when a record in one table can be associated with multiple records in another table.\n\nFor example, consider a database of a bookstore. Here, we have two tables: `Authors` and `Books`. An author can write multiple books, but each book is written by only one author. This is a classic one-to-many relationship.\n\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table:\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n### Understanding the Direction of the Relationship\n\nIt's important to understand exactly why this is a one-to-many relationship. Why can we can have many books per author but only one author per book? The structure of the table tells us this is how the relationship must work. Here's how:\n\n- **Single Author, Multiple Books**: Each author in the `Authors` table can write multiple books. An author's ID can appear in many rows in the `Books` table. For instance, if \"George Orwell\" writes two books, his ID appears next to each of those books in the `Books` table. Therefore an author can have many books.\n\n- **Single Book, Single Author**: Conversely, each book in the `Books` table is associated with only one author. For each row in the `Books` table, there is only a place for one AuthorID. For example, \"1984\" can only be associated with one author, George Orwell.\n\n### Terminology: Primary Keys and Foreign Keys\n\n#### Primary Key\n- A primary key is a unique identifier assigned to each record in a table. It ensures that each record can be distinctly identified, meaning no two records can have the same primary key value. This key is essential for maintaining the uniqueness and integrity of the data within the table.\n- In the `Authors` table, `AuthorID` serves as the primary key. Each author has a unique `AuthorID` that distinguishes it from others.\n- In the `Books` table, the `BookID` serves as the primary key. Each book has a unique `BookID` that distinguishes it from others.\n#### Foreign Key\n- A foreign key is a field (or collection of fields) in one table that uniquely identifies a row of another table. Put simply, a foreign key is a reference to the primary key of another table. It establishes a link between tables, showing how records in one table relate to records in another.\n- In the `Books` table, `AuthorID` serves as a foreign key. It references the `AuthorID` from the `Authors` table.\n- This foreign key creates the link between each book and its author, establishing the one-to-many relationship.\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- SQL - W3 Table JOINs - One-to-Many Relationships\n- Next: [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W4-HR-Database-Overview":{"title":"SQL - W4 HR Database Overview","content":"\n# HR Database Overview\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1bda4f91-4cd6-4dad-b0e3-b10100555862\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Initialize the HR Database\n\n- DROP the tables from your previous assignment(s), if necessary\n\t- See [[SQL - W3 Table JOINs - DROP Tables]] for a refresher on dropping tables.\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/HRScript.sql\"\u003eHRScript.sql (github.com)\u003c/a\u003e\n\t- See [[SQL - W2 Select and Filter Data - Running Scripts]] for a refresher on running DB scripts.\n## HR Database Overview\n\nThe HR Database is designed to mirror a typical business's human resources data management system. It's structured to handle employee data, departmental divisions, and job details. Here's a brief description of each table:\n\n##### 1. `employees` Table:\n\n- `employee_id`: Unique identifier for each employee (Primary Key).\n- `first_name`: First name of the employee.\n- `last_name`: Last name of the employee.\n- `email`: Email address of the employee.\n- `phone_number`: Contact phone number of the employee.\n- `hire_date`: The date when the employee was hired.\n- `job_id`: Identifier for the job role of the employee, referencing `jobs` (Foreign Key).\n- `salary`: The salary of the employee.\n- `manager_id`: The ID of the employee's manager, referencing `employees` (Foreign Key).\n- `department_id`: Identifier for the department the employee belongs to, referencing `departments` (Foreign Key).\n\n##### 2. `jobs` Table:\n\n- `job_id`: Unique identifier for each job role (Primary Key).\n- `job_title`: Title of the job role.\n- `min_salary`: Minimum salary for the job role.\n- `max_salary`: Maximum salary for the job role.\n\n##### 3. `departments` Table:\n\n- `department_id`: Unique identifier for each department (Primary Key).\n- `department_name`: Name of the department.\n- `location_id`: Identifier for the location of the department, referencing `locations` (Foreign Key).\n\n##### 4. `dependents` Table:\n\n- `dependent_id`: Unique identifier for each dependent (Primary Key).\n- `first_name`: First name of the dependent.\n- `last_name`: Last name of the dependent.\n- `relationship`: The relationship of the dependent to the employee.\n- `employee_id`: Identifier for the employee to whom the dependent is related, referencing `employees` (Foreign Key).\n\n##### 5. `regions` Table:\n\n- `region_id`: Unique identifier for each region (Primary Key).\n- `region_name`: Name of the region.\n\n##### 6. `countries` Table:\n\n- `country_id`: Unique identifier for each country (Primary Key).\n- `country_name`: Name of the country.\n- `region_id`: Identifier for the region to which the country belongs, referencing `regions` (Foreign Key).\n\n##### 7. `locations` Table:\n\n- `location_id`: Unique identifier for each location (Primary Key).\n- `street_address`: Physical address of the location.\n- `postal_code`: Postal code of the location.\n- `city`: City where the location is based.\n- `state_province`: State or province of the location.\n- `country_id`: Identifier for the country of the location, referencing `countries` (Foreign Key).\n\n\n\n# Lessons\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n- [[SQL - W4 JOINing Multiple Tables]]\n- [[SQL - W7 Table Aliasing]]\n- SQL - W4 HR Database Overview\n- Next: [[SQL - W4 Querying and Analysis for HR Database Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W4-JOINing-Multiple-Tables":{"title":"SQL - W4 JOINing Multiple Tables","content":"\n# JOINing Multiple Tables\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=237a7770-4291-4e02-97c9-b15d01311852\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Multiple Table Joins\" \u003e\u003c/iframe\u003e\n\n\n\n# Lessons\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n- SQL - W4 JOINing Multiple Tables\n- Next: [[SQL - W7 Table Aliasing]]\n- [[SQL - W4 HR Database Overview]]\n- [[SQL - W4 Querying and Analysis for HR Database Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W4-Querying-and-Analysis-for-HR-Database-Assignment":{"title":"SQL - W4 Querying and Analysis for HR Database Assignment","content":"\n# Querying and Analysis for HR Database Assignment\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=531fbeb7-cdae-4733-a89c-b1010055588d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEvery questions should be answered with exactly one query. You will need exactly one SELECT statement per question. Be sure to provide complete and correct answers to each questions.\n# Section 1: Understand the Data Structure\n\n**Question 1:** Write a query to list all the regions available in the `regions` table.\n\n**Question 2:** Find all countries in the `countries` table that are part of the region with `region_id` 2. Display the country names and their respective region IDs.\n\n**Question 3:** List the job titles from the `jobs` table where the minimum salary is greater than 5,000 a month. Order the results by the minimum salary in ascending order.\n\n**Question 4**: Retrieve the city and street address of all locations from the `locations` table that have the `country_id` of of 'UK'. Sort the results by city in alphabetical order.\n\n**Question 5**: Identify all departments in the `departments` table that have the `location_id` 1700. Display the department name and location ID.\n\n**Question 6**: Find all employees whose last name starts with an 'H'. Display their employee ID, first name, last name, email, and salary.\n\n**Question 7**: Display the first and last names of dependents along with the ID of the employee they are related to. Order the results by employee ID in descending order.\n\n# Section 2: Construct Relational Queries\n\n**Question 8**: List all dependents along with the names of the employees they are dependent on. Display each dependent's first and last name, and the first and last name of the associated employee.\n\n**Question 9**: Which employees work in the 'Shipping' department? Display the department name along with each employee's IDs, first name, and last name.\n\n**Question 10**: Find all locations in the 'Americas' region. Display the country name, state/province, city and street address.  List them in alphabetical order by the state/province.\n\n**Question 11**: List the first names, last names, job titles and salaries a of all employees who have 'Manager' in their job title.\n\n**Question 12**: Display the names and job titles of employees who work in any city other than 'Seattle'. Display the name of the city they work in as well.\n\n# Section 3: Perform Data Analysis\n\n***Use a multi-line comment to write explanations in the same .sql file as your queries.***\n\n**NOTE: Please do not use commands that have not been covered in class!** Aggregation functions, GROUP BY and sub-querying could be helpful, but are beyond the scope of this assignment. Draw conclusions using the tools we have discussed so far.\n\n**Question 13**: In what months are most employees hired? Provide a single query to justify your answer.\n*You can use `MONTH(some_date_column)` to extract just the month from a date.*\n\n**Question 14**: Why is Steven King's manager ID null? Is it a case of missing data or was it intentionally left blank? Write a one to three sentence explanation. Provide a single query to prove your answer.\n\n**Question 15**: Which cities seem to pay the highest salaries? Provide the query you wrote to explore the relationship between location and salary. Write a few sentences explaining how you came to this conclusion based on your query results.\n*It might be useful to order by two columns. Think about which two would make the most sense. See [[SQL - W2 Select and Filter Data - ORDER BY]] for a refresher on ordering by multiple columns.*\n\n**IMPORTANT**: Make sure you copy your **ENTIRE SCRIPT** into PHPMyAdmin and run it against the database before you submit. Confirm that everything works as expected. **If you submit a script that does not run it will receive a ZERO!** Start early so you have time to get help and make corrections if needed!\n\n# Lessons\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n- [[SQL - W4 JOINing Multiple Tables]]\n- [[SQL - W7 Table Aliasing]]\n- [[SQL - W4 HR Database Overview]]\n- SQL - W4 Querying and Analysis for HR Database Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W4-Querying-and-Analysis-for-HR-Database-Assignment-Introduction":{"title":"SQL - W4 Querying and Analysis for HR Database Assignment Introduction","content":"\n# Querying and Analysis for HR Database Assignment Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=15d9c2bc-ef2e-4654-bf9f-b101005557e5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nThis assignment is divided into three sections, each aimed at developing a different aspect of your querying and analytical skills.\n\nIt is **ESSENTIAL** that you start project assignments early so you have time to get help!\n\n## Section 1: Understand the Data Structure\n\nIn this section, you will familiarize yourself with the structure of our sample HR database. Your tasks will involve writing SQL queries to explore the contents of each tables. You will:\n- Retrieve and observe data from single tables.\n- Use WHERE clauses to filter data based on specific conditions.\n- Apply ORDER BY to sort data and make your result sets more readable.\n\n## Section 2: Construct Relational Queries\n\nThis section is designed to make you think about how to retrieve meaningful information from multiple tables to answer a question. You will:\n- Use SELECT statements to gather data across related tables.\n- Employ logical and comparison operators to refine your search criteria.\n- Perform table joins to consolidate data from different sources.\n\n## Section 3: Perform Data Analysis\n\nThis final section of this assignment moves beyond the syntax of SQL and requires you to start thinking like a data analyst. You will:\n- Write queries to answer high-level questions.\n- Analyze query results to identify patterns.\n- Compare and contrast data to draw conclusions using your best judgement.\n\n# Lessons\n- SQL - W4 Querying and Analysis for HR Database Assignment Introduction\n- Next: [[SQL - W4 JOINing Multiple Tables]]\n- [[SQL - W7 Table Aliasing]]\n- [[SQL - W4 HR Database Overview]]\n- [[SQL - W4 Querying and Analysis for HR Database Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W5-Data-Types-and-Nullability":{"title":"SQL - W5 Data Types and Nullability","content":"# Data Types and Nullability\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=adeeea60-d527-4575-b612-b1160003d874\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn addition to showing basic structure of tables and their relationships, Entity Relationship Diagrams (ERDs) can also give us more insight into the columns. This can include data types for each column and whether a column can have null values. Let's explore these concepts with an example diagram.\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n\n## Data Types\n\nEach column in a table has a specific data type that dictates the kind of data it can hold to the right of its name. There are many different types but some of the most common are:\n\n- **Strings**: These are sequences of characters like the words in a sentence. In SQL they are referred to as `VARCHAR` (variable character). VARCHARs can be given a maximum number of characters that they can accept in parathesis. A `VARCHAR(255)` could hold 255 characters.\n- **Datetimes**: This type represents dates and times. The keyword is SQL is `DATETIME`.\n- **Integers**: These are whole numbers. The keyword in SQL is `INT`.\n- **Decimals**: These are numbers with a fractional part, such as currency or averages. Decimals are given two parameters, a size and a number of digits that can appear after the decimal point. `DECIMAL(4,2)` could hold 4 total digits with two of those digits appearing after the decimal point. So `DECIMAL(4,2)` could hold any value between -99.99 and 99.99.\n\nA full list of data types can be found here at W3Schools: [SQL Data Types for MySQL, SQL Server, and MS Access (w3schools.com)](https://www.w3schools.com/sql/sql_datatypes.asp)\n\n## Nullability\n\nIn addition to data types, ERDs can indicate whether a column can have a null value. A null value represents the absence of a value. Whether a field can be null or not depends on the business rules and data requirements:\n\n- **Nullable Fields**: These are optional and are marked with a question mark (`?`) after the data type in this diagram.\n- **Non-Nullable Fields**: These are required and have no question mark.\n\nTaking a look at the College Courses Diagram above, you'll notice that each column in the tables has a defined data type. Some fields, like `phone_number` in the `student` table, are marked as nullable (indicated by `varchar(11)?`), meaning it is not mandatory for a record to have this information.\n\n# Practice Questions\n\n5. Suppose we need to record the `office_location` for each `instructor` in the College Courses Diagram. What data type should this column be and should it be allowed to be null? Why?\n6. Imagine we want a `last_accessed` column  in the `enrollment` table that tracks when a student last signed into their class on Canvas. What data type should this column be and should it be allowed to be null? Why?\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL - W5 Representing Relationships]]\n- SQL - W5 Data Types and Nullability\n- **Next**: [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W5-Entity-Relationship-Diagram-Structure":{"title":"SQL - W5 Entity Relationship Diagram Structure","content":"# Entity Relationship Diagram Structure\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=e3fcaaa2-10b5-48b3-8e8e-b1160003d8d1\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams come in various formats, but they share common elements that help us understand the architecture of a database. As we progress through this course, we will explore different ways to represent ERDs. For now, let's focus on a simple example using an HR database.\n\n### HR Entity Relationship Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/\n\tImages/hr_db_erd.png\"\u003e\n\n*Source:* https://www.sqltutorial.org/sql-sample-database/\n\nThe data here should look familiar, it's the diagram we used for the HR database in the Querying and Analysis assignment.\n\n## Table Structure\n\nThe following properties are universal for all ERDs:\n- **Tables as Boxes**: Each table in the database is represented as a box.\n- **Rows and Columns**: Inside each box, the rows represent the columns of the table. When diagraming, we don't care about what specific rows of data (e.g. the actual information for each employees). Instead we care about the structure of the tables themselves and how they relate to each other.\n- **Primary Key Notation**: In this ERD, the primary key for each table is indicated with an asterisk (`*`). Not every diagram uses an `*`, but they will always denote the primary key in some way.\n\nTake the `countries` table for example. It is represented as a box in the HR Entity Relationship Diagram.\n- **Columns**: Inside the box, you will find `country_id`, `country_name`, and `region_id`. While they are represented as rows in the diagram, these are actually the columns of the table in the database.\n- **Primary Key**: The `country_id` is the primary key, as denoted by the `*` before it.\n\n# Practice Questions \n\n1. According to the HR Entity Relationship Diagram, what will the columns be for the `countries` table?\n2. Which column is the primary key for the `countries` table? How is the primary key shown in this diagram?\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- SQL - W5 Entity Relationship Diagram Structure\n- **Next**: [[SQL - W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W5-Entity-Relationship-Diagrams-Practice-Assignment":{"title":"SQL - W5 Entity Relationship Diagrams Practice Assignment","content":"# Entity Relationship Diagrams Practice Assignment\n\nIn addition to the practice problems from the lesson pages, write queries to do the following:\n\n9. (3pts) The Digital Movie Rentals Diagram below has at least 7 problems. Some of the problems are logical (things that don't make sense for data we're tracking) and some are structural (fundamental issues with the columns or relationships in the diagram). List each problem you find and briefly explain either why it's a issue or how you could fix it. Identify at least 3.\n10. (Optional Challenge - 0pts) See if you can identify all 7 of the problems in the diagram.\n\n### Digital Movie Rentals Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/movie_rentals_problems_erd.png\"\u003e\n\n# Submission Instructions\n\nPlease label each question with its number and write all answers in a single file using your text editor of choice. Copy your answers over to the submission area for the assignment on Canvas.\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL - W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- SQL - W5 Entity Relationship Diagrams Practice Assignment\n\n\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W5-Introduction-to-Entity-Relationship-Diagrams":{"title":"SQL - W5 Introduction to Entity Relationship Diagrams","content":"# Introduction to Entity Relationship Diagrams\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=2a747c43-2bbe-4729-92cb-b1160003e4a0\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams (ERDs) are a fundamental part of database design and architecture. They provide a visual representation of the data and how entities within a database relate to each other. Using ERDs can make it much easier to grasp the structure of a database without having to examine each table individually. In this section you will learn to read these diagrams, understand the relationships between tables, and apply this knowledge to create and query tables.\n# Lessons\n- SQL - W5 Introduction to Entity Relationship Diagrams\n- Next: [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL - W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W5-Querying-from-ERDs":{"title":"SQL - W5 Querying from ERDs","content":"# Querying from ERDs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1b0c0429-8f12-4f00-928d-b1160003d851\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice questions\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n7. Write a SQL query to retrieve the start date of all classes taught by the instructor with the `first_name` \"Tina\".\n8. Write a SQL query to retrieve the `annual_salary` of all instructors who teach classes that contain \"software\" anywhere in the `title`.\n\n*You won't be able to run these since I haven't given you a database for this diagram. Write the queries based on what's in the College Courses Diagram.*\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL - W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- SQL - W5 Querying from ERDs\n- Next: [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W5-Representing-Relationships":{"title":"SQL - W5 Representing Relationships","content":"# Representing Relationships\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b9a748d1-1060-4e42-85a0-b1160003d89b\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams (ERDs) not only show us the entities and their attributes but also how these entities interact with each other. The lines connecting the tables represent these relationships and are necessary to understand the database's structure. Let's break down how to read these relationships using the HR database ERD from our previous lessons.\n\n### HR Entity Relationship Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/hr_db_erd.png\"\u003e\n\n*Source:* https://www.sqltutorial.org/sql-sample-database/\n## Interpreting Relationships\n\nThe lines between the tables indicate how the entities relate to each other. You will notice different endings on these lines, such as a single straight line or a forked line. These symbols tell us about the type and direction of the relationship.\n### One-to-Many Relationship\n\nConsider the relationship between the `employees` and `jobs` tables in the HR Entity Relationship Diagram:\n- **Single Line**: This represents the \"one\" side of the relationship.\n- **Forked Line**: This symbolizes the \"many\" side of the relationship.\n\nThis is known as \"Crow's Foot Notation\" and is widely used in database diagraming.\n\nWhen we read the diagram:\n- **From Jobs to Employees**: Each job can have many employees. This is because the line ends with a forked symbol at the `employees` table.\n- **From Employees to Jobs**: Each employee has only one job, indicated by the single line ending at the `jobs` table.\n\nThis visualization helps us understand that each employee is associated with one job and each job title can be held by multiple employees.\n\n### Employees-Dependents Example\n\nNow, let's look at the relationship between `employees` and `dependents`. Based on the HR Entity Relationship Diagram, what is the relationship between these two table? Try to find out for yourself before continuing.\n\nTo understand the relationship, do the following:\n1. Look at the `employees` table. The line connecting it to `dependents` ends with a pronged line at the `dependents` table. This indicates that an employee can have many dependents.\n2. Now, examine the `dependents` table. The line connecting it to `employees` ends with a single straight line. This indicates that a dependent can only have one employee.\n\nThis relationships is also suggested by the structure of the table itself. We can see that `dependents` has a column for `employee_id`, suggesting that each dependent can be linked to a single employee.\n\n# Practice Questions\n\n3. What is the relationship between `regions` and `countries`? What steps did you take to determine this from the diagram?\n4. What is the relationship between `departments` and `employees`? What steps did you take to determine this from the diagram?\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- SQL W5 Representing Relationships\n- **Next**: [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]\n\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W7-JOIN-Tables-with-Many-to-Many-Relationships":{"title":"SQL - W7 JOIN Tables with Many-to-Many Relationships","content":"# JOIN Tables with Many-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c59e6ff3-602a-4508-9a6f-b0fb000ebc41\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Understanding JOINs in Many-to-Many Relationships\n\nGiven our bookstore database example from the previous lesson:\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|Luna Bellatrix|\n|2|Orion Stardust|\n|3|Celeste Moon |\n### Books Table:\n|BookID|Title|\n|---|---|\n|101|Whispers of the Galaxy|\n|102|Secrets of the Eclipse|\n|103|Shadows in the Cosmos|\n|104|Starlight Symphony|\n|105|Moonlit Myth|\n### BooksAuthors Joining Table:\n|BookID|AuthorID|\n|---|---|\n|101|1|\n|102|2|\n|103|2|\n|103|1|\n|104|3|\n|105|3|\n\nTo retrieve data that spans across these three tables, we use the SQL JOIN operation twice. Let's see how we can use the JOIN command to fetch the list of books along with their authors' names now that we're representing the data with a many-to-many relationship.\n\n### Understanding the Many to Many Relationship\n\n```sql\nSELECT Books.Title, Authors.AuthorName FROM Books\nJOIN BooksAuthors ON Books.BookID = BooksAuthors.BookID\nJOIN Authors ON BooksAuthors.AuthorID = Authors.AuthorID;\n```\n##### Expected Output:\n|Title|AuthorName|\n|---|---|\n|Whispers of the Galaxy|Luna Bellatrix|\n|Secrets of the Eclipse|Orion Stardust|\n|Shadows in the Cosmos|Orion Stardust|\n|Shadows in the Cosmos|Luna Bellatrix|\n|Starlight Symphony|Celeste Moon |\n|Moonlit Myth|Celeste Moon |\n#### 1. `SELECT Books.Title, Authors.AuthorName FROM Books`\n- This command retrieves the `Title` from the `Books` table and the `AuthorName` from the `Authors` table to display book titles alongside their authors' names.\n- It also sets `Books` as the table from which the query starts, establishing the context for the JOIN operations that follow.\n\n#### 2. `JOIN BooksAuthors ON Books.BookID = BooksAuthors.BookID`\n- The first JOIN operation. It joins the `Books` table with the `BooksAuthors` joining table, based on the `BookID`. This operation matches each book with its corresponding entries in the `BooksAuthors` table.\n\n#### 3. `JOIN Authors ON BooksAuthors.AuthorID = Authors.AuthorID`\n- The second JOIN operation. It joins the intermediate result (which includes the information from `Books` and `BooksAuthors`) with the `Authors` table. The join is based on the `AuthorID`, linking each entry in the BooksAuthors table with its respective author.\n\n# Practice Questions\n\n**Use the Magic Store Database ([[SQL - W3 Magic Store Database Overview]]) to complete the practice questions for week.**\n\n1. **Display Order Details with Product Names:** Write a query to display details of each order, including the order ID, the date it was placed, and the names of the products in the order.\n\n# Lessons\n- [[SQL - W7 Many-to-Many Relationships]]\n- SQL - W7 JOIN Tables with Many-to-Many Relationships\n- Next: [[SQL - W7 Table Aliasing]]\n- [[SQL - W7 Practice Assignment]]\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W7-Many-to-Many-Relationships":{"title":"SQL - W7 Many-to-Many Relationships","content":"# Many-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c5b32412-9c53-4db8-a649-b0fb000ed371\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Introduction to Many-to-Many Relationships\n\nA many-to-many relationship in databases occurs when multiple records in one table are associated with multiple records in another table. This kind of relationship often requires a third table, known as a junction, associative or joining table (depending on who you ask). For this class, I will use the term joining table. The joining table is used to break a many-to-many relationship down into two one-to-many relationships.\n\nLet's explore this concept with a new set of tables for books and authors that represent a many-to-many relationship.\n\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|Luna Bellatrix|\n|2|Orion Stardust|\n|3|Celeste Moon |\n### Books Table:\n|BookID|Title|\n|---|---|\n|101|Whispers of the Galaxy|\n|102|Secrets of the Eclipse|\n|103|Shadows in the Cosmos|\n|104|Starlight Symphony|\n|105|Moonlit Myth|\n### BooksAuthors Joining Table:\n|BookID|AuthorID|\n|---|---|\n|101|1|\n|102|2|\n|103|2|\n|103|1|\n|104|3|\n|105|3|\n\nIn the `BooksAuthors` table, both `BookID` and `AuthorID` are used together to create unique combinations, allowing for the representation of multiple authors per book and vice versa.\n\n### Understanding the many-to-many Relationship\n\n1. **First One-to-Many**: Each record in the `Authors` table can be linked to multiple records in the `BooksAuthors` table. For example, AuthorID 2 is linked to BookID 102 and 103. This is a one-to-many relationship from Authors to BooksAuthors.\n\n2. **Second One-to-Many**: Similarly, each record in the `Books` table can be linked to multiple records in the `BooksAuthors` table. For instance, BookID 103 is linked to AuthorID 1 and 2. This is another one-to-many relationship, but from Books to BooksAuthors.\n\n3. **The Many-to-Many**: These two one-to-many relationships combine to form a many-to-many relationship. An author can write multiple books, and a book can be written by multiple authors. The `BooksAuthors` table serves as a bridge, linking each book to one or more authors and each author to one or more books.\n\n# Lessons\n- SQL - W7 Many-to-Many Relationships\n- Next: [[SQL - W7 JOIN Tables with Many-to-Many Relationships]]\n- [[SQL - W7 Table Aliasing]]\n- [[SQL - W7 Practice Assignment]]\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W7-Practice-Assignment":{"title":"SQL - W7 Practice Assignment","content":"\n**Use the Magic Store Database ([[SQL - W3 Magic Store Database Overview]]) to complete the practice questions for week.**\n\nIn addition to the practice problems from the lesson pages, write queries to do the following:\n\n2. **Show Products Ordered by a Client:** Write a query to list all products ordered by the client with the ID of 2. Show product names for orders made by this client.\n   \n3. **List All Products with Their Suppliers, Sorted by Supplier Name and Product Price:** Display a list of all products along with their supplier names. Sort the list first by the supplier's name in ascending order, and then by the product's price in descending order.\n\n4. **Show Orders Placed After a Specific Date:** Write a query to display orders placed after '2022-01-01', including order ID, product names, and order date. Sort the results by product name.\n\n5. **List All Orders for 'Elixir of Immortality':** Display all orders that include the 'Elixir of Immortality', showing the order ID and the date the order was placed. Show the most recent orders first.\n\n### Submission Instructions\n\nPlease put all SQL queries for the practice questions into a single SQL file. Use comments to label each query with its respective question number. Submit this .sql file for your assignment on Canvas.\n\n# Lessons\n- [[SQL - W7 Many-to-Many Relationships]]\n- [[SQL - W7 JOIN Tables with Many-to-Many Relationships]]\n- [[SQL - W7 Table Aliasing]]\n- SQL - W7 Practice Assignment\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W7-Table-Aliasing":{"title":"SQL - W7 Table Aliasing","content":"\n# Table Aliasing\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=81bef28a-deff-41c0-9675-b0fb000ec500\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## What is Table Aliasing?\n\nTable aliasing involves giving a table in your SQL query a temporary name. This temporary name (aka alias) is often an abbreviation of the full table name. This is particularly useful in queries involving multiple tables because it simplifies the query syntax and makes it easier to read and write.\n\n### Example Using Authors and Books\n\nLet's revisit the Authors and Books tables and see how table aliasing can be applied.\n### Authors Table\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n\nHere's how we might perform a join to get the Titles and Authors using aliasing:\n\n```sql\nSELECT b.Title, a.AuthorName FROM Books b\nJOIN Authors a ON b.AuthorID = a.AuthorID;\n```\n### Explanation:\n\n1. **`Books b`**: Here, `Books` is aliased as `b`. This means that in the rest of the query, we can refer to the `Books` table as `b`.\n2. **`Authors a`**: Similarly, `Authors` is aliased as `a`. Any reference to the `Authors` table can now be made using `a`.\n3. **`b.Title, a.AuthorName`**: Instead of writing `Books.Title` and `Authors.AuthorName`, we use the aliases, making the query more concise.\n4. **`b.AuthorID = a.AuthorID`**: The JOIN condition uses the aliases as a stand in for the full table names as well.\n\n# Lessons\n- [[SQL - W7 Many-to-Many Relationships]]\n- [[SQL - W7 JOIN Tables with Many-to-Many Relationships]]\n- SQL - W7 Table Aliasing\n- Next: [[SQL - W7 Practice Assignment]]\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W8-Creating-Entity-Relationship-Diagrams-CREATE-Many-to-Many-Tables":{"title":"SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables","content":"\n# Practice Questions\n\n2. *(3pts)* Write the CREATE statements for the `pets`, `owners` and `pets_owners` tables in the diagram below. \n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/pets_owners_erd.png\"\u003e\n\n# Lessons\n- [[SQL Analytics M8 - Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- Creating Entity Relationship Diagrams - CREATE Many to Many Tables\n- **Next**: [[SQL Analytics M7 - Composite Primary Keys]]\n- [[SQL Analytics M7 - Creating Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W8-Creating-Entity-Relationship-Diagrams-CREATE-One-to-Many-Tables":{"title":"SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables","content":"\n\n# Practice Questions\n\n1. *(2pts)* Write the CREATE statements for the `users` and `posts` tables in the diagram below. \n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/users_posts_erd.png\"\u003e\n\n# Lessons\n- [[SQL Analytics M8 - Entity Relationship Diagrams]]\n- Creating Entity Relationship Diagrams - CREATE One to Many Tables\n- **Next**: [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- [[SQL Analytics M7 - Composite Primary Keys]]\n- [[SQL Analytics M7 - Creating Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-W8-Creating-Entity-Relationship-Diagrams-Practice-Assignment":{"title":"SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment","content":"# Creating Entity Relationship Diagrams - Practice Assignment\n\n\n# Lessons\n- [[SQL Analytics M8 - Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- [[SQL Analytics M7 - Composite Primary Keys]]\n- [[SQL Analytics M7 - Creating Entity Relationship Diagrams]]\n- Creating Entity Relationship Diagrams - Practice Assignment","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-ZCUT-Creating-Tables-in-ERDs":{"title":"SQL - ZCUT Creating Tables in ERDs","content":"# Creating Tables in ERDs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=29da4567-e32d-4981-a177-b1160003ee40\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice questions\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n2. Write CREATE statements for the `student` and `instructor` tables. \n3. INSERT two rows of data into each table.\n\t*Dates are put in quotes like strings/varchars. They are formatted with the Year-Month-Day. For example February 26th, 2024 would be `'2024-02-26'`.*\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/Archive/SQL-WinterSpring24/SQL-ZCUT-W10-Advanced-Querying-Topics-JOIN-Refresher":{"title":"SQL - ZCUT W10 Advanced Querying Topics JOIN Refresher","content":"# Advanced Querying Topics Part 1 - JOIN Refresher\n\nNeed a refresher on JOINs? See our lessons on [[SQL - W3 Table JOINs - One-to-Many Relationships]].\n# Practice Questions\n\n1. Write a query to retrieve all orders placed in August 2022. Include the ID of the order, the client's last name, and the date of the order. Expected result:\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/Images/AQR2.png\"\u003e\n\n2. Write a query to display the product name, product price and supplier name for each product that cost less than 100. Expected result:\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/Images/AQR1.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- Advanced Querying Topics Part 1 - JOIN Refresher\n- Next: [[SQL - Advanced Querying Topics Part 1 - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying Topics - Practice Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/MISC-AI-Learning-Community-Exploration-Assignment":{"title":"MISC -  AI Learning Community Exploration Assignment","content":"# AI Learning Community Exploration Assignment\n\n## Introduction: Learning Communities \u0026 Mini-Projects\n\nIn this course, you will work in learning communities focused on different areas of Azure AI services. These communities will help you:\n\n- Explore AI tools available in Azure.\n- Learn from peers working on similar AI applications.\n- Develop a small project using out-of-the-box AI services.\n- Present your work, explain how the service functions, and demo your application.\n\n### How It Works\n\n1. Choose a broad AI application area that interests you (e.g., Computer Vision, NLP, Generative AI, etc.).\n2. In class, find others interested in the same area and form small groups (ideally 3 people).\n3. As a group, explore AI services within your area and identify a service you want to use.\n4. Build a mini-project using that service and integrate it into an application.\n5. Present your project, discuss how the service works, and take questions.\n\nIn this first assignment you will explore potential applications of AI that interest you. By the end of this assignment, you will:  \n\n✅ Have an Azure account set up.  \n✅ Have chosen an AI application area to explore further.  \n✅ Be ready to form a team and start exploring specific services within that area.\n\n---\n\n## Step 1: Set Up Azure for Students\n\n- Sign up for Azure for Students (instructions will be provided).\n- Explore the Azure AI Foundry to see available services.\n- Review the AZ-900 learning path to understand key AI applications in Azure.\n- Take notes on the AI areas that interest you.\n\n---\n\n## Step 2: Explore AI Application Areas\n\nChoose an AI application area that interests you. Here are the available options:\n\n### Computer Vision\n\n- AI for image recognition, object detection, and document processing.\n- Examples: OCR (extracting text from images), face recognition, object classification.\n\n### Natural Language Processing (NLP)\n\n- AI for understanding and processing text or speech.\n- Examples: Sentiment analysis, chatbots, automatic translation, speech-to-text.\n\n### Document Intelligence \u0026 AI Search\n\n- AI for knowledge mining and structured document processing.\n- Examples: Automating data extraction from documents, intelligent search tools.\n\n### Generative AI\n\n- AI that creates new content, such as text, images, or code.\n- Examples: Using Azure OpenAI’s GPT models for text generation, AI-generated images.\n\n---\n\n## Step 3: Discussion Post\n\nWrite a short discussion post (around 150-250 words) that includes:\n\n1. The AI application area you are interested in (Computer Vision, NLP, Document Intelligence, or Generative AI).\n2. Why it interests you – What excites you about this area?\n3. Ideas for what you might build – What kind of project could you imagine creating with AI in this area? It doesn’t have to be final—just a few ideas.\n\nPost your response in the discussion forum before class.\n\n---\n\n## Step 4: In-Class Group Formation\n\n- During class, you will find your learning community based on shared AI interests.\n- Within the community, form teams of 2-3 around a specific service.\n- Begin discussing which AI service to explore further and potential project ideas.\n\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/MISC-AI-Talk-Resources":{"title":"MISC - AI Talk Resources","content":"# Links from Presentation\n\nFeel Free to Connect with Me!\n- [Keller Flint | LinkedIn](https://www.linkedin.com/in/kellerflint/)\n\n## Defining AI\n- [A Neural Network Playground](https://playground.tensorflow.org/#activation=tanh\u0026batchSize=10\u0026dataset=circle\u0026regDataset=reg-plane\u0026learningRate=0.03\u0026regularizationRate=0\u0026noise=0\u0026networkShape=4,2\u0026seed=0.64954\u0026showTestData=false\u0026discretize=false\u0026percTrainData=50\u0026x=true\u0026y=true\u0026xTimesY=false\u0026xSquared=false\u0026ySquared=false\u0026cosX=false\u0026sinX=false\u0026cosY=false\u0026sinY=false\u0026collectStats=false\u0026problem=classification\u0026initZero=false\u0026hideText=false\u0026activation_hide=true\u0026problem_hide=true\u0026noise_hide=true\u0026batchSize_hide=true\u0026regularization_hide=true\u0026learningRate_hide=true\u0026regularizationRate_hide=true\u0026percTrainData_hide=true\u0026showTestData_hide=true\u0026discretize_hide=true)\n\n## How Machines Learn\n- [Supervised Learning Demo - Kahoot!](https://create.kahoot.it/details/5a5c54ad-497d-4080-90d6-5bfdead599b7)\n- [Unsupervised Demo - Google Drawings](https://docs.google.com/drawings/d/14D8TmoGzvtaxS23OMuPtZnlTJTF26bt-Z4e3uk0v3F8/edit)\n- [Reinforcement Learning Game](https://kellerflint.github.io/ml-visual-demos/)\n\n## Impact / Opportunities in AI\n- [Andrew Ng: Opportunities in AI - 2023](https://www.youtube.com/watch?v=5p248yoa3oE\u0026ab_channel=StanfordOnline)\n\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/MISC-Tips-for-Completing-Entry-Tickets":{"title":"MISC - Tips for Completing Entry Tickets","content":"# Tips for Completing Entry Tickets\n\n**Be Concise:** Provide brief answers that get straight to the point. Provide the information necessary to show understanding.\n\n**Be Specific:** Use precise language and relevant examples. Avoid vague meaningless statements that are not necessary to answer the question.\n\n**Be Clear:** Explain your ideas as if you’re speaking to someone who is also familiar with the topic. Don't over explain, state reasoning clearly.\n\n**Manage Your Time:** Don't spend more than 2-3 minutes on each question. You can come back if you have extra time.\n\n**Remember:** If you understand the material, conveying your thoughts shouldn’t take long. Show your comprehension efficiently!\n\n### Example\n\n**Question:** \n\nBriefly describe the difference between Decision Trees and Random Forests. Why might you choose Random Forests over Decision Trees?\n\n**Response:** \n\nDecision Trees are single tree-based models whereas Random Forests consist of multiple Decision Trees trained on different data subsets. By combining multiple trees, Random Forests increase accuracy by reducing the risk of overfitting on the training data.\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Final-Practice-Questions":{"title":"SQL Analytics Final - Practice Questions","content":"# SQL Analytics Final - Practice Questions\n\nWrite a query to show the order ID, order date of orders and the first and last name of the employee who handled the order. Only show orders placed in September, October, November or December. Show recent orders first.\n- *Remember that you can use MONTH(ColumnName) to get the month.*\n\nWrite a query to display the order ID, customer name, and employee last name for all customers whose names start with 'A'. Sort the results by order ID in descending order.\n\nWrite a query to list all products with a price between `$20` and `$50`, and that belong to category ID 3 or 5. Display the product name, price, and category ID. Sort the results by price in ascending order.\n\nWrite a query to display the supplier name and the number of products they supply. Only include suppliers who supply more than 3 products. Order the results by the number of products in descending order.\n\nWrite a query to show the category name and the total quantity of products ordered for each category. Only include categories where the total quantity ordered is more than 1000. Sort the results by total quantity in descending order.\n\n\nWrite a query to show the top 5 customers by total order value. Display the customer name and their total order value. Only include customers who have placed orders totaling more than $10,000. Order the results by total order value in descending order.\n- *This last one is more challenging than what may be asked on the final but good for additional practice.*\n\nIf you want more you're welcome to come by office hours for more practice. ChatGPT (or other AI tools) can also be a good resource for generating additional practice questions!\n### See Solutions: [[SQL Analytics Final - Practice Solutions]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Final-Practice-Solutions":{"title":"SQL Analytics Final - Practice Solutions","content":"### See Questions: [[SQL Analytics Final - Practice Questions]]\n# Final Practice Solutions\n\nWrite a query to show the order ID, order date of orders and the first and last name of the employee who handled the order. Only show orders placed in September, October, November or December. Show recent orders first.\n\n*Remember that you can use MONTH(ColumnName) to get the month.*\n\n```sql\nSELECT OrderID, OrderDate, FirstName, LastName FROM orders\nJOIN employees ON orders.EmployeeID = employees.EmployeeID\nWHERE MONTH(OrderDate) \u003e= 9\nORDER BY LastName;\n```\n\nWrite a query to display the order ID, customer name, and employee last name for all customers whose names start with 'A'. Sort the results by order ID in descending order.\n\n```sql\nSELECT orders.OrderID, customers.CustomerName, employees.LastName FROM orders\nJOIN customers ON orders.CustomerID = customers.CustomerID\nJOIN employees ON orders.EmployeeID = employees.EmployeeID\nWHERE customers.CustomerName LIKE 'A%'\nORDER BY orders.OrderID DESC;\n```\n\nWrite a query to list all products with a price between `$20` and `$50`, and that belong to category ID 3 or 5. Display the product name, price, and category ID. Sort the results by price in ascending order.\n\n```sql\nSELECT ProductName, Price, CategoryID FROM products\nWHERE Price BETWEEN 20 AND 50 AND CategoryID IN (3, 5)\nORDER BY Price ASC;\n```\n\nWrite a query to display the supplier name and the number of products they supply. Only include suppliers who supply more than 3 products. Order the results by the number of products in descending order.\n\n```sql\nSELECT \n\tsuppliers.SupplierName, \n\tCOUNT(products.ProductID) AS NumberOfProducts \nFROM suppliers\nJOIN products ON suppliers.SupplierID = products.SupplierID\nGROUP BY suppliers.SupplierID\nHAVING COUNT(products.ProductID) \u003e 3\nORDER BY COUNT(products.ProductID) DESC;\n```\n\nWrite a query to show the category name and the total quantity of products ordered for each category. Only include categories where the total quantity ordered is more than 1000. Sort the results by total quantity in descending order.\n\n```sql\nSELECT \n\tcategories.CategoryName, \n\tSUM(orderdetails.Quantity) AS TotalQuantity \nFROM categories\nJOIN products ON categories.CategoryID = products.CategoryID\nJOIN orderdetails ON products.ProductID = orderdetails.ProductID\nGROUP BY categories.CategoryID\nHAVING SUM(orderdetails.Quantity) \u003e 1000\nORDER BY SUM(orderdetails.Quantity) DESC;\n```\n\n*This last one is more challenging than what will be asked on the final but good for additional practice!*\n\nWrite a query to show the top 5 customers by total order value. Display the customer name and their total order value. Only include customers who have placed orders totaling more than $10,000. Order the results by total order value in descending order.\n\n```sql\nSELECT \n\tcustomers.CustomerName, \n\tSUM(orderdetails.Quantity * products.Price) AS TotalOrderValue\nFROM customers\nJOIN orders ON customers.CustomerID = orders.CustomerID\nJOIN orderdetails ON orders.OrderID = orderdetails.OrderID\nJOIN products ON orderdetails.ProductID = products.ProductID\nGROUP BY customers.CustomerID\nHAVING SUM(orderdetails.Quantity * products.Price) \u003e 10000\nORDER BY SUM(orderdetails.Quantity * products.Price) DESC\nLIMIT 5;\n```\n\n### See Questions: [[SQL Analytics Final - Practice Questions]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M1-Basics-of-Data":{"title":"SQL Analytics M1 - Basics of Data","content":"\n# Basics of Data\n\n\n\u003ciframe src=\"https://share.descript.com/embed/5p2v8ty5dXy\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M1 - Introduction to Data Analytics and Relational Data]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M1-Databases-and-Relational-Data":{"title":"SQL Analytics M1 - Databases and Relational Data","content":"\n# Databases and Relational Data\n\n\u003ciframe src=\"https://share.descript.com/embed/w0T2ysyC6av\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M1 - Introduction to Data Analytics and Relational Data]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M1-Introduction-to-Data-Analytics-and-Relational-Data":{"title":"SQL Analytics M1 - Introduction to Data Analytics and Relational Data","content":"\n# Lessons and Practice - Introduction to Data Analytics and Relational Data\n\n### [[SQL Analytics M1 - Learning to Learn|Learning to Learn]] (25 min)\n\n1. Explain the concept of \"distributed practice\" in your own words and why it's more effective than cramming.\n2. The goal of your learning should be to build a \"mental model\" rather than only memorizing facts. How might you approach your studies differently to focus on building this kind of understanding?\n\n### [[SQL Analytics M1 - SQL for Data Analytics|SQL for Data Analytics]] (18 min)\n\n3. Describe the business model of Northwind Traders in your own words. What are the main entities involved?\n4. Why is it important to refine broad business questions into more specific, data-driven questions?\n### [[SQL Analytics M1 - Basics of Data|Basics of Data]] (14 min)\n\n5. What does SQL stand for, and why is this name significant in relation to the type of data it works with?\n6. How would you explain the concept of a table to someone who has never seen one before?\n### [[SQL Analytics M1 - Databases and Relational Data|Databases and Relational Data]] (28 min)\n\nA local veterinary clinic wants to digitize their records and efficiently store information about pet owners and their pets. They currently have all their data in a single table, as shown below:\n\n| Owner First Name | Owner Last Name | Owner Age | Owner Address   | Pet Name | Pet Type | Pet Age |\n| ---------------- | --------------- | --------- | --------------- | -------- | -------- | ------- |\n| Olivia           | Smith           | 23        | 1121 1st ST E   | Rover    | Dog      | 3       |\n| Greg             | Steel           | 31        | 4939 88th Ave N | Luna     | Cat      | 6       |\n| Olivia           | Smith           | 23        | 1121 1st ST E   | Joe      | Fish     | 2       |\n| Olivia           | Smith           | 23        | 1121 1st ST E   | Maxie    | Dog      | 11      |\n| Greg             | Steel           | 31        | 4939 88th Ave N | Rodger   | Dog      | 5       |\n| Greg             | Steel           | 31        | 4939 88th Ave N | Doodles  | Fish     | 3       |\n| Greg             | Steel           | 31        | 4939 88th Ave N | Ranger   | Cat      | 4       |\n\n7. Explain why the current structure is inefficient. Why is this inefficiency a concern for a database?\n8. Propose a new structure using multiple relational tables without losing the ability to look up which pets belong to which owners. Be specific about what columns belong in each table and how this improves efficiency. Identify the primary key and foreign key columns in your new structure. *(It may help to use a tool like excel, google sheets, or paper to sketch out your new table design before trying to describe it).*\n\nSubmit your answers for the M1 lessons and practice assignment on canvas.","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M1-Learning-to-Learn":{"title":"SQL Analytics M1 - Learning to Learn","content":"\n# Learning to Learn\n\n\u003ciframe src=\"https://share.descript.com/embed/6cGMZWfZC6y\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M1 - Introduction to Data Analytics and Relational Data]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M1-SQL-for-Data-Analytics":{"title":"SQL Analytics M1 - SQL for Data Analytics","content":"\n# SQL for Data Analytics\n\n\u003ciframe src=\"https://share.descript.com/embed/gQ9EPFlJECB\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M1 - Introduction to Data Analytics and Relational Data]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M10-Subqueries":{"title":"SQL Analytics M10 - Subqueries","content":"# M10 - Subqueries\n\n\u003ciframe src=\"https://share.descript.com/embed/wQrqBkUOsnP\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Practice Questions\n\n*Use a subquery in each of these.*\n\n1. Find the products with a price lower than the average price of all products.\n\n2. Find the names of customers who have placed at least one order.\n\n3. Find the names of products that belong to the 'Beverages' category (do NOT use any JOINs).\n\t- *HINT: Remember you can use WHEREs in you subqueries!*\n\n4. List the names of products supplied by a supplier named 'Exotic Liquids' (do NOT use any JOINs).\n\n5. Find the name, city and address of customers who live in the same city as any of the suppliers.\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M2-Basic-Querying":{"title":"SQL Analytics M2 - Basic Querying","content":"\n# Lessons and Practice - Basic Querying \n\n### [[SQL Analytics M2 - Installing MySQL Workbench and MariaDB|Installing MySQL Workbench and MariaDB]] (17 min)\n\nAfter successfully setting up MySQL Workbench and MariaDB, take a screenshot of your working editor with your name in an open file (see canvas assignment for example) and submit it to the \"M2 Practice - Editor Screenshot\" assignment in canvas.\n\n### [[SQL Analytics M2 - MySQL Workbench Basics|MySQL Workbench Basics]] (8 min)\n\n### [[SQL Analytics M2 - How to Complete SQL Assignments|How to Complete SQL Assignments]] (3 min)\n\n### [[SQL Analytics - Northwind Database|Northwind Database]] (2 min)\n\n### [[SQL Analytics M2 - SELECT Statements|SELECT Statements]] (8 min)\n\n1. Create a query to display the first name and last name of all employees from the `employees` table.\n2. Write a query to display all information in the `shippers` table.\n3. The sales team needs a list of all our products with only the details most relevant to making the sale. Write a query to accomplish this. Include a comment above the query that briefly explains why you believe the columns you chose were most relevant.\n\n### [[SQL Analytics M2 - Math on Columns|Math on Columns]] (4 min)\n\n4. Write a query to display the product name, price, and price with a 30% discount from the `products` table.\n5. Northwind is analyzing their pricing structure and needs to see how each of our products would be priced if we applied a flat $2 increase and then a 12% markdown (decrease). Write a query to accomplish this.\n\n### [[SQL Analytics M2 - Column Aliasing|Column Aliasing]] (3 min)\n\n6. Re-write your query for question #5 using clear column names. Include the following additional columns as well:\n\t- `Increase Amount` with a fixed value of \"$2\"\n\t- `Markdown Amount` with a fixed value of \"12%\"\n\n### [[SQL Analytics M2 - WHERE Clause|WHERE Clause]] (30 min)\n\n7. Write a query to retrieve all products from the `products` table where the price is between 15 and 25.\n8. Create a query to list all products from the `products` table that have 'chef' in their product name.\n9. Write a SELECT statement to display all customers from the `customers` table that are located in either Germany, France, or Spain.\n10. The marketing team is planning a promotion and needs to see relevant information on Northwind's affordable seafood and dairy products. Write a query to accomplish this.\n### [[SQL Analytics M2 - ORDER BY, LIMIT, and Query Structure|ORDER BY, LIMIT, and Query Structure]] (11 min)\n\n11. Write a query to retrieve all employee names from the `employee` table, ordered from youngest to oldest.\n12. Write a query to show all customers from the `customers` table, sorted first by their country in reverse alphabetical order and the customer's name in alphabetical order.\n13. Management is conducting a performance review of employees and wants to see a comprehensive breakdown of all orders. They need to see which employees handled each order *(you can use the `EmployeeID` in the `orders` table, it shows who facilitated the order)* and the corresponding order dates. They've emphasized the importance of seeing each employee's sales history chronologically, with their most recent sales appearing first. Write a query that provides this information in a format that allows management to easily review each employee's performance over time.\n\nSubmit your answers for the \"M2 Lessons and Practice - Basic Querying\" assignment on canvas.\n\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-M2-Column-Aliasing":{"title":"SQL Analytics M2 - Column Aliasing","content":"# Column Aliasing\n\n\u003ciframe src=\"https://share.descript.com/embed/lVSwZVD1F7h\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-How-to-Complete-SQL-Assignments":{"title":"SQL Analytics M2 - How to Complete SQL Assignments","content":"\n# How to Complete SQL Assignments\n\n\u003ciframe src=\"https://share.descript.com/embed/DYZTrmexbNx\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-Installing-MySQL-Workbench-and-MariaDB":{"title":"SQL Analytics M2 - Installing MySQL Workbench and MariaDB","content":"# Installing MySQL Workbench and MariaDB\n\n\u003ciframe src=\"https://share.descript.com/embed/MMUOjJ2Ggjt\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Links\n- [MySQL :: Download MySQL Workbench](https://dev.mysql.com/downloads/workbench/)\n\t- *If you have an newer mac (M1 Chip) use macOS (ARM, 64-bit)\n- [Download MariaDB Server - MariaDB.org](https://mariadb.org/download/?t=mariadb\u0026p=mariadb\u0026r=11.4.2\u0026os=windows\u0026cpu=x86_64\u0026pkg=msi\u0026mirror=xtom_fre)\n\n### Mac Only Links\n- [Homebrew — The Missing Package Manager for macOS (or Linux)](https://brew.sh/)\n- [Installing MariaDB Server on macOS Using Homebrew - MariaDB Knowledge Base](https://mariadb.com/kb/en/installing-mariadb-on-macos-using-homebrew/)\n- *I'm aware that this process on mac is a bit tricky. If you're having trouble don't burn too much time on it, feel free to reach out to me and I can get you set up with with hosting on PHPMyAdmin.*\n\nCommands to set password on MariaDB (Mac only):\n```sql\nALTER USER 'root'@'localhost' IDENTIFIED BY 'your_new_password';\nFLUSH PRIVILEGES;\n```\n\n### Windows Only Links\n[Latest supported Visual C++ Redistributable downloads | Microsoft Learn](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170)\n\n*This may be necessary if it is not already installed on your system. Click download and check the x64 box. Run the installation. You may also need to restart your machine afterwards.*\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/VS2015-2022-Redistrib.png\"\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-Math-on-Columns":{"title":"SQL Analytics M2 - Math on Columns","content":"# Math on Columns\n\n\u003ciframe src=\"https://share.descript.com/embed/MEMrVrGpoFz\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-MySQL-Workbench-Basics":{"title":"SQL Analytics M2 - MySQL Workbench Basics","content":"# MySQL Workbench Basics\n\n\u003ciframe src=\"https://share.descript.com/embed/ppZlQNsJEFB\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]\n","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-ORDER-BY-LIMIT-and-Query-Structure":{"title":"SQL Analytics M2 - ORDER BY, LIMIT, and Query Structure","content":"# ORDERY BY, LIMIT, and Query Structure\n\n\u003ciframe src=\"https://share.descript.com/embed/UpClCkAvnOA\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-SELECT-Statements":{"title":"SQL Analytics M2 - SELECT Statements","content":"# SELECT Statements\n\n\u003ciframe src=\"https://share.descript.com/embed/v2z82w2qXv9\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M2-WHERE-Clause":{"title":"SQL Analytics M2 - WHERE Clause","content":"# WHERE Clause\n\n\u003ciframe src=\"https://share.descript.com/embed/WMYTjkZh2KC\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M2 - Basic Querying]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M3-Aggregate-Functions":{"title":"SQL Analytics M3 - Aggregate Functions","content":"\n# Aggregate Functions\n\n\u003ciframe src=\"https://share.descript.com/embed/rjtgotE2xrB\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Links\n- CustomerScript -\u003e [Course-Resources/content/SQL-Files/CustomerScript.sql at hugo · kellerflint/Course-Resources (github.com)](https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/CustomerScript.sql)\n\n### Back: [[SQL Analytics M3 - Grouping and Aggregation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M3-GROUP-BY":{"title":"SQL Analytics M3 - GROUP BY","content":"\n# GROUP BY\n\n\u003ciframe src=\"https://share.descript.com/embed/z9urygCYNL9\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M3 - Grouping and Aggregation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M3-Grouping-and-Aggregation":{"title":"SQL Analytics M3 - Grouping and Aggregation","content":"# Lessons and Practice - Grouping and Aggregation\n\n\n*Use the Northwind database for all questions.*\n### [[SQL Analytics M3 - NULL Values|Null Values]] (4 min)\n\n### [[SQL Analytics M3 - Aggregate Functions|Aggregate Functions]] (10 min)\n\n1. Write a single query to display the minimum, average and maximum price of products and the total number of products.\n2. Write a single query to display the total number of customers that are in North America (Canada, Mexico or the USA).\n3. Marketing wants to know how many products we have in the produce category (Category ID 7). Write a query to display this information\n### [[SQL Analytics M3 - GROUP BY|GROUPY BY]] (13 min)\n\n4. Write a single query to display the number of products in each category.\n5. Write a single query to display how many orders each employee has processed.\n6. The Supplier Procurement team would like to better understand how the pricing of our products differ between Northwind's many suppliers. Write a single query to display the minimum, average price and maximum prices of products from each supplier and the total number of products they supply.\n\n### [[SQL Analytics M3 - HAVING|HAVING]] (5 min)\n\n7. Write a single query to display the average price of the products in each category. Show only categories that have an average price of at least $25. Order the results from highest to lowest average price.\n8. Write a single query to display the total quantity of each product that has been ordered (using the `orderdetails` table). Show only products that have been ordered at least 100 times.\n### [[SQL Analytics M3 - Understanding Query Order|Understanding Query Order]] (11 min)\n\n9. Answer the following in a comment in your SQL script. A junior data analysist at Northwind comes to you and asks why one of their queries works while the other doesn't. Identify which query will succeed and which will fail. Then explain in simple and clear terms (that a new data analyst could understand) your reasoning for this.\n\n```sql\n/* Query #1 */\nSELECT\n    Category,\n    SUM(Quantity) AS TotalQuantity\nFROM Sales\nGROUP BY Category\nWHERE TotalQuantity \u003e 10;\n```\n\n```sql\n/* Query #2 */\nSELECT\n    Category,\n    SUM(Quantity) AS TotalQuantity\nFROM Sales\nGROUP BY Category\nORDER BY TotalQuantity DESC;\n```\n\nSubmit your answers for the \"M3 Practice\" assignment on canvas.","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M3-HAVING":{"title":"SQL Analytics M3 - HAVING","content":"\n# HAVING\n\n\u003ciframe src=\"https://share.descript.com/embed/2OCboR04mRg\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M3 - Grouping and Aggregation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M3-NULL-Values":{"title":"SQL Analytics M3 - NULL Values","content":"\n# NULL Values\n\n\u003ciframe src=\"https://share.descript.com/embed/jpE7vvnezA2\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Links\n- CustomerScript -\u003e [Course-Resources/content/SQL-Files/CustomerScript.sql at hugo · kellerflint/Course-Resources (github.com)](https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/CustomerScript.sql)\n\n### Back: [[SQL Analytics M3 - Grouping and Aggregation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M3-Understanding-Query-Order":{"title":"SQL Analytics M3 - Understanding Query Order","content":"\n# Understanding Query Order\n\n\u003ciframe src=\"https://share.descript.com/embed/r3XfwW8rHwq\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Back: [[SQL Analytics M3 - Grouping and Aggregation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M4-SQL-for-Data-Analytics":{"title":"SQL Analytics M4 - SQL for Data Analytics","content":"# M4 SQL for Data Analytics\n\n## Lessons and Example Scenario\n\n\u003ciframe src=\"https://share.descript.com/embed/Ood9LD2dOMG\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\nExample Dataset (if interested): https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/NetflixShowsScript.sql\n\n---\n# M4 Peer Review Assignment - Video Game Market Analysis Assignment\n\n\u003ciframe src=\"https://share.descript.com/embed/oJrKOhRRAU0\" width=\"720\" height=\"405\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Background\nYou are a data analyst working for a video game studio. The studio is planning their next game and wants to use relevant market data to inform their decision. They've approached you with a request to analyze recent video game sales data.\n\n## The Studio's Request\n\u003eWe're trying to decide what our next big game should be. We'd like to look at video game sales data to understand which genres are most relevant and which games in those genres are the most popular. We also need to know what platform we should develop for. Analyze this data and present your findings at our next meeting.\n\n## Your Task\nYou will use SQL to analyze a database of video game sales. Your goal is to provide insights that will help the studio make informed decisions about their next game. This task involves dealing with a large, somewhat ambiguous request. You'll need to break it down into manageable parts and make some assumptions along the way.\n\n## Data\nYou have access to a table named `games` in a SQL database. This table contains information about video games, including their sales figures. You can view the structure of this table using the query `SELECT * FROM games;`.\n\n## Assignment Instructions\n\n### Setup\nCreate a new database and run the following script:\nhttps://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/VideoGameScript.sql\n\n**IMPORTANT**: Use ONLY SQL commands covered in our class so far! (`SELECT` `AS` `FROM` `WHERE` `GROUP BY` `HAVING` `ORDER BY` `LIMIT`). This ensures peer reviewers can understand your work and tests your ability to solve problems with the tools you’ve learned so far.\n\n### 1. Data Exploration\nBegin by examining the data available to you. First, make sure you are using the correct database.\n\n```sql\nUSE games;\n```\n\nUse the following query to retrieve all records:\n\n```sql\nSELECT * FROM games;\n```\n\nTake note of the columns available and the type of information they contain. This will help you understand what data you have to work with.\n\n### 2. Question Breakdown\nConsider how you can use the available data to answer the studio's request. Break down the main question into specific sub-questions that you can answer with SQL queries. List these sub-questions.\n\n### 3. Identify Ambiguities and Assumptions\nIdentify any ambiguities in these questions. What assumptions do you need to make to proceed with your analysis? For example, how do you define \"relevant\" sales data? List your assumptions and explain your reasoning for any choices you make.\n\n### 4. Write and Execute Queries\nWrite SQL queries to answer the sub-questions you identified in step 2. Do not try to write a single giant query that does everything. Use multiple queries to answer different parts of the request and that clearly show the results. Your queries should:\n- Be clear and readable\n- Include comments explaining your thought process\n- Logically follow from one to the next\n- Support your conclusions\n\nRemember, you should write these queries so that another data analyst could follow your process and reasoning.\n\n### 5. Analysis and Presentation\nBased on the results of your queries, what conclusions can you draw? \n- In a comment, write a few sentences giving your specific findings and recommendations.\n- Write a few clear, concise queries that show only the most essential data and results to support your conclusions. These should be queries you could present to business stakeholders to support your conclusions.\n\nNote: There may not be one perfect answer. The results you get will depend on the assumptions you made and how you approached the request.\n\n### 6. Limitations of the Analysis\nReflect on the limitations of your data and analysis. Are there any ways in which this data might not show the full picture? What additional information might be helpful for making a more informed decision?\n\n## Submission\nSubmit a single SQL file to Canvas containing your code and comments for each section. This should include:\n1. Your data exploration query\n2. Your list of sub-questions\n3. Your list of assumptions\n4. Your analysis queries with comments\n5. A brief written section discussing your conclusions and presentation queries for business leadership\n6. A brief written section on the limitations of your data and analysis\n\nRemember to use ONLY the SQL techniques we've covered in class such as SELECT statements using AS, WHERE, GROUP BY, ORDER BY, LIMIT, and calculations or aggregate functions.\n\n# Peer Review Component\n\nAfter the due date, you will be assigned to review the work of two peers. Reviews should provide professional, clear and constructive feedback in a 2-3 paragraph response. Peer reviewers are expected to clearly identify at least one area they thought could be improved on or an additional consideration the submission could have considered.\n\nYour feedback will be graded separately for it's clarity and relevance. I'll provide more information about peer reviews next week.","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M5-Table-JOINs":{"title":"SQL Analytics M5 - Table JOINs","content":"\n# Table JOINs\n\n*Use the \u003ca href=\"https://kellerflint.github.io/Course-Resources/SQL-Analytics-Northwind-Database\" target=\"_blank\"\u003eNorthwind Database\u003c/a\u003e for all questions.*\n\n## Table Relationships\n\n\u003ciframe src=\"https://share.descript.com/embed/209AK4zaZ1m\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\n## Table JOINs\n\n\u003ciframe src=\"https://share.descript.com/embed/BdVq5nylIq8\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n1. Write a query to return the dates of all orders along with the countries and cities of customers who placed the order.\n2. Write a query to return product names, prices, and units and the supplier names and cities of the suppliers who provide each product.\n\n## Multiple Table JOINs\n\n\u003ciframe src=\"https://share.descript.com/embed/DL3rWgxCMmy\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n3. Write a query to return the country, city, postal code and address each order was shipped to. Include the order date and the name and phone number of the shipper as well as the first and last name of the employee who facilitated the order.\n4. Write a query to return the name of every product that costs less than $50. Include the name of the product, it's unit and it's price. Include the name of the supplier and the name of the category the product is in. Sort the results from lowest to highest price.\n5. The sales team would like to know what products are most often ordered by customers outside of north America. Write a query to accomplish this. Explain why you believe your query is effective in answering this question in a comment after the query.\n\nSubmit your answers for the \"M5 Lessons and Practice - Table JOINs\" assignment on canvas.\n","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M6-Data-Types-and-Nullability":{"title":"SQL Analytics M6 - Data Types and Nullability","content":"# Data Types and Nullability\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=adeeea60-d527-4575-b612-b1160003d874\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn addition to showing basic structure of tables and their relationships, Entity Relationship Diagrams (ERDs) can also give us more insight into the columns. This can include data types for each column and whether a column can have null values. Let's explore these concepts with an example diagram.\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n\n## Data Types\n\nEach column in a table has a specific data type that dictates the kind of data it can hold to the right of its name. There are many different types but some of the most common are:\n\n- **Strings**: These are sequences of characters like the words in a sentence. In SQL they are referred to as `VARCHAR` (variable character). VARCHARs can be given a maximum number of characters that they can accept in parathesis. A `VARCHAR(255)` could hold 255 characters.\n- **Datetimes**: This type represents dates and times. The keyword is SQL is `DATETIME`.\n- **Integers**: These are whole numbers. The keyword in SQL is `INT`.\n- **Decimals**: These are numbers with a fractional part, such as currency or averages. Decimals are given two parameters, a size and a number of digits that can appear after the decimal point. `DECIMAL(4,2)` could hold 4 total digits with two of those digits appearing after the decimal point. So `DECIMAL(4,2)` could hold any value between -99.99 and 99.99.\n\nA full list of data types can be found here at W3Schools: [SQL Data Types for MySQL, SQL Server, and MS Access (w3schools.com)](https://www.w3schools.com/sql/sql_datatypes.asp)\n\n## Nullability\n\nIn addition to data types, ERDs can indicate whether a column can have a null value. A null value represents the absence of a value. Whether a field can be null or not depends on the business rules and data requirements:\n\n- **Nullable Fields**: These are optional and are marked with a question mark (`?`) after the data type in this diagram.\n- **Non-Nullable Fields**: These are required and have no question mark.\n\nTaking a look at the College Courses Diagram above, you'll notice that each column in the tables has a defined data type. Some fields, like `phone_number` in the `student` table, are marked as nullable (indicated by `varchar(11)?`), meaning it is not mandatory for a record to have this information.\n\n# Practice Questions\n\n5. Suppose we need to record the `office_location` for each `instructor` in the College Courses Diagram. What data type should this column be and should it be allowed to be null? Why?\n6. Imagine we want a `last_accessed` column  in the `enrollment` table that tracks when a student last signed into their class on Canvas. What data type should this column be and should it be allowed to be null? Why?\n\n### Back: [[SQL Analytics M6 - Entity Relationship Diagrams and Table Creation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M6-Entity-Relationship-Diagram-Structure":{"title":"SQL Analytics M6 - Entity Relationship Diagram Structure","content":"\n# Entity Relationship Diagram Structure\n\n\u003ciframe src=\"https://share.descript.com/embed/waLQmDRkrh3\" width=\"640\" height=\"360\" frameborder=\"0\"  style=\"border: 1px solid #464646;\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\nEntity Relationship Diagrams come in various formats, but they share common elements that help us understand the architecture of a database. As we progress through this course, we will explore different ways to represent ERDs. For now, let's focus on a simple example using an HR database.\n\n### HR Entity Relationship Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/\n\tImages/hr_db_erd.png\"\u003e\n\n*Source:* https://www.sqltutorial.org/sql-sample-database/\n\nThe data here should look familiar, it's the diagram we used for the HR database in the Querying and Analysis assignment.\n## Table Structure\n\nThe following properties are universal for all ERDs:\n- **Tables as Boxes**: Each table in the database is represented as a box.\n- **Rows and Columns**: Inside each box, the rows represent the columns of the table. When diagraming, we don't care about what specific rows of data (e.g. the actual information for each employees). Instead we care about the structure of the tables themselves and how they relate to each other.\n- **Primary Key Notation**: In this ERD, the primary key for each table is indicated with an asterisk (`*`). Not every diagram uses an `*`, but they will always denote the primary key in some way.\n\nTake the `countries` table for example. It is represented as a box in the HR Entity Relationship Diagram.\n- **Columns**: Inside the box, you will find `country_id`, `country_name`, and `region_id`. While they are represented as rows in the diagram, these are actually the columns of the table in the database.\n- **Primary Key**: The `country_id` is the primary key, as denoted by the `*` before it.\n\n# Practice Questions \n\n1. According to the HR Entity Relationship Diagram, what will the columns be for the `countries` table?\n2. Which column is the primary key for the `countries` table? How is the primary key shown in this diagram?\n\n### Back: [[SQL Analytics M6 - Entity Relationship Diagrams and Table Creation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M6-Entity-Relationship-Diagrams-and-Table-Creation":{"title":"SQL Analytics M6 - Entity Relationship Diagrams and Table Creation","content":"# Entity Relationship Diagrams and Creating Tables\n\n## Understanding Entity Relationship Diagrams \n\nEntity Relationship Diagrams (ERDs) are a fundamental part of database design and architecture. They provide a visual representation of the data and how entities within a database relate to each other. Using ERDs can make it much easier to grasp the structure of a database without having to examine each table individually. In this section you will learn to read these diagrams, understand the relationships between tables, and apply this knowledge to create and query tables. \n\n\u003ciframe src=\"https://share.descript.com/embed/drOIZX5Yik0\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Part 1 Lessons and Practice Questions (8 pts)\n*Click into each of the lessons below for the practice questions*\n### [[SQL Analytics M6 - Entity Relationship Diagram Structure|Entity Relationship Diagram Structure]]\n\n### [[SQL Analytics M6 - Representing Relationships|Representing Relationships]]\n\n### [[SQL Analytics M6 - Data Types and Nullability|Data Types and Nullability]]\n\n### [[SQL Analytics M6 - Querying from Entity Relationship Diagrams|Querying from Entity Relationship Diagrams]]\n\n\n## Create Tables and Manage Data\n\n### CREATE, ALTER, DROP\n\n\u003ciframe src=\"https://share.descript.com/embed/zJJWNOvV9nr\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\nFull List of Data Types - [SQL Data Types for MySQL, SQL Server, and MS Access](https://www.w3schools.com/sql/sql_datatypes.asp)\n\n### INSERT, UPDATE, DELETE\n\n\u003ciframe src=\"https://share.descript.com/embed/3XaKOxT7zkS\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Constraints\n\n\u003ciframe src=\"https://share.descript.com/embed/ZOpC1jZU6tB\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### Part 2 Practice Questions (6 pts)\nCreate a new database called `Reservations` for part 2. Make sure to `USE` it when writing queries.\n\nWrite the CREATE and INSERT statements for the tables below. Use your best judgement to assign appropriate data types and constraints to your columns. After each CREATE statement, write a brief comment to give your reasoning for using (or not using) constraints on each of the columns.\n\n##### Guests\n\n| ID  | FirstName | LastName | Phone          |\n| --- | --------- | -------- | -------------- |\n| 1   | Nathaniel | Mandrake | (111) 222 3333 |\n| 2   | David     | Martinez | (333) 444 5555 |\n| 3   | Valentine | Wiggin   | (666) 777 8888 |\n\n##### Reservations\n\n| ID  | GuestID | RestaurantID | ReservationDateTime |\n| --- | ------- | ------------ | ------------------- |\n| 1   | 3       | 2            | 2024-01-02 19:00:00 |\n| 2   | 1       | 1            | 2024-01-03 9:30:00  |\n| 3   | 2       | 1            | 2024-01-03 10:00:00 |\n| 4   | 3       | 2            | 2024-01-04 17:30:00 |\n\n##### Restaurants\n\n| ID | Name                   |\n|----|------------------------|\n| 1  | Bob's Gourmet Macaroni |\n| 2  | Cheese Louise Dinner   |\n\n### Part 3 Practice Questions (6 pts)\nCreate a new database called `Cars` for part 3. Make sure to `USE` it when writing queries. Create 2nd SQL file for your part 3 scripts.\n\n```sql\n/* Create a new database first. Make sure to USE the right database! */\n\nDROP TABLE IF EXISTS cars;\nDROP TABLE IF EXISTS customers;\n\nCREATE TABLE customers (\n    CustomerId INT,\n    FirstName VARCHAR(50) NOT NULL,\n    LastName VARCHAR(50) NOT NULL,\n    Email VARCHAR(100) UNIQUE,\n    Phone VARCHAR(20) UNIQUE,\n\n    PRIMARY KEY (CustomerId)\n);\n\nCREATE TABLE cars (\n    CarId INT,\n    Make VARCHAR(50) NOT NULL,\n    Model VARCHAR(50) NOT NULL,\n    Year INT,\n    Price DECIMAL(10, 2),\n    PurchaserId INT,\n    \n    PRIMARY KEY (CarId),\n    FOREIGN KEY (PurchaserId) REFERENCES customers(CustomerId)\n);\n\nINSERT INTO customers (CustomerId, FirstName, LastName, Email, Phone) VALUES\n    (1, 'Aisha', 'Patel', 'aisha.patel@email.com', '555-1234'),\n    (2, 'John', 'Smith', 'john.smith@email.com', '555-5678'),\n    (3, 'Mei', 'Chen', 'mei.chen@email.com', '555-9012'),\n    (4, 'Kwame', 'Osei', 'kwame.osei@email.com', '555-3456'),\n    (5, 'Sarah', 'Johnson', 'sarah.johnson@email.com', '555-7890');\n\nINSERT INTO cars (CarId, Make, Model, Year, Price, PurchaserId) VALUES\n    (1, 'Toyota', 'Camry', 2022, 25000.00, 1),\n    (2, 'Honda', 'Civic', 2021, 22000.00, 5),\n    (3, 'Ford', 'Mustang', 2023, 35000.00, NULL),\n    (4, 'Chevrolet', 'Malibu', 2022, 27000.00, 3),\n    (5, 'Tesla', 'Model 3', 2023, 45000.00, 3);\n```\n\n**Without** using CREATE or INSERT, write SQL commands to handle the following scenarios for this car dealership database.\n1. The dealership has decided to start tracking the color of each car.\n2. There was a mistake when processing a recent order. The Honda Civic was actually sold to John Smith.\n3. Mei Chen has decided to return her Tesla Model 3. The dealership has agreed to take it back.\n4. Aisha Patel has changed her email address. Her new email is aishap@gmail.com.\n5. Due to a special promotion, the dealership has decided to reduce the price of the Ford Mustang by $2000.\n6. Kwame has decided to close their account. Data privacy laws require the company to permanently remove their information.\n\n## How to Submit\n\nYou will have 3 deliverables for this assignment:\n1. For part 1, paste in your answers to the text area or upload a PDF/Word document or a .txt or .sql file.\n2. For part 2, submit a SQL script with your CREATE and INSERT statements.\n3. For part 3, submit a SQL script with the table CREATEs and INSERTs provided as well as your queries for questions 1-6.\n\nUpload / submit these files for the \"M6 Practice - Entity Relationship Diagrams and Table Creation\" assignment.\n\n","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M6-Querying-from-Entity-Relationship-Diagrams":{"title":"SQL Analytics M6 - Querying from Entity Relationship Diagrams","content":"# Querying from Entity Relationship Diagrams\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1b0c0429-8f12-4f00-928d-b1160003d851\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice questions\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n7. Write a SQL query to retrieve the start date of all classes taught by the instructor with the `first_name` \"Tina\".\n8. Write a SQL query to retrieve the `annual_salary` of all instructors who teach classes that contain \"software\" anywhere in the `title`.\n\n*You won't be able to run these since I haven't given you a database for this diagram. Write the queries based on what's in the College Courses Diagram.*\n\n### Back: [[SQL Analytics M6 - Entity Relationship Diagrams and Table Creation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M6-Representing-Relationships":{"title":"SQL Analytics M6 - Representing Relationships","content":"# Representing Relationships\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b9a748d1-1060-4e42-85a0-b1160003d89b\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams (ERDs) not only show us the entities and their attributes but also how these entities interact with each other. The lines connecting the tables represent these relationships and are necessary to understand the database's structure. Let's break down how to read these relationships using the HR database ERD from our previous lessons.\n\n### HR Entity Relationship Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/hr_db_erd.png\"\u003e\n\n*Source:* https://www.sqltutorial.org/sql-sample-database/\n## Interpreting Relationships\n\nThe lines between the tables indicate how the entities relate to each other. You will notice different endings on these lines, such as a single straight line or a forked line. These symbols tell us about the type and direction of the relationship.\n### One-to-Many Relationship\n\nConsider the relationship between the `employees` and `jobs` tables in the HR Entity Relationship Diagram:\n- **Single Line**: This represents the \"one\" side of the relationship.\n- **Forked Line**: This symbolizes the \"many\" side of the relationship.\n\nThis is known as \"Crow's Foot Notation\" and is widely used in database diagraming.\n\nWhen we read the diagram:\n- **From Jobs to Employees**: Each job can have many employees. This is because the line ends with a forked symbol at the `employees` table.\n- **From Employees to Jobs**: Each employee has only one job, indicated by the single line ending at the `jobs` table.\n\nThis visualization helps us understand that each employee is associated with one job and each job title can be held by multiple employees.\n\n### Employees-Dependents Example\n\nNow, let's look at the relationship between `employees` and `dependents`. Based on the HR Entity Relationship Diagram, what is the relationship between these two table? Try to find out for yourself before continuing.\n\nTo understand the relationship, do the following:\n1. Look at the `employees` table. The line connecting it to `dependents` ends with a pronged line at the `dependents` table. This indicates that an employee can have many dependents.\n2. Now, examine the `dependents` table. The line connecting it to `employees` ends with a single straight line. This indicates that a dependent can only have one employee.\n\nThis relationships is also suggested by the structure of the table itself. We can see that `dependents` has a column for `employee_id`, suggesting that each dependent can be linked to a single employee.\n\n# Practice Questions\n\n3. What is the relationship between `regions` and `countries`? What steps did you take to determine this from the diagram?\n4. What is the relationship between `departments` and `employees`? What steps did you take to determine this from the diagram?\n\n### Back: [[SQL Analytics M6 - Entity Relationship Diagrams and Table Creation]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M7-Composite-Primary-Keys":{"title":"SQL Analytics M7 - Composite Primary Keys","content":"### Back: [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]\n# Composite Primary Keys\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=2cde06fb-34b8-4dcc-83f6-b11c015d2fc9\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Using Composite Primary Keys\n\nHow do you know when to use a composite primary key vs create a new unique identifier?\n\nWhen you're creating a joining table there are times where it is appropriate to use a composite primary key and times when you'll want to create a new ID that serves as the primary key. Making this decision is based on what information is required to uniquely identify the relationship. For example, the combination of a Student and a Class will always be unique (i.e. a student cannot have multiple enrollments in the same class). When combined, those two separate keys are sufficient to uniquely identify a record in the StudentClass (or you could call it the enrollment) joining table.\n\nThis is what your CREATE statement would look like. You don't add a new ID for the StudentClass. Instead, you declare both the ClassID and StudentID as primary keys (and foreign keys).\n\n```sql\nCREATE TABLE StudentClass(\n    id INT\n    ClassID INT,\n    StudentID INT,\n    \n    PRIMARY KEY(id),\n    FOREIGN KEY(ClassID) REFERENCES Class(ID),\n    FOREIGN KEY(StudentID) REFERENCES Student(ID)\n);\n```\n\nHowever there are times when the combination of two keys in a table are not enough to create a unique identifier. For example, imagine we had a shopping application where users could make multiple payments on an order to pay it off over time. In that situation, the combination of the UserID and the OrderID would not be enough to establish a unique identifier because we could have multiple payments with the same combination of an order and user made on different dates. Here we would either need to add more fields to our composite primary key to make it unique or instead create a new primary key column rather than use a composite primary key. In the latter case, the OrderID and UserID would remain in the Payments table but only as foreign keys, not primary keys.  \n\nIn that example the code would look like this. We create the new ID field since the OrderID and UserID together still aren't sufficient to uniquely identify the record:\n\n```sql\nCREATE TABLE Payments(\n    ID INT,\n    OrderID INT,\n    UserID INT,\n    AmountPaid DECIMAL(10,2),\n    \n    PRIMARY KEY(ID),\n    FOREIGN KEY(OrderID) REFERENCES Order(ID),\n    FOREIGN KEY(User) REFERENCES User(ID)\n);\n```\n\n### Back: [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M7-Many-to-Many-Relationships":{"title":"SQL Analytics M7 - Many-to-Many Relationships","content":"### Back: [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]\n\n# Many-to-Many Relationships\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c5b32412-9c53-4db8-a649-b0fb000ed371\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Introduction to Many-to-Many Relationships\n\nA many-to-many relationship in databases occurs when multiple records in one table are associated with multiple records in another table. This kind of relationship often requires a third table, known as a junction, associative or joining table (depending on who you ask). For this class, I will use the term joining table. The joining table is used to break a many-to-many relationship down into two one-to-many relationships.\n\nLet's explore this concept with a new set of tables for books and authors that represent a many-to-many relationship.\n\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|Luna Bellatrix|\n|2|Orion Stardust|\n|3|Celeste Moon |\n### Books Table:\n|BookID|Title|\n|---|---|\n|101|Whispers of the Galaxy|\n|102|Secrets of the Eclipse|\n|103|Shadows in the Cosmos|\n|104|Starlight Symphony|\n|105|Moonlit Myth|\n### BooksAuthors Joining Table:\n|BookID|AuthorID|\n|---|---|\n|101|1|\n|102|2|\n|103|2|\n|103|1|\n|104|3|\n|105|3|\n\nIn the `BooksAuthors` table, both `BookID` and `AuthorID` are used together to create unique combinations, allowing for the representation of multiple authors per book and vice versa.\n\n### Understanding the many-to-many Relationship\n\n1. **First One-to-Many**: Each record in the `Authors` table can be linked to multiple records in the `BooksAuthors` table. For example, AuthorID 2 is linked to BookID 102 and 103. This is a one-to-many relationship from Authors to BooksAuthors.\n\n2. **Second One-to-Many**: Similarly, each record in the `Books` table can be linked to multiple records in the `BooksAuthors` table. For instance, BookID 103 is linked to AuthorID 1 and 2. This is another one-to-many relationship, but from Books to BooksAuthors.\n\n3. **The Many-to-Many**: These two one-to-many relationships combine to form a many-to-many relationship. An author can write multiple books, and a book can be written by multiple authors. The `BooksAuthors` table serves as a bridge, linking each book to one or more authors and each author to one or more books.\n\n### Back: [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M7-Many-to-Many-Relationships-and-Entity-Relationship-Diagrams":{"title":"SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams","content":"# Many-to-Many Relationships and Entity Relationship Diagrams\n\n\u003ciframe src=\"https://share.descript.com/embed/4atZ5UxCvkD\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n### [[SQL Analytics M7 - Many-to-Many Relationships|Many-to-Many Relationships]] (~10 min)\n\n### [[SQL Analytics M7 - Table Aliasing|Table Aliasing]] (~3 min)\n\n## Creating Entity Relationship Diagrams\n\n### One-to-Many ER Diagrams \n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d43d459b-9a76-48bf-bb0d-b11c015d3d30\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Many-to-Many ER Diagrams\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b488333a-81d2-4859-9854-b11c015d3061\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### [[SQL Analytics M7 - Composite Primary Keys]] (~6 min)\n\n\n# Creating Entity Relationship Diagrams\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=99ed404e-6872-496d-95da-b11c015d3030\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Link to the diagraming tool -\u003e \u003ca href=\"https://drawsql.app\" target=\"_blank\"\u003edrawSQL\u003c/a\u003e (https://drawsql.app)\n\n\n## Practice Questions\n\nCreate an entity relationship diagram for the following questions using [drawSQL](https://drawsql.app/). *Please check with your instructor and get permission before using any other tool.*\n\n1. *(4pts)* Create an entity relationship diagram to represent the tables created in the script below.\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/book_store_script_img.png\"\u003e\n\n2. (3pts) Create an entity relationship diagram to represent the tables below.\n\n##### Guests\n\n| ID  | FirstName | LastName | Phone          |\n| --- | --------- | -------- | -------------- |\n| 1   | Nathaniel | Mandrake | (111) 222 3333 |\n| 2   | David     | Martinez | (333) 444 5555 |\n| 3   | Valentine | Wiggin   | (666) 777 8888 |\n\n##### Reservations\n\n| ID  | GuestID | RestaurantID | ReservationDateTime |\n| --- | ------- | ------------ | ------------------- |\n| 1   | 3       | 2            | 2024-01-02 19:00:00 |\n| 2   | 1       | 1            | 2024-01-03 9:30:00  |\n| 3   | 2       | 1            | 2024-01-03 10:00:00 |\n| 4   | 3       | 2            | 2024-01-04 17:30:00 |\n\n##### Restaurants\n\n| ID | Name                   |\n|----|------------------------|\n| 1  | Bob's Gourmet Macaroni |\n| 2  | Cheese Louise Dinner   |\n\n3. *(5pts)* Create an entity relationship diagram for a chain of lemonade stands. They need a database to help them track information about their stands, shipments and employees. Requirements:\n\t- Each lemonade stand has a street address and a target revenue.\n\t- Lemonade stands can receive many shipments, but a shipment can only go to one lemonade stand. The database should track which shipment is sent to which stand.\n\t- Shipments must always have the date that they were sent. A shipment may also have the date that they were received but this value might be empty if a shipment has not reached the stand yet.\n\t- Each shipment can contain many different supply items (such as lemons, water, napkins, etc.) and a supply item can belong to many shipments. The database should also track how many of each supply item was sent in a shipment.\n\t- Each supply item has a name and a price.\n\t- Lemonade stands can have many employees but an employee can only work at one stand at a time.\n\t- Each employee has a first name, a last name and an age. The database should also track which day of the week (M, Tu, W, Th, F, Sat, or Sun) that they work. Employees are only scheduled to work once each week.\n\n***Representing this scenario should require 5 tables. If you find yourself with either more or less, it's likely you need to rethink the design.***\n\n## How to Submit\n\nFor each question, take screenshots of your completed entity relationship diagrams from drawSQL.\n\nUpload each of your images to the assignment submission on Canvas. *You should be submitting a total of 3 screenshots for this assignment.*\n","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M7-Table-Aliasing":{"title":"SQL Analytics M7 - Table Aliasing","content":"### Back: [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]\n# Table Aliasing\n\n## What is Table Aliasing?\n\nTable aliasing involves giving a table in your SQL query a temporary name. This temporary name (aka alias) is often an abbreviation of the full table name. This is particularly useful in queries involving multiple tables because it simplifies the query syntax and makes it easier to read and write.\n\n### Example Using Authors and Books\n\nLet's look at the Authors and Books tables to see how table aliasing can be applied.\n### Authors Table\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n\nHere's how we might perform a join to get the Titles and Authors using aliasing:\n\n```sql\nSELECT b.Title, a.AuthorName FROM Books b\nJOIN Authors a ON b.AuthorID = a.AuthorID;\n```\n### Explanation:\n\n1. **`Books b`**: Here, `Books` is aliased as `b`. This means that in the rest of the query, we can refer to the `Books` table as `b`.\n2. **`Authors a`**: Similarly, `Authors` is aliased as `a`. Any reference to the `Authors` table can now be made using `a`.\n3. **`b.Title, a.AuthorName`**: Instead of writing `Books.Title` and `Authors.AuthorName`, we use the aliases, making the query more concise.\n4. **`b.AuthorID = a.AuthorID`**: The JOIN condition uses the aliases as a stand in for the full table names as well.\n\n### Back: [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M8-Database-Design":{"title":"SQL Analytics M8 - Database Design","content":"# M8 Database Design\n\n## Intro\n\n\n\u003ciframe src=\"https://share.descript.com/embed/PNTeC55FGFW\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\n## Database Design Example\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=f7aec8fd-4eb1-4e02-a23f-b12401592fb7\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n*Note: I'm using a different diagraming tool in this video but for your assignment use drawSQL (https://drawsql.app) like in previous weeks.*\n\n## Database Design Assignment\n\nFor this assignment, you’ll be going through the entire process of designing, creating and querying a database for a local property management company. This company manages rental properties for landlords in the greater Seattle area for a percentage of the rental income. In order to handle these properties effectively the company needs to organize and track information about their properties and tenants in a database.\n\n**Part 1 (10 pts): Create an Entity Relationship Diagram**. Create an entity relationship diagram that represents the following:\n\n1. Owners have names, phone numbers and a date that they joined the management service.\n2. An owner can have multiple properties managed by the company and a property can have one or more owners.\n3. Properties have a street address and an estimated market value.\n4. Properties have one or more units and a unit can only belong to one property. \n5. Each unit has a unit number and a monthly cost. \n6. A unit can have many tenants, but a tenant can only be in one unit.\n7. Tenants have a first name, last name and email.\n8. A payment has a date and an amount paid. It also must track the user who made the payment and the unit that the payment was made on.\n9. Tenants can make maintenance requests on units. A maintenance request has a description, a severity (1-10) and a completion status (done or not done). It also must track the tenant who made the request and the unit the request was made on.\n\n**Part 2 (10 pts): Create and populate tables**. Write CREATE statements for each table in your diagram. Then insert at least 2 rows of data into every table (although you may want to add more to some of the joining tables). Be sure that the relationships you establish between your tables match the design outlined in your diagram, I'm looking for consistency between your code and your ERD.\n\nAfter your `CREATE` and `INSERT` statements, write a `SELECT * FROM TableName` for each table in your database. Like so:\n```sql\n-- CREATE statements...\n\n-- INSERT statements...\n\nSELECT * FROM Tenants;\nSELECT * FROM Units;\nSELECT * FROM Owners;\n-- and so on for each table ...\n```\n\n# Submission Instructions\n\nFor part 1 of this assignment, take a screenshot of your completed entity relationship diagram(s) from drawSQL.\n\nFor part 2 of this assignment, please put your `CREATE`, `INSERT` and `SELECT` SQL queries into a single SQL file.\n\nUpload the .sql file and ER diagram image to the assignment on Canvas.\n","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-M9-Database-Design-Peer-Review-Assignment":{"title":"SQL Analytics M9 - Database Design Peer Review Assignment","content":"# M9 Peer Review Assignment - Database Design\n\nFor this assignment, you will be designing and implementing a database to solve a business problem. To give some exposure to the ways you might use your SQL knowledge in industry, this problem will be roughly based on a real-world application I was tasked with designing and implementing during my first software development internship.\n\n## Background\n\nEdanava is a multinational digital consulting company. This means that other large companies hire Edanava to create software solutions for them or their customers. Edanava has grown quickly and, at any given time, has thousands of **sales opportunities** to keep track of with businesses and organizations looking to potentially hire Edanava to implement a technical project. A **sales opportunity** is essentially a deal/sale in the making. It’s how the company tracks the early stages and setup of a deal before the contract is signed and work begins.\n\n### The Problem\n\nCurrently the company has no software to track these opportunities. Instead, employees on the sales team typically put each new opportunity in a word document. These documents have no enforced structure and can get very messy. Documents are emailed back and forth between different people on the sales teams which means the data can easily become unreliable or out of date as many people might end up with different versions of the same document. There is no centralized way for managers or salespeople to view or search for sales opportunities or see data or analytics about how many opportunities are closed or in progress. There is also no way to keep employees accountable or help remind them to follow up on opportunities that they may have forgotten about.\n\nNaturally, this lack of structure means that a lot of possible business falls through the cracks. In fact, the company has estimated that it is losing out on upwards of $8 million a year in possible revenue due to opportunities that are being delayed or forgotten about due to poor tracking.\n\n### Proposed Solution\n\nIn order to address this, the company has decided to create a web application that will allow the sales team to track and manage all of these opportunities in one place. The application will allow salespeople to create opportunities and add information about them. Then the application will assign available salespeople to work on the different steps of an opportunity based on their role on the team and send reminders if too much time has passed since the last step was completed. It will also allow managers to see various analytics about existing opportunities.\n\n## Assignment Instructions\n\n### Your Role\n\nAs the lead backend developer on this new project, you must architect the database that this new application will need.\n\nThe sales team has given you some example documents to use as a reference with the kind of information they’ll need the application to track (see documents below). All of this information is important and will need to be represented in your database with the appropriate relationships.\n\n- [[SQL Analytics - Supplemental Materials - Example Opportunity]]\n- [[SQL Analytics - Supplemental Materials - Opportunity Steps]]\n- [[SQL Analytics - Supplemental Materials - Sales Team Members]]\n\n### Deliverables\n\nDesign the Database: Create an Entity Relationship Diagram that contains all of the fields and relationships that will exist in your database. Make sure that your database is capable of tracking all the information currently held in the example documents without creating unnecessary redundancy. Upload an image in Canvas of your completed diagram.\n\nSQL CREATE and INSERT Script: Once you have a diagram, write the SQL script to implement the tables. INSERT the data from the example documents into your tables. Start with the diagram and base your code off of it. Upload a single .sql file with your CREATE and INSERT statements.\n\n*Keep in mind that during your final I may ask questions about your approach to this assignment so make sure you understand what you're submitting!*\n\n**NOTE: YOUR DIAGRAM AND CODE MUST MATCH.** If I see perfect code but a flawed diagram that doesn't match your implementation, my immediate assumption will be that you used ChatGPT or another AI tool to complete the coding section for you without understanding the underlying concepts.\n\nThere is some intentional ambiguity in the design requirements. When you’re unsure of a requirement, use your best judgment to come up with what would make the most sense for the scenario. Feel free to reach out or stop by office hours if you have any questions/concerns. I'm looking forward to seeing what you all come up with!\n\n### Hints\n\nThere are many possible ways to design this database depending on the decisions and interpretations you make. However, if you find yourself with fewer than 4 tables or more than 8, it's likely your design is either failing to track important data or it's not using tables efficiently. Either of these is an indication that you should step back and re-evaluate your design.\n\nA good way to validate your design is to think through the actual records it might store. It is not enough to just give me a diagram, the diagram has to be viable. It is often worth creating some sample tables in excel or google sheets according to your diagram, adding in some mock data (maybe for the example opportunity linked above), and verifying that your tables can logically store and relate the data they need to track.\n\nKeep in mind that fewer tables isn't necessarily better if it comes at the cost of losing data or failing to effectively represent a relationship.\n\nIt may be worth reviewing our lessons on database design if you aren't sure how to approach this: [[SQL Analytics M8 - Database Design]]. \n\nSTART EARLY!!! And feel free to come by office hours or work with our tutors if you need support.","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/SQL-Analytics-Midterm-Practice-Questions":{"title":"SQL Analytics - Midterm Practice Questions","content":"# Midterm Practice Questions\n\nThe midterm questions will be similar to these. Take some time to work through these without notes. A link to the solutions is at the bottom of the page.\n\n*Use the \u003ca href=\"https://kellerflint.github.io/Course-Resources/SQL-Analytics-Northwind-Database\" target=\"_blank\"\u003eNorthwind Database\u003c/a\u003e for all questions.*\n\n#1 Display all products with a price between `$10` and `$20`\n\n#2 List all employees born after `1960`.\n\n#3 Show the names of the first `5` customers and their country in alphabetical order.\n\n#4 List all orders placed in the year `1997`. Display the most recent orders first.\n\n#5 Show all product names that start with either the letter `'A'` or the letter `'B'`.\n\n#6 What is the average price of products in each category?\n\n#7 What are the earliest and latest dates that orders were placed in the Northwind database?\n\n#8 List the countries that have more than `5` customers.\n\n#9 Show the suppliers that provide more than `3` products.\n\n#10 List the `3` countries that have the most customers.\n\n#11 Challenge: List the months in `1996` where `25` or more orders were placed. \n\n# [[SQL Analytics - Midterm Practice Solutions|Midterm Practice Solutions]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Midterm-Practice-Solutions":{"title":"SQL Analytics - Midterm Practice Solutions","content":"\n# Midterm Practice Solutions\n## [[SQL Analytics - Midterm Practice Questions|Back: Midterm Practice Questions]]\n\n### Without Grouping / Aggregation\n\n\u003cbr\u003e\n\n```sql\n/* #1 Display all products with a price between $10 and $20. */\nSELECT ProductName, Price FROM Products\nWHERE Price BETWEEN 10 and 20;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #2 List all employees born after 1960. */\nSELECT FirstName, LastName, BirthDate\nFROM Employees\nWHERE BirthDate \u003e '1960-12-31';\n```\n\n\u003cbr\u003e\n\n```sql\n/* #3 Show the names of the first 5 customers and their country in alphabetical order. */\nSELECT CustomerName, Country FROM Customers\nORDER BY CustomerName\nLIMIT 5;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #4 List all orders placed in the year 1997. Display the most recent orders first. */\nSELECT OrderID, OrderDate FROM Orders\nWHERE OrderDate \u003e= '1997-01-01' AND OrderDate \u003c '1998-01-01'\nORDER BY OrderDate DESC;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #5 Show all product names that start with ethier the letter 'A' or the letter 'B'. */\nSELECT ProductName FROM Products\nWHERE ProductName LIKE 'A%' OR ProductName LIKE 'B%';\n```\n\n\u003cbr\u003e\n\n### With Grouping / Aggregation\n\n\u003cbr\u003e\n\n```sql\n/* #6 What is the average price of products in each category? */\nSELECT CategoryID, AVG(Price) AS AveragePrice FROM Products\nGROUP BY CategoryID;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #7 What are the earliest and latest dates that orders were placed in the Northwind database? */\nSELECT \n    MIN(OrderDate) AS EarliestOrder,\n    MAX(OrderDate) AS LatestOrder\nFROM Orders;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #8 List the countries that have more than 5 customers. */\nSELECT Country, COUNT(*) AS CustomerCount FROM Customers\nGROUP BY Country\nHAVING CustomerCount \u003e 5;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #9 Show the suppliers that provide more than 3 products. */\nSELECT SupplierID, COUNT(*) AS ProductCount FROM Products\nGROUP BY SupplierID\nHAVING ProductCount \u003e 3;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #10 List the 3 countries that have the most customers. */\nSELECT Country, COUNT(*) AS CustomerCount FROM Customers\nGROUP BY Country\nORDER BY CustomerCount DESC\nLIMIT 3;\n```\n\n\u003cbr\u003e\n\n```sql\n/* #11 Challenge: List the months in 1996 where 25 or more orders were placed. */\nSELECT \n\tMONTH(OrderDate) AS OrderMonth, \n    COUNT(*) AS OrderCount \nFROM Orders\nWHERE YEAR(OrderDate) = '1996'\nGROUP BY OrderMonth\nHAVING OrderCount \u003e= 25;\n```\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Northwind-Database":{"title":"SQL Analytics - Northwind Database","content":"# Northwind Database\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9fe46beb-4470-4e3f-bae4-b1330074ad4d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Initialize the Northwind Database\n\n- Create a new database/schema for the Northwind database\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/SQL-Files/NorthwindScript.sql\" target=\"_blank\"\u003eNorthwindScript (github.com)\u003c/a\u003e\n\n### Northwind Database Entity Relationship Diagram\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/NorthwindERD.png\"\u003e\n","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Supplemental-Materials-Example-Opportunity":{"title":"SQL Analytics - Supplemental Materials - Example Opportunity","content":"\nClient: Walgreens, United States, 200 Wilmot Road Deerfield\n\nOpportunity Name: Appointment Tracking App for Walgreens\n\nEstimated Revenue: 5 million\n\nCreated On: 22-10-19\n\nWorking Notes: “Walgreens needs new software to help customers sign up for and manage appointments at their pharmacy. I spoke to Mrs. Blight last week to confirm the project was viable. Our margins for the cost estimation are good and we’ve created the statement of work. We need to get the statement reviewed by management before sending it over to the client.”\n\nClient Contacts:\n-\u003e Jessica Whitwell, (111) 222-3333, jessica@wallgreens.com\n-\u003e Amity Blight, (222) 333-4444, amity@wallgreens.com\n\nLead Sales Person: Annabeth Chase\n\nSteps for this opportunity:\nConfirm Opportunity: completed on 10/21/2022, assigned to Annabeth Chase\nCreate Cost Estimation: completed on 10/23/2022, assigned to David Martinez\nCreate Statement of Work: completed on 10/24/2022 assigned to Annabeth Chase\nReview Statement of Work: no completion date yet, assigned to Si Wang-mu\n\n\n### Back [[SQL Analytics M9 - Database Design Peer Review Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Supplemental-Materials-Opportunity-Steps":{"title":"SQL Analytics - Supplemental Materials - Opportunity Steps","content":"\n**Steps in an opportunity:**\nStep 1 - Confirm Opportunity: Follow up with the client to confirm the opportunity\nStep 2 - Create Cost Estimation: Estimate the cost of completing the project and identify profit margins\nStep 3 - Create Statement of Work: Create Statement of Work document that outlines everything that will need to go into the project\nStep 4 - Review Statement of Work: Review statement of work with management\nStep 5 - Get Signatures: Get sign off from client\n\n### Back: [[SQL Analytics M9 - Database Design Peer Review Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-Supplemental-Materials-Sales-Team-Members":{"title":"SQL Analytics - Supplemental Materials - Sales Team Members","content":"\n**Current sales team members:**\nName: Annabeth Chase, Role: Sales Representative\nName: David Martinez, Role: Sales Representative\nName: Si Wang-mu, Role: Manager\nName: Duncan Idaho, Role: Sales Representative\n\n### Back [[SQL Analytics M9 - Database Design Peer Review Assignment]]","lastmodified":"2025-03-06T16:38:15.570493024Z","tags":[]},"/SQL-Analytics-_-Lesson-Index":{"title":"SQL Analytics _ Lesson Index","content":"# SQL For Data Analytics Lesson Index\n\n\n### [[SQL Analytics M1 - Introduction to Data Analytics and Relational Data]]\n\n### [[SQL Analytics M2 - Basic Querying]]\n\n### [[SQL Analytics M3 - Grouping and Aggregation]]\n\n### [[SQL Analytics M4 - SQL for Data Analytics]]\n\n### [[SQL Analytics - Midterm Practice Questions]]\n\n### [[SQL Analytics M5 - Table JOINs]]\n\n### [[SQL Analytics M6 - Entity Relationship Diagrams and Table Creation]]\n\n### [[SQL Analytics M7 - Many-to-Many Relationships and Entity Relationship Diagrams]]\n\n### [[SQL Analytics M8 - Database Design]]\n\n### [[SQL Analytics M9 - Database Design Peer Review Assignment]]\n\n### [[SQL Analytics M10 - Subqueries]]\n\n### [[SQL Analytics Final - Practice Questions]]","lastmodified":"2025-03-06T16:38:15.574493083Z","tags":[]},"/Software-Capstone-Initial-Client-Meeting-Checklist":{"title":"Software Capstone - Initial Client Meeting Checklist","content":"\n### Checklist: Preparing for the Initial Client Meeting\n\n#### 1. Understand the Project at a High Level\n\n✅ **Read the Proposal Carefully** – Ensure every team member is familiar with the problem the client wants to solve.  \n✅ **Identify Unclear Areas** – Highlight anything in the proposal that is vague, broad, or needs more clarification.  \n✅ **Research the Problem Space (Briefly)** – If the proposal mentions a specific industry, process, or challenge you’re unfamiliar with, do a quick search to get context.\n\n#### 2. Define Meeting Goals \u0026 Agenda\n\n✅ **Assign a Team Lead for the Meeting** – One person should guide the conversation and keep things moving.  \n✅ **Plan Team Introductions** – Everyone should be ready to briefly introduce themselves.  \n✅ **Draft Key Questions to Ask the Client**, focusing on:\n- **Problem \u0026 Pain Points** – What specific challenges led them to propose this project?\n- **Goals \u0026 Priorities** – What’s most important for them to achieve? What would make this project a success?\n- **Minimum Viable Product (MVP)** – If we had to deliver a first version with only the essentials, what would it include?\n- **Existing Processes \u0026 Tools** – What are they currently doing? Are there tools they have already tired?\n- **Constraints \u0026 Limitations** – Do they have any budget, legal, or other constraints that could impact the project?\n\n#### 3. Set Clear Expectations\n\n✅ **Time Commitment** – Be prepared to explain that this is a part-time student project (~5-10 hours per week per person).  \n✅ **Feasibility \u0026 Scope** – Understand that not everything in the proposal may be possible; be ready to discuss prioritization.  \n✅ **Communication Preferences** – Ask how they prefer to stay in touch (email, meetings, Slack, etc.).\n\n#### 4. Logistics \u0026 Professionalism\n\n✅ **Confirm Meeting Details** – Ensure time, date, and method (Zoom, in-person, etc.) are set.  \n✅ **Prepare to Take Notes** – Assign a notetaker to document key points and action items.  \n✅ **Be On Time \u0026 Professional** – Arrive punctually and be engaged. Dress appropriately!  \n✅ **Have a Plan for Wrapping Up the Meeting** – Summarize key takeaways and next steps before ending.\n\n#### 5. Plan for Post-Meeting Follow-Up\n\n✅ **Debrief as a Team** – Immediately after the meeting, discuss what was learned and adjust plans accordingly.  \n✅ **Send a Follow-Up Email** – Recap key discussion points, decisions made, and next steps.  \n\nRemember to CC your instructors on all client communication!\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Software-Capstone-Initial-Client-Meeting-Email-Template":{"title":"Software Capstone - Initial Client Meeting Email Template","content":"## Subject: Capstone Project Introduction – [Project Title]\n\nDear [Client's Name],\n\nWe hope you’re doing well! After reviewing proposals, we chose your submission **[Project Title]** for our capstone project and would like to set up an initial meeting to learn more about your goals and requirements.\n### Who We Are\n\nWe are a team of [X] students from Green River's Software Development program working on this project to gain real-world development experience. Our goal is to build something valuable for you while applying and refining our skills.\n\n### Next Steps: Initial Meeting\n\nTo ensure a productive partnership, we'd like to schedule a meeting to:\n\n- Introduce our team and establish a point of contact.\n- Clarify your key project requirements and priorities.\n- Discuss deliverables, feasibility, and any constraints.\n- Align on expectations for communication and bi-weekly meetings to review work.\n\n### What to Expect from Us\n\n- We are students working on this part-time (approximately 5-10 hours per week per person). While we’ll strive to build something useful, we may not be able to implement every feature.\n- We will start by assessing the project's feasibility to ensure it’s a good fit for our skills and scope. If challenges arise, we’ll discuss possible adjustments with you.\n- We plan to keep our instructors (Tina Ostrander and Keller Flint) CC’d on emails for visibility and support. You are welcome to reach out to them directly if you have any concerns.\n\n### Scheduling a Meeting\n\nLet us know your availability for an initial discussion. [Note meeting restriction / expectations like virtual vs in-person or times the team is available]. If you have any questions, feel free to reach out to me directly.\n\nWe’re looking forward to working with you!\n\nBest,\n[Your Name] \n[Your Contact Information]\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Software-Capstone-Technical-A3":{"title":"Software Capstone - Technical A3","content":"# Q3 Solution\n\n```java\n// Step 1: Define an Interface\ninterface PaymentMethod {\n    boolean process(double amount);\n}\n\n// Step 2: Implement Concrete Payment Methods\nclass PayPal implements PaymentMethod {\n    private String email;\n    private String password;\n\n    public PayPal(String email, String password) {\n        this.email = email;\n        this.password = password;\n    }\n\n    @Override\n    public boolean process(double amount) {\n        System.out.println(\"Processing PayPal payment of $\" + amount + \" for \" + email);\n        return true;  // Simulating success\n    }\n}\n\nclass CreditCard implements PaymentMethod {\n    private String cardNumber;\n    private String cvv;\n    private String billingAddress;\n\n    public CreditCard(String cardNumber, String cvv, String billingAddress) {\n        this.cardNumber = cardNumber;\n        this.cvv = cvv;\n        this.billingAddress = billingAddress;\n    }\n\n    @Override\n    public boolean process(double amount) {\n        System.out.println(\"Processing Credit Card payment of $\" + amount + \" for card \" + cardNumber);\n        return true;  // Simulating success\n    }\n}\n\nclass Bitcoin implements PaymentMethod {\n    private String walletAddress;\n\n    public Bitcoin(String walletAddress) {\n        this.walletAddress = walletAddress;\n    }\n\n    @Override\n    public boolean process(double amount) {\n        System.out.println(\"Processing Bitcoin payment of $\" + amount + \" to wallet \" + walletAddress);\n        return true;  // Simulating success\n    }\n}\n\n// Step 3: Checkout Function\npublic class PaymentProcessor {\n    public static void checkout(PaymentMethod paymentMethod, double amount) {\n        if (paymentMethod.process(amount)) {\n            System.out.println(\"Payment successful!\");\n        } else {\n            System.out.println(\"Payment failed!\");\n        }\n    }\n\n    // Step 4: Demonstration\n    public static void main(String[] args) {\n        PaymentMethod paypalPayment = new PayPal(\"user@example.com\", \"securepassword\");\n        PaymentMethod creditCardPayment = new CreditCard(\"1234-5678-9012-3456\", \"123\", \"123 Main St\");\n        PaymentMethod bitcoinPayment = new Bitcoin(\"1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\");\n\n        checkout(paypalPayment, 50.00);\n        checkout(creditCardPayment, 100.00);\n        checkout(bitcoinPayment, 200.00);\n    }\n}\n```\n\n### **Example Usage:**  \n```java\npublic static void checkout(PaymentMethod paymentMethod, double amount) {\n    if (paymentMethod.process(amount)) {\n        System.out.println(\"Payment successful!\");\n    } else {\n        System.out.println(\"Payment failed!\");\n    }\n}\n\npublic static void main(String[] args) {\n    PaymentMethod paypalPayment = new PayPal(\"user@example.com\", \"securepassword\");\n    PaymentMethod creditCardPayment = new CreditCard(\"1234-5678-9012-3456\", \"123\", \"123 Main St\");\n    PaymentMethod bitcoinPayment = new Bitcoin(\"1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\");\n\n    checkout(paypalPayment, 50.00);  \n    checkout(creditCardPayment, 100.00);  \n    checkout(bitcoinPayment, 200.00);  \n}\n```\n\n### **Expected Console Output:**\n```\nProcessing PayPal payment of $50.0 for user@example.com\nPayment successful!\nProcessing Credit Card payment of $100.0 for card 1234-5678-9012-3456\nPayment successful!\nProcessing Bitcoin payment of $200.0 to wallet 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\nPayment successful!\n```\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Software-Capstone-Technical-A4":{"title":"Software Capstone - Technical A4","content":"# Q4 Solution\n### **Step 1: Define the Base Class (`Notification`)**  \n- Stores shared data (`recipient`, `message`).  \n- Defines the common behavior (`send()` must be implemented in subclasses).  \n- Implements a logging feature that all notifications inherit.\n  \n```java\nabstract class Notification {\n    protected String recipient;\n    protected String message;\n\n    public Notification(String recipient, String message) {\n        this.recipient = recipient;\n        this.message = message;\n    }\n\n    public abstract void send();\n\n    protected void logDelivery() {\n        System.out.println(\"Notification sent successfully.\\n\");\n    }\n}\n```\n\n\n### **Step 2: Implement Subclasses for Each Notification Type**  \nEach subclass **inherits from `Notification`** and **implements `send()` uniquely**.  \n\n```java\nclass EmailNotification extends Notification {\n    private String subject;\n\n    public EmailNotification(String recipient, String subject, String message) {\n        super(recipient, message);\n        this.subject = subject;\n    }\n\n    @Override\n    public void send() {\n        System.out.println(\"Sending Email to \" + recipient + \":\");\n        System.out.println(\"Subject: \" + subject);\n        System.out.println(\"Body: \\\"\" + message + \"\\\"\");\n        logDelivery();\n    }\n}\n\nclass SMSNotification extends Notification {\n    public SMSNotification(String recipient, String message) {\n        super(recipient, message);\n    }\n\n    @Override\n    public void send() {\n        System.out.println(\"Sending SMS to \" + recipient + \":\");\n        System.out.println(\"Message: \\\"\" + message + \"\\\"\");\n        logDelivery();\n    }\n}\n\nclass PushNotification extends Notification {\n    public PushNotification(String recipient, String message) {\n        super(recipient, message);\n    }\n\n    @Override\n    public void send() {\n        System.out.println(\"Sending Push Notification to \" + recipient + \":\");\n        System.out.println(\"Alert: \\\"\" + message + \"\\\"\");\n        logDelivery();\n    }\n}\n```\n\n### **Step 3: Demonstration**\n\n```java\npublic class NotificationSystem {\n    public static void main(String[] args) {\n        Notification email = new EmailNotification(\"user@example.com\", \"Important Update\", \"You've got mail!\");\n        Notification sms = new SMSNotification(\"+1234567890\", \"New message received!\");\n        Notification push = new PushNotification(\"user123\", \"Check your app for updates!\");\n\n        email.send();\n        sms.send();\n        push.send();\n    }\n}\n```\n\n### **Expected Console Output**\n```\nSending Email to user@example.com:  \nSubject: Important Update  \nBody: \"You've got mail!\"  \nNotification sent successfully.\n\nSending SMS to +1234567890:  \nMessage: \"New message received!\"  \nNotification sent successfully.\n\nSending Push Notification to user123:  \nAlert: \"Check your app for updates!\"  \nNotification sent successfully.\n```\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Software-Capstone-Technical-Q3":{"title":"Software Capstone - Technical Q3","content":"# Whiteboarding Question: Payment Processing System  \n\nYou are designing a payment processing system for an online store. The store supports multiple payment methods.\n\n### **Requirements:**  \n1. The checkout system must be able to process any payment in the same way.  \n2. Each payment method must have a `process(double amount) -\u003e boolean` function that:  \n   - Takes an amount as input.  \n   - Returns whether the payment was successful.  \n3. Different payment methods require different data to be created:  \n   - **PayPal** needs an email and password.  \n   - **Credit Card** needs a card number, CVV, and billing address.  \n   - **Bitcoin** needs a wallet address.  \n4. The system should be easily extendable to support future payment methods.  \n\n### **Task**  \nDesign and implement the classes required to make this example work. Your solution should:  \n- Define a structure that ensures all payment methods can be handled the same way at checkout.  \n- Ensure all payment methods follow a consistent structure.  \n- Make it easy to add new payment methods without modifying existing code.  \n\n### **Example Expected Usage:**  \n```java\npublic static void checkout(PaymentMethod paymentMethod, double amount) {\n    if (paymentMethod.process(amount)) {\n        System.out.println(\"Payment successful!\");\n    } else {\n        System.out.println(\"Payment failed!\");\n    }\n}\n\npublic static void main(String[] args) {\n    PaymentMethod paypalPayment = new PayPal(\"user@example.com\", \"securepassword\");\n    PaymentMethod creditCardPayment = new CreditCard(\"1234-5678-9012-3456\", \"123\", \"123 Main St\");\n    PaymentMethod bitcoinPayment = new Bitcoin(\"1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\");\n\n    checkout(paypalPayment, 50.00);  \n    checkout(creditCardPayment, 100.00);  \n    checkout(bitcoinPayment, 200.00);  \n}\n```\n\n### **Expected Console Output:**\n```\nProcessing PayPal payment of $50.0 for user@example.com\nPayment successful!\nProcessing Credit Card payment of $100.0 for card 1234-5678-9012-3456\nPayment successful!\nProcessing Bitcoin payment of $200.0 to wallet 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\nPayment successful!\n```\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Software-Capstone-Technical-Q4":{"title":"Software Capstone - Technical Q4","content":"# Whiteboarding Question: Notification System  \n\n## Problem Statement  \nYou are designing a notification system that sends messages through different channels. The system should support multiple types of notifications while ensuring all notifications follow a common structure.  \n\n\n### **Requirements:**  \n- Every notification must have a recipient (who receives the message).  \n- Every notification must have a message body.  \n- Each notification type must have a `send()` method that prints a formatted message to the console.  \n- Different types of notifications format their messages differently:  \n\n  **EmailNotification** should print:  \n  ```\n  Sending Email to user@example.com:  \n  Subject: Important Update  \n  Body: \"You've got mail!\"  \n  ```  \n\n  **SMSNotification** should print:  \n  ```\n  Sending SMS to +1234567890:  \n  Message: \"New message received!\"  \n  ```  \n\n  **PushNotification** should print:  \n  ```\n  Sending Push Notification to user123:  \n  Alert: \"Check your app for updates!\"  \n  ```  \n\n- All notifications should log their delivery after being sent. Example:  \n  ```\n  Notification sent successfully.  \n  ```  \n- The system should be easily extendable to support new notification types without modifying existing code.  \n\n---\n\n## **Example Expected Usage**\n```java\nNotification email = new EmailNotification(\"user@example.com\", \"Important Update\", \"You've got mail!\");\nNotification sms = new SMSNotification(\"+1234567890\", \"New message received!\");\nNotification push = new PushNotification(\"user123\", \"Check your app for updates!\");\n\nemail.send();\nsms.send();\npush.send();\n```\n\n#### **Expected Console Output**\n```\nSending Email to user@example.com:  \nSubject: Important Update  \nBody: \"You've got mail!\"  \nNotification sent successfully.\n\nSending SMS to +1234567890:  \nMessage: \"New message received!\"  \nNotification sent successfully.\n\nSending Push Notification to user123:  \nAlert: \"Check your app for updates!\"  \nNotification sent successfully.\n```\n\n---\n\n## **Task**\n- Design and implement the `Notification` structure so that all notifications share common behavior and data.  \n- Ensure that new notification types can be added without modifying existing code.  \n- Implement shared functionality (such as logging) in a way that applies to all notifications without duplicating code.  \n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Environment-Setup":{"title":"Web Frameworks - Environment Setup","content":"# Environment Setup Guide\n\n## 1. Install Visual Studio Code (VSCode)\nVSCode is a powerful and lightweight code editor suitable for various programming tasks.\n\n- **Download VSCode**: [Visual Studio Code Download](https://code.visualstudio.com/)\n- After installation, open VSCode and navigate to the Extensions marketplace by clicking on the Extensions icon in the Activity Bar (left side of the VSCode window).\n\n### Required Extensions\n- **Live Share**: Install the Live Share extension (published by Microsoft) to enable real-time collaboration in your coding sessions. \n\n### Recommended Extensions for Later Use\n- **EJS Language Support**: Provides syntax highlighting and support for Embedded JavaScript (EJS) templates. \n  - Publisher: DigitalBrainstem\n- **EJS Beautify**: Helps format EJS code for better readability.\n  - Publisher: j69\n\n## 2. Install Microsoft Teams (or Use in Browser)\nMicrosoft Teams is essential for communication and collaboration.\n- **Download Microsoft Teams**: [Microsoft Teams Download](https://www.microsoft.com/en-us/microsoft-teams/download-app)\n- **Via Browser:** [Sign In | Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/log-in)\n- Sign in with your Green River student account credentials.\n- Open Teams and send a message in the chat to confirm your account is active.\n\n## 3. Install Node.js\nNode.js is a JavaScript runtime that allows you to run JavaScript code outside the browser.\n\n- **Download Node.js**: [Node.js Download](https://nodejs.org/en)\n- After installation, verify the installation by opening a terminal and typing:\n  ```bash\n  node -v\n  ```\n- This should print the version of Node.js installed on your system.","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Midterm":{"title":"Web Frameworks - Midterm","content":"# Midterm: JavaScript Technical Interview\n\n### Overview\nThis midterm will consist of a 15-minute one-on-one session with your instructor via Zoom. You will be asked to share your screen of Visual Studio Code to write code and answer technical questions.\n\n### Scheduling\nBook your midterm slot here: [Book time with Keller Flint-Blanchard: 305 Midterms](https://outlook.office.com/bookwithme/user/cea5ca32f4144d5da65db8176793e9e8@greenriver.edu/meetingtype/GBE42tkH3Eq-EEHJ1u9KPQ2?anonymous\u0026ep=mcard). Please sign in with your GRC student account when booking.\n\n*If you cannot make one of these times work, please get in touch.*\n\n### Joining\n1. Before your timeslot, prepare your development environment:\n\t- Launch Visual Studio Code\n\t- Create a new file called `midterm.js` and add `console.log('Hello, world!');`\n\t- Open the terminal and run `node midterm.js` to ensure everything is up and running. You should see the output `Hello, world!` in your terminal.\n2. Join the meeting a few minutes early in case of any connection or technical issues.\n3. Turn your camera on!\n4. Join my office hours on Zoom at the scheduled time:\n\t- Link: [https://us02web.zoom.us/j/6106963583?pwd=VkFBczBxRUpMN0pHcHVDNGlHWVpndz09](https://us02web.zoom.us/j/6106963583?pwd=VkFBczBxRUpMN0pHcHVDNGlHWVpndz09)\n\t- Meeting ID: 610 696 3583\n\t- Passcode: spaceship\n\n### Grading\n50% of your grade is awarded for showing up at your scheduled time and making a good faith effort to answer questions. The remaining 50% will be based on how far you are able to get in completing a few technical questions.\n\n**The midterm is CLOSED NOTES!** Like a real technical interview, the use of external tools (Google, AI, Notes, etc.) is not permitted.\n\n### Topics Covered\n\n##### JavaScript\n- Assign variables\n- Add, subtract, multiply, and divide variables\n- Use the modulus operator\n- Check for equality\n- Use `for` and `while` loops\n- Write functions that returns values\n- Call functions\n- Create arrays (empty and with starting values)\n- Access elements in an array or string\n- Find the length of an array or string\n- Add and remove items from an array\n- Use `if` `else if` and `else` for conditional logic\n\n##### Flexbox\n- `display`\n- `flex-direction`\n- `flex-wrap`\n- `justify-content`\n- `align-content`\n- `align-items`\n- `gap`\n\n##### Grid\n- `display` \n- `grid-template-columns`\n- `grid-template-rows`\n- `justify-content`\n- `align-content`\n- `align-items`\n- `gap`\n\n##### Web Development\n- Client vs Server\n- Web Requests\n\n### How to Prepare\n1. Ensure you are comfortable with the topics listed above.\n2. Try to do the JavaScript midterm practice questions ([[Web Frameworks - Midterm Practice|305 JS Midterm Practice Questions]]) without notes. Questions on the midterm will be similar to these. For the flexbox and grid CSS topics, review / practice with [Flexbox Froggy - A game for learning CSS flexbox](https://flexboxfroggy.com/) and [Grid Garden - A game for learning CSS grid](https://cssgridgarden.com/).\n3. If you have questions or want additional practice, seek support before the midterm:\n\t- Go to the Friday open labs at Auburn Center or work with our tutors (see the [Tutoring Schedule](https://egator.greenriver.edu/courses/2493988/pages/tutoring-schedule?module_item_id=85598895) for details)\n\t- Attend board masters!\n\t- Stop by office hours if you have any questions","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Midterm-Practice":{"title":"Web Frameworks - Midterm Practice","content":"# Technical Interview Practice\n\nThese questions are designed to help prepare you for the Technical Interview. Try completing these practice problems without using notes or online resources.\n\n### Questions\n\n*Use loops rather than relying on built-in JS functions such as reverse() or filter() for the following questions. In a real interview this restriction may or may not apply, but it's good practice!*\n\n##### Return the reverse of the string passed to the function.\n```js\nfunction reverseString(str) {\n    // TODO\n}\n```\n- Write code to test this function.\n- What edge cases should you consider?\n\n##### Return the output of the calculation. Supported operators are `+`, `-`, `*`, `/` passed in as a string.\n```js\nfunction calculate(num1, operator, num2) {\n    // TODO\n}\n```\n- Write code to test this function.\n- What edge cases should you consider?\n\n##### Return the number of even numbers in the array\n```js\nfunction countEvenNumbers(arr) {\n\t// TODO\n}\n```\n- Write code to test this function.\n- What edge cases should you consider?\n\n##### Return the index of the first occurrence of the element in the array\n```js\nfunction findFirstIndex(arr, element) {\n    // TODO\n}\n```\n- Write code to test this function.\n- What edge cases should you consider?\n\n##### Write a function that prints numbers from 1 to n. \nFor multiples of 3, print \"Fizz\" instead of the number. \nFor multiples of 5, print \"Buzz\". \nFor numbers which are multiples of both 3 and 5, print \"FizzBuzz\".\n```js\nfunction fizzBuzz(n) {\n\t// TODO\n}\n```\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Midterm-Redo":{"title":"Web Frameworks - Midterm Redo","content":"# Midterm: JavaScript Technical Interview Redo\n\n### Overview\nIf you are not satisfied with your performance on the midterm technical interview you have the opportunity take it again. A higher score on the second attempt can replace your score (up to a max of 90%) on the first attempt.\n\nThe second attempt at midterm will consist of a similar 15-minute one-on-one session with your instructor via Zoom. You will be asked to share your screen of Visual Studio Code to write code and answer technical questions. Information about the format and topics can be found here: [[Web Frameworks - Midterm|305 Midterm]]\n\n### Requirements\nBefore scheduling your second attempt you must spend some time working with tutors practicing these questions. The tutors have been given instructions and example questions to help you prepare. After working with a tutor, remind them to send me a quick email me at kflint-blanchard@greenriver.edu to confirm that you attended.\n### Scheduling\nBook your second midterm attempt in advance during my office hours: [Book time with Keller Flint-Blanchard: Office Hours](https://outlook.office.com/bookwithme/user/cea5ca32f4144d5da65db8176793e9e8@greenriver.edu/meetingtype/iI_7uAs97EmpBaRiK_wfqw2?anonymous\u0026ep=mcard). Please sign in with your GRC student account when booking. \n\n*If you cannot make one of these times work, please get in touch.*\n\n### How to Prepare\n1. If you have not already, takes some time to complete the ([[Web Frameworks - Midterm Practice|305 JS Midterm Practice Questions]]) without notes. Questions on the midterm will be similar to these. For the flexbox and grid CSS topics, review / practice with [Flexbox Froggy - A game for learning CSS flexbox](https://flexboxfroggy.com/) and [Grid Garden - A game for learning CSS grid](https://cssgridgarden.com/).\n2. Go to the Friday open labs at Auburn Center or work with our tutors (see the [Tutoring Schedule](https://egator.greenriver.edu/courses/2493988/pages/tutoring-schedule?module_item_id=85598895) for details) \n3. If you have questions or want additional practice, seek support:\n\t- Work with tutors\n\t- Attend board masters\n\t- Stop by office hours if you have any questions","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Node-Demo":{"title":"Web Frameworks - Node Demo","content":"[pizza-node-demo/views at starter · kellerflint/pizza-node-demo (github.com)](https://github.com/kellerflint/pizza-node-demo/tree/starter/views)\n\n```js\n// Parse URL-encoded bodies (as sent by HTML forms)  \napp.use(express.urlencoded({ extended: true }));\n```\n\n```js\n// Passing order details to the view\nres.render('confirmation', { order: orderDetails });\n```\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Node-Project-Setup":{"title":"Web Frameworks - Node Project Setup","content":"# Node Project Setup\n### Installing Node\nDownloads:\n- [Node.js (nodejs.org)](https://nodejs.org/en)\n- [Visual Studio Code - Code Editing. Redefined](https://code.visualstudio.com/)\n\nYou can test that node installed successfully by opening your terminal and typing `node -v`.\n\n### Project Setup\n\nCreate a folder for the project. `cd` into the folder. This is the project root.\n\nFrom the project root, initialize a new project:\n```bash\nnpm init\n```\n- Entry Point: app.js\n- Use defaults for the rest\n\nInstall express and ejs:\n```bash\nnpm install express ejs\n```\n\nCreate a \"views\" folder. Project structure should be:\n```\nyour-project/\n├── views/\n│   └── home.ejs\n│   └── views here...\n├── public/\n│   └── styles/\n│       └── home.css\n│       └── styles here...\n│   └── images/\n│       └── images here...\n│   └── scripts/\n│       └── scripts here...\n├── package.json (generated from npm init)\n├── package-lock.json (generated from npm init)\n├── node_modules (generated from npm install)\n└── app.js\n```\n\nCreate app.js file in the project root with the following:\n```js\n// Get the express package \nconst express = require('express');\n\n// Instantiate an express (web) app\nconst app = express();\n\n// Define a port number for the app to listen on\nconst PORT = 3000;\n\n// Tell the app to encode data into JSON format\napp.use(express.urlencoded({ extended: false }));\n\n// Set your view (templating) engine to \"EJS\"\n// (We use a templating engine to create dynamic web pages)\napp.set('view engine', 'ejs');\n\n// Define a \"default\" route, \n// e.g. jshmo.greenriverdev.com/reservation-app/\napp.get('/', (req, res) =\u003e {\n\t// Log message to the server's console\n\tconsole.log(\"Hello, world - server!\");\n\n    // Return home page\n    res.render('home');\n});\n\n// Define a \"confirm\" route, using the POST method\napp.post('/confirm', (req, res) =\u003e {\n    // Get the data from the form that was submitted\n    // from the body of the request object\n    let details = req.body;\n\n    // Display the confirm page, pass the data\n    res.render('confirm', { details: details });\n})\n\n// Tell the app to listen for requests on the designated port\napp.listen(PORT, () =\u003e {\n    console.log(`Server running on port http://localhost:${PORT}`)\n});\n```\n\nRun node app from root in terminal:\n```shell\nnode app.js\n```\n\nIn your browser go to:\n```\nhttp://localhost:3000\n```\n\nYou can stop the node app by pressing `CTRL + c` in the terminal.\n\nTo see changes made to the server, you will need to stop `CTRL + c` and restart `node app.js` the app.\n\n### Database Connection Example (reservation app)\n\n```js\n// Get the express package \nconst express = require('express');\n\nconst mariadb = require('mariadb');\n\n// Configure the database connection\nconst pool = mariadb.createPool({\n    host: 'localhost',\n    user: 'root',\n    password: '1234',\n    database: 'reservations'\n});\n\n// Connect to the database\nasync function connect() {\n    try {\n        let conn = await pool.getConnection();\n        console.log('Connected to the database');\n        return conn;\n    } catch (err) {\n        console.log('Error connecting to the database: ' + err);\n    }\n}\n\n// Instantiate an express (web) app\nconst app = express();\n\n// Define a port number for the app to listen on\nconst PORT = 3000;\n\n// Tell the app to encode data into JSON format\napp.use(express.urlencoded({ extended: false }));\n\n// Tell the app to use the \"public\" folder to serve static files\napp.use(express.static('public'));\n\n// Set your view (templating) engine to \"EJS\"\n// (We use a templating engine to create dynamic web pages)\napp.set('view engine', 'ejs');\n\n// Define a \"default\" route, \n// e.g. jshmo.greenriverdev.com/reservation-app/\napp.get('/', (req, res) =\u003e {\n    console.log(\"Hello, world - server!\");\n\n    // Return home page\n    res.render('home');\n});\n\n// Define a \"confirm\" route, using the GET method\napp.get('/confirm', (req, res) =\u003e {\n    // Send a response to the client\n    res.send('You need to post to this page!');\n});\n\n// Define a \"confirm\" route, using the POST method\napp.post('/confirm', async (req, res) =\u003e {\n    console.log(req.body)\n\n    // Get the data from the form that was submitted\n    // from the body of the request object\n    const data = {\n        firstName: req.body.firstName,\n        lastName: req.body.lastName,\n        toppings: req.body.toppings\n    }\n\n    console.log(data);\n\n    // Connect to the database\n    const conn = await connect();\n    \n    // Insert the data into the database\n    await conn.query(`INSERT INTO users (firstName, lastName) VALUES ('${data.firstName}', '${data.lastName}');`);\n\n    // Display the confirm page, pass the data\n    res.render('confirm', { details: data });\n});\n\napp.get('/confirmations', async (req, res) =\u003e {\n    // Get the data from the database\n    const conn = await connect();\n\n    // Query the database\n    const rows = await conn.query('SELECT * FROM users;');\n\n    // Display the confirm page, pass the data\n    res.render('confirmations', { confirmations: rows });\n});\n\n// Tell the app to listen for requests on the designated port\napp.listen(PORT, () =\u003e {\n    console.log(`Server running on port http://localhost:${PORT}`)\n});\n```","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Pair-Program-Appointment-Scheduler":{"title":"Web Frameworks - Pair Program - Appointment Scheduler","content":"# Pair Program: Appointment Scheduler\n\n## Overview\n\nYour goal is to create a simple appointment scheduler. The application will include a form where users can enter their first and last name along with a meeting date and time. The form will submit this data to a backend server, which will store and return the array of booked appointments.\n\n---\n\n## Collaboration Setup\n\n### GitHub Repository Setup\n\n1. One person creates a new repository on GitHub with a README file.\n    \n2. Both partners create a new folder on their local machine and open it in VS Code.\n    \n3. Open the VS Code terminal and run the following command inside the folder:\n    \n    ```\n    git clone \u003crepo-url\u003e .\n    ```\n    \n\n### Collaboration Process\n\n- Only **one person should be typing** at a time (the driver). The other person (the navigator) provides guidance.\n    \n- Switch roles **every 5 minutes**.\n    \n- Follow the proper Git workflow:\n    \n    1. **Before starting work**: Pull the latest changes `git pull`\n        \n    2. **After making changes**:\n        \n        - Stage changes: `git add .`\n            \n        - Commit changes: `git commit -m \"your message here\"`\n            \n        - Push changes: `git push`\n            \n    3. **Before switching roles**: The new driver pulls changes again to ensure they're up to date.\n        \n\n---\n\n## Step-by-Step Implementation\n\n### Step 1: Initialize the Project\n\n- Set up a new Node.js project.\n    \n- Create an Express server that responds with \"Hello, World!\".\n    \n- Reference: [kellerflint/Node-Pizza-App at 1-hello-world](https://github.com/kellerflint/Node-Pizza-App/tree/1-hello-world?tab=readme-ov-file#create-your-project)\n    \n- _Remember to .gitignore your node_modules/_\n    \n\n### Step 2: Create the Appointment Form\n\n- Build a simple HTML form with the following inputs:\n    - First Name\n    - Last Name\n\t- Date (Use `\u003cinput type=\"date\"\u003e`)\n\t- Time (Use `\u003cinput type=\"time\"\u003e`)\n\t- Submit Button\n- Serve this page using Express.\n    \n- Reference: [kellerflint/Node-Pizza-App at 2-static-files](https://github.com/kellerflint/Node-Pizza-App/tree/2-static-files?tab=readme-ov-file#serving-static-files-with-express-2-static-files)\n    \n\n### Step 3: Handle Form Submissions\n\n- Create a POST route to handle form submissions.\n    \n- Store submitted appointments in an array on the backend.\n    \n- Add a timestamp (the time of form submission) to each stored appointment.\n    \n- Send users to a confirmation page after submitting the form.\n    \n- Reference: [kellerflint/Node-Pizza-App at 3-posting-data](https://github.com/kellerflint/Node-Pizza-App/tree/3-posting-data?tab=readme-ov-file#setting-up-form-processing)\n    \n\n### Step 4: Create an Admin Route\n\n- Set up an admin route that displays all submitted appointments.\n\n---\n\n## Challenges\n\n- **Generate Dynamic Admin Page**: Instead of showing raw data, write code to generate HTML that displays the stored appointments in a user-friendly way.\n- **Validation**: Prevent the server from saving submissions if the first or last name is blank. \n- **Generate Dynamic Confirmation Page**: After form submission instead of sending the user a static confirmation page, write code to generate the HTML to display a confirmation with the data they entered.\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]},"/Web-Frameworks-Paired-Program-Mini-Blog-with-Database":{"title":"Web Frameworks - Paired Program Mini-Blog with Database","content":"# Paired Program: Mini Blog with Database\n\n## Objective\n\nYour task is to enhance the mini blog app by replacing the in-memory array with a database. This will allow blog entries to persist beyond the server session, making the app more practical for real-world use.\n\n## Requirements\n\nYou will need to have your database and MySQL Workbench installed and have completed the first mini blog app. You’ll be connecting to a database to store and retrieve data instead of using an array.\n\n## Setup\n\n **Database Setup**:\n- Open your MariaDB client and create a new database for the blog app.\n- Within that database, create a table called `posts` with columns for `id`, `author`, `title`, `content`, and `created_at`. Make sure the `id` is set as the primary key and is auto-incrementing, while `created_at` defaults to the current timestamp.\n- Here’s an example of how to structure the columns:\n\t- `id`: integer, primary key, auto_increment\n\t- `author`: string\n\t- `title`: string\n\t- `content`: text\n\n**Connect to MariaDB**:\n- In your `app.js` file, install the `mariadb` package. Import the package.\n- Use the `mariadb.createPool()` method to set up a connection pool.\n- In the connection pool configuration, specify the `host`, `user`, `password`, `database`.\n- Write a helper function called `connect()` to retrieve a connection from the pool.\n\n```js\n// Import the MariaDB Package\nconst mariadb = require('mariadb');\n\n// Configure the database connection\nconst pool = mariadb.createPool({\n    host: 'localhost',\n    user: 'root',\n    password: '1234',\n    database: 'miniblog'\n});\n\n// Function for connecting to the database\nasync function connect() {\n    try {\n        let conn = await pool.getConnection();\n        console.log('Connected to the database');\n        return conn;\n    } catch (err) {\n        console.log('Error connecting to the database: ' + err);\n    }\n}\n```\n\n\u003cbr\u003e\n\u003cbr\u003e\n## Update the Form Submission Route\n\n**Convert the `/submit` Route to Save Data in the Database**:\n- In your existing `/submit` POST route, instead of pushing the new post to an array, connect to the database and insert the submitted post data into the `posts` table.\n- Retrieve `author`, `title`, and `content` from the request, and use an SQL `INSERT` query to save them in the database.\n- After storing the data, display a confirmation page showing the submitted post details.\n\n**Return to the Form**:\n- Test that the `/submit` route successfully stores posts in the database and shows a confirmation for the submission.\n\n## Backend Validation\n\n**Prevent Submission of Invalid Posts**: To ensure data integrity, implement the following validation logic in your `/submit` POST route before inserting the data into the database:\n- Ensure that the `title` is not empty and has more than 5 characters.\n- Ensure that the `content` is not empty.\n- Allow `author` to be an empty string. If `author` is empty it should be inserted into the database as `NULL` rather than an empty string.\n\nRemove leading or trailing whitespace:\n```js\ndata.firstName.trim()\n```\n\n**Show an error message on the frontend**: Send the user back to the home page along with any error messages from the backend.\n\n**Make the Form Sticky**: Retain user-entered data in the form fields after any backend validation errors.\n\nYou will need to pass both the form data and the errors to the home page from your `/submit` route:\n```js\nres.render('home', { data: data, errors: errors });\n```\n## Retrieve All Posts from the Database\n\n**Set Up the `/entries` Route**:\n- Create a new route called `/entries` to display all blog posts.\n- In this route, query the database to retrieve all posts from the `posts` table, ordering by `created_at` in descending order.\n- Use `res.render` to display an `entries.ejs` page that will show all posts.\n\n**Render the Posts in EJS**:\n- In your `entries.ejs` file, use a loop to display each post's `author`, `title`, `content`, and `created_at`.\n- Add a message like “No posts found” if there are no entries.\n\n**Test the App:**\n- Test the app by submitting a few posts via the form and verifying that each post appears on the `/entries` page.\n- Check that the data persists even after restarting the server, proving the posts are stored in the database.\n","lastmodified":"2025-03-06T16:38:15.61849373Z","tags":[]}}